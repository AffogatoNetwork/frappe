{
  "contractName": "FeeBurnerWrapperProxy",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "alerter",
          "type": "address"
        }
      ],
      "name": "removeAlerter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "pendingAdmin",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOperators",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "token",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        },
        {
          "name": "sendTo",
          "type": "address"
        }
      ],
      "name": "withdrawToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newAlerter",
          "type": "address"
        }
      ],
      "name": "addAlerter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "transferAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "claimAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "feeBurnerWrapperContract",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "transferAdminQuickly",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAlerters",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOperator",
          "type": "address"
        }
      ],
      "name": "addOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "removeOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "amount",
          "type": "uint256"
        },
        {
          "name": "sendTo",
          "type": "address"
        }
      ],
      "name": "withdrawEther",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "burnerWrapperAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "sendTo",
          "type": "address"
        }
      ],
      "name": "TokenWithdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "sendTo",
          "type": "address"
        }
      ],
      "name": "EtherWithdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "pendingAdmin",
          "type": "address"
        }
      ],
      "name": "TransferAdminPending",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "previousAdmin",
          "type": "address"
        }
      ],
      "name": "AdminClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newAlerter",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "isAdd",
          "type": "bool"
        }
      ],
      "name": "AlerterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newOperator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "isAdd",
          "type": "bool"
        }
      ],
      "name": "OperatorAdded",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "wallet",
          "type": "address"
        }
      ],
      "name": "registerWallet",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "burnerWrapperAddress",
          "type": "address"
        }
      ],
      "name": "setFeeBurnerWrapper",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.18+commit.9cf6e910\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"alerter\",\"type\":\"address\"}],\"name\":\"removeAlerter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pendingAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOperators\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"sendTo\",\"type\":\"address\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"burnerWrapperAddress\",\"type\":\"address\"}],\"name\":\"setFeeBurnerWrapper\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newAlerter\",\"type\":\"address\"}],\"name\":\"addAlerter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"transferAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"registerWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claimAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeBurnerWrapperContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"transferAdminQuickly\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAlerters\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOperator\",\"type\":\"address\"}],\"name\":\"addOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"removeOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"sendTo\",\"type\":\"address\"}],\"name\":\"withdrawEther\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"burnerWrapperAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"sendTo\",\"type\":\"address\"}],\"name\":\"TokenWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"sendTo\",\"type\":\"address\"}],\"name\":\"EtherWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"pendingAdmin\",\"type\":\"address\"}],\"name\":\"TransferAdminPending\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newAdmin\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"previousAdmin\",\"type\":\"address\"}],\"name\":\"AdminClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newAlerter\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"isAdd\",\"type\":\"bool\"}],\"name\":\"AlerterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newOperator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"isAdd\",\"type\":\"bool\"}],\"name\":\"OperatorAdded\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"claimAdmin()\":{\"details\":\"Allows the pendingAdmin address to finalize the change admin process.\"},\"transferAdmin(address)\":{\"details\":\"Allows the current admin to set the pendingAdmin address.\",\"params\":{\"newAdmin\":\"The address to transfer ownership to.\"}},\"transferAdminQuickly(address)\":{\"details\":\"Allows the current admin to set the admin in one tx. Useful initial deployment.\",\"params\":{\"newAdmin\":\"The address to transfer ownership to.\"}},\"withdrawEther(uint256,address)\":{\"details\":\"Withdraw Ethers\"},\"withdrawToken(address,uint256,address)\":{\"details\":\"Withdraw all ERC20 compatible tokens\",\"params\":{\"token\":\"ERC20 The address of the token contract\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/oscarr/Ethereum/frappe/contracts/wrapperContracts/FeeBurnerWrapperProxy.sol\":\"FeeBurnerWrapperProxy\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/oscarr/Ethereum/frappe/contracts/ERC20Interface.sol\":{\"keccak256\":\"0x0e7f8073e3de5997f6c36d7226923c5173b80a834a471f38f6da29d804e96ad0\",\"urls\":[\"bzzr://2ea77f174c95cf0b8383a06a383ca79cdc7296dabb2b79f56f8642abe1d83a5c\"]},\"/Users/oscarr/Ethereum/frappe/contracts/PermissionGroups.sol\":{\"keccak256\":\"0xaeb966959d210ab3bbd9177d55e80ed14b7431af1bf352b8d9bd9c72003e428b\",\"urls\":[\"bzzr://d822faa41a2557051bb34e35f41cc038a4fd6fa5f6ef096c3cb2b60450e72767\"]},\"/Users/oscarr/Ethereum/frappe/contracts/Withdrawable.sol\":{\"keccak256\":\"0x465dfa6d5f18b7290efd7336cd2cff1259fc09470d8048eba495f76853affb48\",\"urls\":[\"bzzr://87f3ee9caf33c4f9b36d19021658a422c395867e1ab560e5c7058fac523167da\"]},\"/Users/oscarr/Ethereum/frappe/contracts/wrapperContracts/FeeBurnerWrapperProxy.sol\":{\"keccak256\":\"0xb243554f29c36318ac1073418ccf6bc52914a4576dea7a5acadc3d81b0723473\",\"urls\":[\"bzzr://b4a6a710ff3b694a352dc4bb4349e532cb1f7719f1e910c1a320e75b80f0c3df\"]}},\"version\":1}",
  "bytecode": "0x6060604052341561000f57600080fd5b604051602080611bb883398101604052808051906020019091905050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156100a757600080fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050611ac0806100f86000396000f3006060604052600436106100e6576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806301a12fd3146100eb578063267822471461012457806327a099d8146101795780633ccdbb28146101e35780634084751414610244578063408ee7fe1461027d57806375829def146102b6578063779beedf146102ef57806377f50f97146103285780637a90a7a31461033d5780637acc8678146103925780637c423f54146103cb5780639870d7fe14610435578063ac8a584a1461046e578063ce56c454146104a7578063f851a440146104e9575b600080fd5b34156100f657600080fd5b610122600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061053e565b005b341561012f57600080fd5b610137610800565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561018457600080fd5b61018c610826565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156101cf5780820151818401526020810190506101b4565b505050509050019250505060405180910390f35b34156101ee57600080fd5b610242600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506108ba565b005b341561024f57600080fd5b61027b600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610a8a565b005b341561028857600080fd5b6102b4600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610b65565b005b34156102c157600080fd5b6102ed600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610d5b565b005b34156102fa57600080fd5b610326600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610ebb565b005b341561033357600080fd5b61033b610f8e565b005b341561034857600080fd5b61035061116a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561039d57600080fd5b6103c9600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611190565b005b34156103d657600080fd5b6103de611385565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610421578082015181840152602081019050610406565b505050509050019250505060405180910390f35b341561044057600080fd5b61046c600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611419565b005b341561047957600080fd5b6104a5600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061160f565b005b34156104b257600080fd5b6104e7600480803590602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506118d4565b005b34156104f457600080fd5b6104fc6119de565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561059b57600080fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156105f357600080fd5b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600090505b6005805490508110156107fc578173ffffffffffffffffffffffffffffffffffffffff1660058281548110151561068357fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156107f15760056001600580549050038154811015156106e257fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660058281548110151561071d57fe5b906000526020600020900160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600580548091906001900361077b9190611a03565b507f5611bf3e417d124f97bf2c788843ea8bb502b66079fbee02158ef30b172cb762826000604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001821515151581526020019250505060405180910390a16107fc565b806001019050610650565b5050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61082e611a2f565b60048054806020026020016040519081016040528092919081815260200182805480156108b057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610866575b5050505050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561091557600080fd5b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82846000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15156109c057600080fd5b6102c65a03f115156109d157600080fd5b5050506040518051905015156109e657600080fd5b7f72cb8a894ddb372ceec3d2a7648d86f17d5a15caae0e986c53109b8a9a9385e6838383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a1505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ae557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610b2157600080fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610bc057600080fd5b600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151515610c1957600080fd5b6032600580549050101515610c2d57600080fd5b7f5611bf3e417d124f97bf2c788843ea8bb502b66079fbee02158ef30b172cb762816001604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001821515151581526020019250505060405180910390a16001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060058054806001018281610d099190611a43565b9160005260206000209001600083909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610db657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610df257600080fd5b7f3b81caf78fa51ecbc8acb482fd7012a277b428d9b80f9d156e8a54107496cc40600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a180600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663688057fc826040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1515610f7757600080fd5b6102c65a03f11515610f8857600080fd5b50505050565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610fea57600080fd5b7f65da1cfc2c2e81576ad96afb24a581f8e109b7a403b35cbd3243a1c99efdb9ed600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156111eb57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561122757600080fd5b7f3b81caf78fa51ecbc8acb482fd7012a277b428d9b80f9d156e8a54107496cc4081604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a17f65da1cfc2c2e81576ad96afb24a581f8e109b7a403b35cbd3243a1c99efdb9ed816000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61138d611a2f565b600580548060200260200160405190810160405280929190818152602001828054801561140f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116113c5575b5050505050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561147457600080fd5b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515156114cd57600080fd5b60326004805490501015156114e157600080fd5b7f091a7a4b85135fdd7e8dbc18b12fabe5cc191ea867aa3c2e1a24a102af61d58b816001604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001821515151581526020019250505060405180910390a16001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600480548060010182816115bd9190611a43565b9160005260206000209001600083909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561166c57600080fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156116c457600080fd5b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600090505b6004805490508110156118d0578173ffffffffffffffffffffffffffffffffffffffff1660048281548110151561175457fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156118c55760046001600480549050038154811015156117b357fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166004828154811015156117ee57fe5b906000526020600020900160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160048181805490500391508161184f9190611a03565b507f091a7a4b85135fdd7e8dbc18b12fabe5cc191ea867aa3c2e1a24a102af61d58b826000604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001821515151581526020019250505060405180910390a16118d0565b806001019050611721565b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561192f57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050151561196f57600080fd5b7fec47e7ed86c86774d1a72c19f35c639911393fe7c1a34031fdbd260890da90de8282604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b815481835581811511611a2a57818360005260206000209182019101611a299190611a6f565b5b505050565b602060405190810160405280600081525090565b815481835581811511611a6a57818360005260206000209182019101611a699190611a6f565b5b505050565b611a9191905b80821115611a8d576000816000905550600101611a75565b5090565b905600a165627a7a723058200d80431a9fea28f422e8dd64640cf676c12b70a395ea641ecd4315832a74dd630029",
  "deployedBytecode": "0x6060604052600436106100e6576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806301a12fd3146100eb578063267822471461012457806327a099d8146101795780633ccdbb28146101e35780634084751414610244578063408ee7fe1461027d57806375829def146102b6578063779beedf146102ef57806377f50f97146103285780637a90a7a31461033d5780637acc8678146103925780637c423f54146103cb5780639870d7fe14610435578063ac8a584a1461046e578063ce56c454146104a7578063f851a440146104e9575b600080fd5b34156100f657600080fd5b610122600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061053e565b005b341561012f57600080fd5b610137610800565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561018457600080fd5b61018c610826565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156101cf5780820151818401526020810190506101b4565b505050509050019250505060405180910390f35b34156101ee57600080fd5b610242600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506108ba565b005b341561024f57600080fd5b61027b600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610a8a565b005b341561028857600080fd5b6102b4600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610b65565b005b34156102c157600080fd5b6102ed600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610d5b565b005b34156102fa57600080fd5b610326600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610ebb565b005b341561033357600080fd5b61033b610f8e565b005b341561034857600080fd5b61035061116a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561039d57600080fd5b6103c9600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611190565b005b34156103d657600080fd5b6103de611385565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610421578082015181840152602081019050610406565b505050509050019250505060405180910390f35b341561044057600080fd5b61046c600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611419565b005b341561047957600080fd5b6104a5600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061160f565b005b34156104b257600080fd5b6104e7600480803590602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506118d4565b005b34156104f457600080fd5b6104fc6119de565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561059b57600080fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156105f357600080fd5b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600090505b6005805490508110156107fc578173ffffffffffffffffffffffffffffffffffffffff1660058281548110151561068357fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156107f15760056001600580549050038154811015156106e257fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660058281548110151561071d57fe5b906000526020600020900160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600580548091906001900361077b9190611a03565b507f5611bf3e417d124f97bf2c788843ea8bb502b66079fbee02158ef30b172cb762826000604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001821515151581526020019250505060405180910390a16107fc565b806001019050610650565b5050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61082e611a2f565b60048054806020026020016040519081016040528092919081815260200182805480156108b057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610866575b5050505050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561091557600080fd5b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82846000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15156109c057600080fd5b6102c65a03f115156109d157600080fd5b5050506040518051905015156109e657600080fd5b7f72cb8a894ddb372ceec3d2a7648d86f17d5a15caae0e986c53109b8a9a9385e6838383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a1505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ae557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610b2157600080fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610bc057600080fd5b600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151515610c1957600080fd5b6032600580549050101515610c2d57600080fd5b7f5611bf3e417d124f97bf2c788843ea8bb502b66079fbee02158ef30b172cb762816001604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001821515151581526020019250505060405180910390a16001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060058054806001018281610d099190611a43565b9160005260206000209001600083909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610db657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610df257600080fd5b7f3b81caf78fa51ecbc8acb482fd7012a277b428d9b80f9d156e8a54107496cc40600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a180600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663688057fc826040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1515610f7757600080fd5b6102c65a03f11515610f8857600080fd5b50505050565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610fea57600080fd5b7f65da1cfc2c2e81576ad96afb24a581f8e109b7a403b35cbd3243a1c99efdb9ed600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156111eb57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561122757600080fd5b7f3b81caf78fa51ecbc8acb482fd7012a277b428d9b80f9d156e8a54107496cc4081604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a17f65da1cfc2c2e81576ad96afb24a581f8e109b7a403b35cbd3243a1c99efdb9ed816000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61138d611a2f565b600580548060200260200160405190810160405280929190818152602001828054801561140f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116113c5575b5050505050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561147457600080fd5b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515156114cd57600080fd5b60326004805490501015156114e157600080fd5b7f091a7a4b85135fdd7e8dbc18b12fabe5cc191ea867aa3c2e1a24a102af61d58b816001604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001821515151581526020019250505060405180910390a16001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600480548060010182816115bd9190611a43565b9160005260206000209001600083909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561166c57600080fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156116c457600080fd5b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600090505b6004805490508110156118d0578173ffffffffffffffffffffffffffffffffffffffff1660048281548110151561175457fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156118c55760046001600480549050038154811015156117b357fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166004828154811015156117ee57fe5b906000526020600020900160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160048181805490500391508161184f9190611a03565b507f091a7a4b85135fdd7e8dbc18b12fabe5cc191ea867aa3c2e1a24a102af61d58b826000604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001821515151581526020019250505060405180910390a16118d0565b806001019050611721565b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561192f57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050151561196f57600080fd5b7fec47e7ed86c86774d1a72c19f35c639911393fe7c1a34031fdbd260890da90de8282604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b815481835581811511611a2a57818360005260206000209182019101611a299190611a6f565b5b505050565b602060405190810160405280600081525090565b815481835581811511611a6a57818360005260206000209182019101611a699190611a6f565b5b505050565b611a9191905b80821115611a8d576000816000905550600101611a75565b5090565b905600a165627a7a723058200d80431a9fea28f422e8dd64640cf676c12b70a395ea641ecd4315832a74dd630029",
  "sourceMap": "160:634:75:-;;;266:191;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;390:10:17;382:5;;:18;;;;;;;;;;;;;;;;;;390:1:75;358:34;;:20;:34;;;;350:43;;;;;;;;430:20;403:24;;:47;;;;;;;;;;;;;;;;;;266:191;160:634;;;;;;",
  "deployedSourceMap": "160:634:75:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2381:451:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;85:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;670:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;560:186:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;593:199:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:301:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;1074:183;;;;;;;;;;;;;;;;;;;;;;;;;;;;463:124:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;1821:189:17;;;;;;;;;;;;;;214:45:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1432:218:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;772:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;2897:312:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;3215:469;;;;;;;;;;;;;;;;;;;;;;;;;;;;851:150:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;59:20:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2381:451;2526:6;466:5;;;;;;;;;;;452:19;;:10;:19;;;444:28;;;;;;;;2457:8;:17;2466:7;2457:17;;;;;;;;;;;;;;;;;;;;;;;;;2449:26;;;;;;;;2505:5;2485:8;:17;2494:7;2485:17;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;2535:1;2526:10;;2521:305;2542:13;:20;;;;2538:1;:24;2521:305;;;2607:7;2587:27;;:13;2601:1;2587:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;:27;;;2583:233;;;2653:13;2690:1;2667:13;:20;;;;:24;2653:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;2634:13;2648:1;2634:16;;;;;;;;;;;;;;;;;;;:58;;;;;;;;;;;;;;;;;;2710:13;:22;;;;;;;;;;;;:::i;:::-;;2750:28;2763:7;2772:5;2750:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2796:5;;2583:233;2564:3;;;;;2521:305;;;2381:451;;:::o;85:27::-;;;;;;;;;;;;;:::o;670:96::-;717:9;;:::i;:::-;745:14;738:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;670:96;:::o;560:186:26:-;466:5:17;;;;;;;;;;;452:19;;:10;:19;;;444:28;;;;;;;;662:5:26;:14;;;677:6;685;662:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;654:39;;;;;;;;703:36;717:5;724:6;732;703:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;560:186;;;:::o;593:199:75:-;466:5:17;;;;;;;;;;;452:19;;:10;:19;;;444:28;;;;;;;;725:1:75;693:34;;:20;:34;;;;685:43;;;;;;;;765:20;738:24;;:47;;;;;;;;;;;;;;;;;;593:199;:::o;2074:301:17:-;466:5;;;;;;;;;;;452:19;;:10;:19;;;444:28;;;;;;;;2150:8;:20;2159:10;2150:20;;;;;;;;;;;;;;;;;;;;;;;;;2149:21;2141:30;;;;;;;;328:2;2212:13;:20;;;;:37;2204:46;;;;;;;;2261:30;2274:10;2286:4;2261:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2324:4;2301:8;:20;2310:10;2301:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;2338:13;:30;;;;;;;;;;;:::i;:::-;;;;;;;;;;2357:10;2338:30;;;;;;;;;;;;;;;;;;;;;;;2074:301;:::o;1074:183::-;466:5;;;;;;;;;;;452:19;;:10;:19;;;444:28;;;;;;;;1170:1;1150:22;;:8;:22;;;;1142:31;;;;;;;;1183:34;1204:12;;;;;;;;;;;1183:34;;;;;;;;;;;;;;;;;;;;;;1242:8;1227:12;;:23;;;;;;;;;;;;;;;;;;1074:183;:::o;463:124:75:-;520:24;;;;;;;;;;;:52;;;573:6;520:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;463:124;:::o;1821:189:17:-;1884:10;1868:26;;:12;;;;;;;;;;;:26;;;1860:35;;;;;;;;1905:33;1918:12;;;;;;;;;;;1932:5;;;;;;;;;;;1905:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1956:12;;;;;;;;;;;1948:5;;:20;;;;;;;;;;;;;;;;;;2001:1;1978:12;;:25;;;;;;;;;;;;;;;;;;1821:189::o;214:45:75:-;;;;;;;;;;;;;:::o;1432:218:17:-;466:5;;;;;;;;;;;452:19;;:10;:19;;;444:28;;;;;;;;1535:1;1515:22;;:8;:22;;;;1507:31;;;;;;;;1548:30;1569:8;1548:30;;;;;;;;;;;;;;;;;;;;;;1588:29;1601:8;1611:5;;;;;;;;;;;1588:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1635:8;1627:5;;:16;;;;;;;;;;;;;;;;;;1432:218;:::o;772:94::-;818:9;;:::i;:::-;846:13;839:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;772:94;:::o;2897:312::-;466:5;;;;;;;;;;;452:19;;:10;:19;;;444:28;;;;;;;;2975:9;:22;2985:11;2975:22;;;;;;;;;;;;;;;;;;;;;;;;;2974:23;2966:32;;;;;;;;328:2;3039:14;:21;;;;:38;3031:47;;;;;;;;3089:32;3103:11;3116:4;3089:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3156:4;3131:9;:22;3141:11;3131:22;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3170:14;:32;;;;;;;;;;;:::i;:::-;;;;;;;;;;3190:11;3170:32;;;;;;;;;;;;;;;;;;;;;;;2897:312;:::o;3215:469::-;3366:6;466:5;;;;;;;;;;;452:19;;:10;:19;;;444:28;;;;;;;;3293:9;:19;3303:8;3293:19;;;;;;;;;;;;;;;;;;;;;;;;;3285:28;;;;;;;;3345:5;3323:9;:19;3333:8;3323:19;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;3375:1;3366:10;;3361:317;3382:14;:21;;;;3378:1;:25;3361:317;;;3449:8;3428:29;;:14;3443:1;3428:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;:29;;;3424:244;;;3497:14;3536:1;3512:14;:21;;;;:25;3497:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;3477:14;3492:1;3477:17;;;;;;;;;;;;;;;;;;;:61;;;;;;;;;;;;;;;;;;3581:1;3556:14;:26;;;;;;;;;;;;;;:::i;:::-;;3600:30;3614:8;3624:5;3600:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3648:5;;3424:244;3405:3;;;;;3361:317;;;3215:469;;:::o;851:150:26:-;466:5:17;;;;;;;;;;;452:19;;:10;:19;;;444:28;;;;;;;;932:6:26;:15;;:23;948:6;932:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;965:29;979:6;987;965:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;851:150;;:::o;59:20:17:-;;;;;;;;;;;;;:::o;160:634:75:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity 0.4.18;\n\n\nimport \"../Withdrawable.sol\";\n\n\ninterface WrapFeeBurner {\n    function registerWalletForFeeSharing(address walletAddress) public;\n}\n\n\ncontract FeeBurnerWrapperProxy is Withdrawable {\n\n    WrapFeeBurner public feeBurnerWrapperContract;\n\n    function FeeBurnerWrapperProxy(WrapFeeBurner burnerWrapperAddress) public {\n        require(burnerWrapperAddress != address(0));\n        feeBurnerWrapperContract = burnerWrapperAddress;\n    }\n\n    function registerWallet(address wallet) public {\n        feeBurnerWrapperContract.registerWalletForFeeSharing(wallet);\n    }\n\n    function setFeeBurnerWrapper(WrapFeeBurner burnerWrapperAddress) public onlyAdmin {\n        require(burnerWrapperAddress != address(0));\n        feeBurnerWrapperContract = burnerWrapperAddress;\n    }\n}\n",
  "sourcePath": "/Users/oscarr/Ethereum/frappe/contracts/wrapperContracts/FeeBurnerWrapperProxy.sol",
  "ast": {
    "absolutePath": "/Users/oscarr/Ethereum/frappe/contracts/wrapperContracts/FeeBurnerWrapperProxy.sol",
    "exportedSymbols": {
      "FeeBurnerWrapperProxy": [
        28011
      ],
      "WrapFeeBurner": [
        27956
      ]
    },
    "id": 28012,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 27949,
        "literals": [
          "solidity",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:75"
      },
      {
        "absolutePath": "/Users/oscarr/Ethereum/frappe/contracts/Withdrawable.sol",
        "file": "../Withdrawable.sol",
        "id": 27950,
        "nodeType": "ImportDirective",
        "scope": 28012,
        "sourceUnit": 10293,
        "src": "26:29:75",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 27956,
        "linearizedBaseContracts": [
          27956
        ],
        "name": "WrapFeeBurner",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "id": 27955,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "registerWalletForFeeSharing",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27953,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27952,
                  "name": "walletAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 27955,
                  "src": "125:21:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27951,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "125:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "124:23:75"
            },
            "payable": false,
            "returnParameters": {
              "id": 27954,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "154:0:75"
            },
            "scope": 27956,
            "src": "88:67:75",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 28012,
        "src": "58:99:75"
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 27957,
              "name": "Withdrawable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10292,
              "src": "194:12:75",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Withdrawable_$10292",
                "typeString": "contract Withdrawable"
              }
            },
            "id": 27958,
            "nodeType": "InheritanceSpecifier",
            "src": "194:12:75"
          }
        ],
        "contractDependencies": [
          8554,
          10292
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 28011,
        "linearizedBaseContracts": [
          28011,
          10292,
          8554
        ],
        "name": "FeeBurnerWrapperProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 27960,
            "name": "feeBurnerWrapperContract",
            "nodeType": "VariableDeclaration",
            "scope": 28011,
            "src": "214:45:75",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_WrapFeeBurner_$27956",
              "typeString": "contract WrapFeeBurner"
            },
            "typeName": {
              "contractScope": null,
              "id": 27959,
              "name": "WrapFeeBurner",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 27956,
              "src": "214:13:75",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WrapFeeBurner_$27956",
                "typeString": "contract WrapFeeBurner"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 27977,
              "nodeType": "Block",
              "src": "340:117:75",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 27970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 27966,
                          "name": "burnerWrapperAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27962,
                          "src": "358:20:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_WrapFeeBurner_$27956",
                            "typeString": "contract WrapFeeBurner"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 27968,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "390:1:75",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 27967,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "382:7:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 27969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "382:10:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "358:34:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 27965,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29914,
                      "src": "350:7:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 27971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "350:43:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27972,
                  "nodeType": "ExpressionStatement",
                  "src": "350:43:75"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 27975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 27973,
                      "name": "feeBurnerWrapperContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27960,
                      "src": "403:24:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WrapFeeBurner_$27956",
                        "typeString": "contract WrapFeeBurner"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 27974,
                      "name": "burnerWrapperAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27962,
                      "src": "430:20:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WrapFeeBurner_$27956",
                        "typeString": "contract WrapFeeBurner"
                      }
                    },
                    "src": "403:47:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WrapFeeBurner_$27956",
                      "typeString": "contract WrapFeeBurner"
                    }
                  },
                  "id": 27976,
                  "nodeType": "ExpressionStatement",
                  "src": "403:47:75"
                }
              ]
            },
            "id": 27978,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "FeeBurnerWrapperProxy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27963,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27962,
                  "name": "burnerWrapperAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 27978,
                  "src": "297:34:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_WrapFeeBurner_$27956",
                    "typeString": "contract WrapFeeBurner"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 27961,
                    "name": "WrapFeeBurner",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 27956,
                    "src": "297:13:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WrapFeeBurner_$27956",
                      "typeString": "contract WrapFeeBurner"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "296:36:75"
            },
            "payable": false,
            "returnParameters": {
              "id": 27964,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "340:0:75"
            },
            "scope": 28011,
            "src": "266:191:75",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 27989,
              "nodeType": "Block",
              "src": "510:77:75",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 27986,
                        "name": "wallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27980,
                        "src": "573:6:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 27983,
                        "name": "feeBurnerWrapperContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27960,
                        "src": "520:24:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WrapFeeBurner_$27956",
                          "typeString": "contract WrapFeeBurner"
                        }
                      },
                      "id": 27985,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "registerWalletForFeeSharing",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27955,
                      "src": "520:52:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 27987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "520:60:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27988,
                  "nodeType": "ExpressionStatement",
                  "src": "520:60:75"
                }
              ]
            },
            "id": 27990,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "registerWallet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27981,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27980,
                  "name": "wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 27990,
                  "src": "487:14:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27979,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "487:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "486:16:75"
            },
            "payable": false,
            "returnParameters": {
              "id": 27982,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "510:0:75"
            },
            "scope": 28011,
            "src": "463:124:75",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 28009,
              "nodeType": "Block",
              "src": "675:117:75",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 28002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 27998,
                          "name": "burnerWrapperAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27992,
                          "src": "693:20:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_WrapFeeBurner_$27956",
                            "typeString": "contract WrapFeeBurner"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 28000,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "725:1:75",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 27999,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "717:7:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 28001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "717:10:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "693:34:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 27997,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29914,
                      "src": "685:7:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 28003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "685:43:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28004,
                  "nodeType": "ExpressionStatement",
                  "src": "685:43:75"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 28007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 28005,
                      "name": "feeBurnerWrapperContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27960,
                      "src": "738:24:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WrapFeeBurner_$27956",
                        "typeString": "contract WrapFeeBurner"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 28006,
                      "name": "burnerWrapperAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27992,
                      "src": "765:20:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WrapFeeBurner_$27956",
                        "typeString": "contract WrapFeeBurner"
                      }
                    },
                    "src": "738:47:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WrapFeeBurner_$27956",
                      "typeString": "contract WrapFeeBurner"
                    }
                  },
                  "id": 28008,
                  "nodeType": "ExpressionStatement",
                  "src": "738:47:75"
                }
              ]
            },
            "id": 28010,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 27995,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 27994,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8209,
                  "src": "665:9:75",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "665:9:75"
              }
            ],
            "name": "setFeeBurnerWrapper",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27993,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27992,
                  "name": "burnerWrapperAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 28010,
                  "src": "622:34:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_WrapFeeBurner_$27956",
                    "typeString": "contract WrapFeeBurner"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 27991,
                    "name": "WrapFeeBurner",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 27956,
                    "src": "622:13:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WrapFeeBurner_$27956",
                      "typeString": "contract WrapFeeBurner"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "621:36:75"
            },
            "payable": false,
            "returnParameters": {
              "id": 27996,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "675:0:75"
            },
            "scope": 28011,
            "src": "593:199:75",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 28012,
        "src": "160:634:75"
      }
    ],
    "src": "0:795:75"
  },
  "legacyAST": {
    "absolutePath": "/Users/oscarr/Ethereum/frappe/contracts/wrapperContracts/FeeBurnerWrapperProxy.sol",
    "exportedSymbols": {
      "FeeBurnerWrapperProxy": [
        28011
      ],
      "WrapFeeBurner": [
        27956
      ]
    },
    "id": 28012,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 27949,
        "literals": [
          "solidity",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:75"
      },
      {
        "absolutePath": "/Users/oscarr/Ethereum/frappe/contracts/Withdrawable.sol",
        "file": "../Withdrawable.sol",
        "id": 27950,
        "nodeType": "ImportDirective",
        "scope": 28012,
        "sourceUnit": 10293,
        "src": "26:29:75",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 27956,
        "linearizedBaseContracts": [
          27956
        ],
        "name": "WrapFeeBurner",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "id": 27955,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "registerWalletForFeeSharing",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27953,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27952,
                  "name": "walletAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 27955,
                  "src": "125:21:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27951,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "125:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "124:23:75"
            },
            "payable": false,
            "returnParameters": {
              "id": 27954,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "154:0:75"
            },
            "scope": 27956,
            "src": "88:67:75",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 28012,
        "src": "58:99:75"
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 27957,
              "name": "Withdrawable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10292,
              "src": "194:12:75",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Withdrawable_$10292",
                "typeString": "contract Withdrawable"
              }
            },
            "id": 27958,
            "nodeType": "InheritanceSpecifier",
            "src": "194:12:75"
          }
        ],
        "contractDependencies": [
          8554,
          10292
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 28011,
        "linearizedBaseContracts": [
          28011,
          10292,
          8554
        ],
        "name": "FeeBurnerWrapperProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 27960,
            "name": "feeBurnerWrapperContract",
            "nodeType": "VariableDeclaration",
            "scope": 28011,
            "src": "214:45:75",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_WrapFeeBurner_$27956",
              "typeString": "contract WrapFeeBurner"
            },
            "typeName": {
              "contractScope": null,
              "id": 27959,
              "name": "WrapFeeBurner",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 27956,
              "src": "214:13:75",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WrapFeeBurner_$27956",
                "typeString": "contract WrapFeeBurner"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 27977,
              "nodeType": "Block",
              "src": "340:117:75",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 27970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 27966,
                          "name": "burnerWrapperAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27962,
                          "src": "358:20:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_WrapFeeBurner_$27956",
                            "typeString": "contract WrapFeeBurner"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 27968,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "390:1:75",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 27967,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "382:7:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 27969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "382:10:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "358:34:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 27965,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29914,
                      "src": "350:7:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 27971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "350:43:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27972,
                  "nodeType": "ExpressionStatement",
                  "src": "350:43:75"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 27975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 27973,
                      "name": "feeBurnerWrapperContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27960,
                      "src": "403:24:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WrapFeeBurner_$27956",
                        "typeString": "contract WrapFeeBurner"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 27974,
                      "name": "burnerWrapperAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27962,
                      "src": "430:20:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WrapFeeBurner_$27956",
                        "typeString": "contract WrapFeeBurner"
                      }
                    },
                    "src": "403:47:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WrapFeeBurner_$27956",
                      "typeString": "contract WrapFeeBurner"
                    }
                  },
                  "id": 27976,
                  "nodeType": "ExpressionStatement",
                  "src": "403:47:75"
                }
              ]
            },
            "id": 27978,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "FeeBurnerWrapperProxy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27963,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27962,
                  "name": "burnerWrapperAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 27978,
                  "src": "297:34:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_WrapFeeBurner_$27956",
                    "typeString": "contract WrapFeeBurner"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 27961,
                    "name": "WrapFeeBurner",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 27956,
                    "src": "297:13:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WrapFeeBurner_$27956",
                      "typeString": "contract WrapFeeBurner"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "296:36:75"
            },
            "payable": false,
            "returnParameters": {
              "id": 27964,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "340:0:75"
            },
            "scope": 28011,
            "src": "266:191:75",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 27989,
              "nodeType": "Block",
              "src": "510:77:75",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 27986,
                        "name": "wallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27980,
                        "src": "573:6:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 27983,
                        "name": "feeBurnerWrapperContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27960,
                        "src": "520:24:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WrapFeeBurner_$27956",
                          "typeString": "contract WrapFeeBurner"
                        }
                      },
                      "id": 27985,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "registerWalletForFeeSharing",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27955,
                      "src": "520:52:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 27987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "520:60:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27988,
                  "nodeType": "ExpressionStatement",
                  "src": "520:60:75"
                }
              ]
            },
            "id": 27990,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "registerWallet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27981,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27980,
                  "name": "wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 27990,
                  "src": "487:14:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27979,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "487:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "486:16:75"
            },
            "payable": false,
            "returnParameters": {
              "id": 27982,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "510:0:75"
            },
            "scope": 28011,
            "src": "463:124:75",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 28009,
              "nodeType": "Block",
              "src": "675:117:75",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 28002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 27998,
                          "name": "burnerWrapperAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27992,
                          "src": "693:20:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_WrapFeeBurner_$27956",
                            "typeString": "contract WrapFeeBurner"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 28000,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "725:1:75",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 27999,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "717:7:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 28001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "717:10:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "693:34:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 27997,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29914,
                      "src": "685:7:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 28003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "685:43:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28004,
                  "nodeType": "ExpressionStatement",
                  "src": "685:43:75"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 28007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 28005,
                      "name": "feeBurnerWrapperContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27960,
                      "src": "738:24:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WrapFeeBurner_$27956",
                        "typeString": "contract WrapFeeBurner"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 28006,
                      "name": "burnerWrapperAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27992,
                      "src": "765:20:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WrapFeeBurner_$27956",
                        "typeString": "contract WrapFeeBurner"
                      }
                    },
                    "src": "738:47:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WrapFeeBurner_$27956",
                      "typeString": "contract WrapFeeBurner"
                    }
                  },
                  "id": 28008,
                  "nodeType": "ExpressionStatement",
                  "src": "738:47:75"
                }
              ]
            },
            "id": 28010,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 27995,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 27994,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8209,
                  "src": "665:9:75",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "665:9:75"
              }
            ],
            "name": "setFeeBurnerWrapper",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27993,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27992,
                  "name": "burnerWrapperAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 28010,
                  "src": "622:34:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_WrapFeeBurner_$27956",
                    "typeString": "contract WrapFeeBurner"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 27991,
                    "name": "WrapFeeBurner",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 27956,
                    "src": "622:13:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WrapFeeBurner_$27956",
                      "typeString": "contract WrapFeeBurner"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "621:36:75"
            },
            "payable": false,
            "returnParameters": {
              "id": 27996,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "675:0:75"
            },
            "scope": 28011,
            "src": "593:199:75",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 28012,
        "src": "160:634:75"
      }
    ],
    "src": "0:795:75"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.18+commit.9cf6e910.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.6",
  "updatedAt": "2019-05-18T17:14:13.552Z",
  "devdoc": {
    "methods": {
      "claimAdmin()": {
        "details": "Allows the pendingAdmin address to finalize the change admin process."
      },
      "transferAdmin(address)": {
        "details": "Allows the current admin to set the pendingAdmin address.",
        "params": {
          "newAdmin": "The address to transfer ownership to."
        }
      },
      "transferAdminQuickly(address)": {
        "details": "Allows the current admin to set the admin in one tx. Useful initial deployment.",
        "params": {
          "newAdmin": "The address to transfer ownership to."
        }
      },
      "withdrawEther(uint256,address)": {
        "details": "Withdraw Ethers"
      },
      "withdrawToken(address,uint256,address)": {
        "details": "Withdraw all ERC20 compatible tokens",
        "params": {
          "token": "ERC20 The address of the token contract"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}