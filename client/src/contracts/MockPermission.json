{
  "contractName": "MockPermission",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "alerter",
          "type": "address"
        }
      ],
      "name": "removeAlerter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "pendingAdmin",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOperators",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newAlerter",
          "type": "address"
        }
      ],
      "name": "addAlerter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tradeActive",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "transferAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "claimAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "transferAdminQuickly",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAlerters",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOperator",
          "type": "address"
        }
      ],
      "name": "addOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "removeOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "pendingAdmin",
          "type": "address"
        }
      ],
      "name": "TransferAdminPending",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "previousAdmin",
          "type": "address"
        }
      ],
      "name": "AdminClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newAlerter",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "isAdd",
          "type": "bool"
        }
      ],
      "name": "AlerterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newOperator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "isAdd",
          "type": "bool"
        }
      ],
      "name": "OperatorAdded",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newRate",
          "type": "uint256"
        }
      ],
      "name": "setRate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "stopTrade",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "activateTrade",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.18+commit.9cf6e910\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"alerter\",\"type\":\"address\"}],\"name\":\"removeAlerter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pendingAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOperators\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"setRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newAlerter\",\"type\":\"address\"}],\"name\":\"addAlerter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tradeActive\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"transferAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claimAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"transferAdminQuickly\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAlerters\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stopTrade\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOperator\",\"type\":\"address\"}],\"name\":\"addOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"removeOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"activateTrade\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"pendingAdmin\",\"type\":\"address\"}],\"name\":\"TransferAdminPending\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newAdmin\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"previousAdmin\",\"type\":\"address\"}],\"name\":\"AdminClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newAlerter\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"isAdd\",\"type\":\"bool\"}],\"name\":\"AlerterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newOperator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"isAdd\",\"type\":\"bool\"}],\"name\":\"OperatorAdded\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"claimAdmin()\":{\"details\":\"Allows the pendingAdmin address to finalize the change admin process.\"},\"transferAdmin(address)\":{\"details\":\"Allows the current admin to set the pendingAdmin address.\",\"params\":{\"newAdmin\":\"The address to transfer ownership to.\"}},\"transferAdminQuickly(address)\":{\"details\":\"Allows the current admin to set the admin in one tx. Useful initial deployment.\",\"params\":{\"newAdmin\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/oscarr/Ethereum/frappe/contracts/mockContracts/MockPermission.sol\":\"MockPermission\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/oscarr/Ethereum/frappe/contracts/PermissionGroups.sol\":{\"keccak256\":\"0xaeb966959d210ab3bbd9177d55e80ed14b7431af1bf352b8d9bd9c72003e428b\",\"urls\":[\"bzzr://d822faa41a2557051bb34e35f41cc038a4fd6fa5f6ef096c3cb2b60450e72767\"]},\"/Users/oscarr/Ethereum/frappe/contracts/mockContracts/MockPermission.sol\":{\"keccak256\":\"0x77c8e11fc719cda6ab1d8d140cdd29cb483542bf7e3bac253b8b3d551b610ed6\",\"urls\":[\"bzzr://6d77bd9847311c162977e54edb21413e22ee69e8292264be69eb2aa167b63a0e\"]}},\"version\":1}",
  "bytecode": "0x60606040526001600760006101000a81548160ff021916908315150217905550341561002a57600080fd5b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506116b0806100796000396000f3006060604052600436106100e6576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806301a12fd3146100eb578063267822471461012457806327a099d8146101795780632c4e722e146101e357806334fcf4371461020c578063408ee7fe1461022f5780635882128d1461026857806375829def1461029557806377f50f97146102ce5780637acc8678146102e35780637c423f541461031c5780638baeefce146103865780639870d7fe1461039b578063ac8a584a146103d4578063ca7700921461040d578063f851a44014610422575b600080fd5b34156100f657600080fd5b610122600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610477565b005b341561012f57600080fd5b610137610739565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561018457600080fd5b61018c61075f565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156101cf5780820151818401526020810190506101b4565b505050509050019250505060405180910390f35b34156101ee57600080fd5b6101f66107f3565b6040518082815260200191505060405180910390f35b341561021757600080fd5b61022d60048080359060200190919050506107f9565b005b341561023a57600080fd5b610266600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061085b565b005b341561027357600080fd5b61027b610a51565b604051808215151515815260200191505060405180910390f35b34156102a057600080fd5b6102cc600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610a64565b005b34156102d957600080fd5b6102e1610bc4565b005b34156102ee57600080fd5b61031a600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610da0565b005b341561032757600080fd5b61032f610f95565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610372578082015181840152602081019050610357565b505050509050019250505060405180910390f35b341561039157600080fd5b610399611029565b005b34156103a657600080fd5b6103d2600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061109e565b005b34156103df57600080fd5b61040b600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611294565b005b341561041857600080fd5b610420611559565b005b341561042d57600080fd5b6104356115ce565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156104d457600080fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561052c57600080fd5b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600090505b600580549050811015610735578173ffffffffffffffffffffffffffffffffffffffff166005828154811015156105bc57fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561072a57600560016005805490500381548110151561061b57fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660058281548110151561065657fe5b906000526020600020900160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060058054809190600190036106b491906115f3565b507f5611bf3e417d124f97bf2c788843ea8bb502b66079fbee02158ef30b172cb762826000604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001821515151581526020019250505060405180910390a1610735565b806001019050610589565b5050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61076761161f565b60048054806020026020016040519081016040528092919081815260200182805480156107e957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161079f575b5050505050905090565b60065481565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561085157600080fd5b8060068190555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156108b657600080fd5b600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151561090f57600080fd5b603260058054905010151561092357600080fd5b7f5611bf3e417d124f97bf2c788843ea8bb502b66079fbee02158ef30b172cb762816001604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001821515151581526020019250505060405180910390a16001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600580548060010182816109ff9190611633565b9160005260206000209001600083909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600760009054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610abf57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610afb57600080fd5b7f3b81caf78fa51ecbc8acb482fd7012a277b428d9b80f9d156e8a54107496cc40600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a180600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610c2057600080fd5b7f65da1cfc2c2e81576ad96afb24a581f8e109b7a403b35cbd3243a1c99efdb9ed600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610dfb57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610e3757600080fd5b7f3b81caf78fa51ecbc8acb482fd7012a277b428d9b80f9d156e8a54107496cc4081604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a17f65da1cfc2c2e81576ad96afb24a581f8e109b7a403b35cbd3243a1c99efdb9ed816000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610f9d61161f565b600580548060200260200160405190810160405280929190818152602001828054801561101f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610fd5575b5050505050905090565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561108157600080fd5b6000600760006101000a81548160ff021916908315150217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156110f957600080fd5b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151561115257600080fd5b603260048054905010151561116657600080fd5b7f091a7a4b85135fdd7e8dbc18b12fabe5cc191ea867aa3c2e1a24a102af61d58b816001604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001821515151581526020019250505060405180910390a16001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600480548060010182816112429190611633565b9160005260206000209001600083909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156112f157600080fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561134957600080fd5b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600090505b600480549050811015611555578173ffffffffffffffffffffffffffffffffffffffff166004828154811015156113d957fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561154a57600460016004805490500381548110151561143857fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660048281548110151561147357fe5b906000526020600020900160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016004818180549050039150816114d491906115f3565b507f091a7a4b85135fdd7e8dbc18b12fabe5cc191ea867aa3c2e1a24a102af61d58b826000604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001821515151581526020019250505060405180910390a1611555565b8060010190506113a6565b5050565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156115b157600080fd5b6001600760006101000a81548160ff021916908315150217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b81548183558181151161161a57818360005260206000209182019101611619919061165f565b5b505050565b602060405190810160405280600081525090565b81548183558181151161165a57818360005260206000209182019101611659919061165f565b5b505050565b61168191905b8082111561167d576000816000905550600101611665565b5090565b905600a165627a7a72305820e4f5f800780c3b40c3db42f3f742de7cf3d7b12bfb1e1ac62a87dbb61c7a52d40029",
  "deployedBytecode": "0x6060604052600436106100e6576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806301a12fd3146100eb578063267822471461012457806327a099d8146101795780632c4e722e146101e357806334fcf4371461020c578063408ee7fe1461022f5780635882128d1461026857806375829def1461029557806377f50f97146102ce5780637acc8678146102e35780637c423f541461031c5780638baeefce146103865780639870d7fe1461039b578063ac8a584a146103d4578063ca7700921461040d578063f851a44014610422575b600080fd5b34156100f657600080fd5b610122600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610477565b005b341561012f57600080fd5b610137610739565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561018457600080fd5b61018c61075f565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156101cf5780820151818401526020810190506101b4565b505050509050019250505060405180910390f35b34156101ee57600080fd5b6101f66107f3565b6040518082815260200191505060405180910390f35b341561021757600080fd5b61022d60048080359060200190919050506107f9565b005b341561023a57600080fd5b610266600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061085b565b005b341561027357600080fd5b61027b610a51565b604051808215151515815260200191505060405180910390f35b34156102a057600080fd5b6102cc600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610a64565b005b34156102d957600080fd5b6102e1610bc4565b005b34156102ee57600080fd5b61031a600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610da0565b005b341561032757600080fd5b61032f610f95565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610372578082015181840152602081019050610357565b505050509050019250505060405180910390f35b341561039157600080fd5b610399611029565b005b34156103a657600080fd5b6103d2600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061109e565b005b34156103df57600080fd5b61040b600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611294565b005b341561041857600080fd5b610420611559565b005b341561042d57600080fd5b6104356115ce565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156104d457600080fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561052c57600080fd5b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600090505b600580549050811015610735578173ffffffffffffffffffffffffffffffffffffffff166005828154811015156105bc57fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561072a57600560016005805490500381548110151561061b57fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660058281548110151561065657fe5b906000526020600020900160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060058054809190600190036106b491906115f3565b507f5611bf3e417d124f97bf2c788843ea8bb502b66079fbee02158ef30b172cb762826000604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001821515151581526020019250505060405180910390a1610735565b806001019050610589565b5050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61076761161f565b60048054806020026020016040519081016040528092919081815260200182805480156107e957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161079f575b5050505050905090565b60065481565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561085157600080fd5b8060068190555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156108b657600080fd5b600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151561090f57600080fd5b603260058054905010151561092357600080fd5b7f5611bf3e417d124f97bf2c788843ea8bb502b66079fbee02158ef30b172cb762816001604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001821515151581526020019250505060405180910390a16001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600580548060010182816109ff9190611633565b9160005260206000209001600083909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600760009054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610abf57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610afb57600080fd5b7f3b81caf78fa51ecbc8acb482fd7012a277b428d9b80f9d156e8a54107496cc40600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a180600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610c2057600080fd5b7f65da1cfc2c2e81576ad96afb24a581f8e109b7a403b35cbd3243a1c99efdb9ed600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610dfb57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610e3757600080fd5b7f3b81caf78fa51ecbc8acb482fd7012a277b428d9b80f9d156e8a54107496cc4081604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a17f65da1cfc2c2e81576ad96afb24a581f8e109b7a403b35cbd3243a1c99efdb9ed816000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610f9d61161f565b600580548060200260200160405190810160405280929190818152602001828054801561101f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610fd5575b5050505050905090565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561108157600080fd5b6000600760006101000a81548160ff021916908315150217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156110f957600080fd5b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151561115257600080fd5b603260048054905010151561116657600080fd5b7f091a7a4b85135fdd7e8dbc18b12fabe5cc191ea867aa3c2e1a24a102af61d58b816001604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001821515151581526020019250505060405180910390a16001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600480548060010182816112429190611633565b9160005260206000209001600083909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156112f157600080fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561134957600080fd5b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600090505b600480549050811015611555578173ffffffffffffffffffffffffffffffffffffffff166004828154811015156113d957fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561154a57600460016004805490500381548110151561143857fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660048281548110151561147357fe5b906000526020600020900160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016004818180549050039150816114d491906115f3565b507f091a7a4b85135fdd7e8dbc18b12fabe5cc191ea867aa3c2e1a24a102af61d58b826000604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001821515151581526020019250505060405180910390a1611555565b8060010190506113a6565b5050565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156115b157600080fd5b6001600760006101000a81548160ff021916908315150217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b81548183558181151161161a57818360005260206000209182019101611619919061165f565b5b505050565b602060405190810160405280600081525090565b81548183558181151161165a57818360005260206000209182019101611659919061165f565b5b505050565b61168191905b8082111561167d576000816000905550600101611665565b5090565b905600a165627a7a72305820e4f5f800780c3b40c3db42f3f742de7cf3d7b12bfb1e1ac62a87dbb61c7a52d40029",
  "sourceMap": "62:480:45:-;;;160:4;134:30;;;;;;;;;;;;;;;;;;;;171:72;;;;;;;;390:10:17;382:5;;:18;;;;;;;;;;;;;;;;;;62:480:45;;;;;;",
  "deployedSourceMap": "62:480:45:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2381:451:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;85:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;670:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;112:16:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;249:97;;;;;;;;;;;;;;;;;;;;;;;;;;2074:301:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;134:30:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1074:183:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;1821:189;;;;;;;;;;;;;;1432:218;;;;;;;;;;;;;;;;;;;;;;;;;;;;772:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;352:89:45;;;;;;;;;;;;;;2897:312:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;3215:469;;;;;;;;;;;;;;;;;;;;;;;;;;;;447:93:45;;;;;;;;;;;;;;59:20:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2381:451;2526:6;466:5;;;;;;;;;;;452:19;;:10;:19;;;444:28;;;;;;;;2457:8;:17;2466:7;2457:17;;;;;;;;;;;;;;;;;;;;;;;;;2449:26;;;;;;;;2505:5;2485:8;:17;2494:7;2485:17;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;2535:1;2526:10;;2521:305;2542:13;:20;;;;2538:1;:24;2521:305;;;2607:7;2587:27;;:13;2601:1;2587:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;:27;;;2583:233;;;2653:13;2690:1;2667:13;:20;;;;:24;2653:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;2634:13;2648:1;2634:16;;;;;;;;;;;;;;;;;;;:58;;;;;;;;;;;;;;;;;;2710:13;:22;;;;;;;;;;;;:::i;:::-;;2750:28;2763:7;2772:5;2750:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2796:5;;2583:233;2564:3;;;;;2521:305;;;2381:451;;:::o;85:27::-;;;;;;;;;;;;;:::o;670:96::-;717:9;;:::i;:::-;745:14;738:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;670:96;:::o;112:16:45:-;;;;:::o;249:97::-;538:9:17;:21;548:10;538:21;;;;;;;;;;;;;;;;;;;;;;;;;530:30;;;;;;;;332:7:45;325:4;:14;;;;249:97;:::o;2074:301:17:-;466:5;;;;;;;;;;;452:19;;:10;:19;;;444:28;;;;;;;;2150:8;:20;2159:10;2150:20;;;;;;;;;;;;;;;;;;;;;;;;;2149:21;2141:30;;;;;;;;328:2;2212:13;:20;;;;:37;2204:46;;;;;;;;2261:30;2274:10;2286:4;2261:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2324:4;2301:8;:20;2310:10;2301:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;2338:13;:30;;;;;;;;;;;:::i;:::-;;;;;;;;;;2357:10;2338:30;;;;;;;;;;;;;;;;;;;;;;;2074:301;:::o;134:30:45:-;;;;;;;;;;;;;:::o;1074:183:17:-;466:5;;;;;;;;;;;452:19;;:10;:19;;;444:28;;;;;;;;1170:1;1150:22;;:8;:22;;;;1142:31;;;;;;;;1183:34;1204:12;;;;;;;;;;;1183:34;;;;;;;;;;;;;;;;;;;;;;1242:8;1227:12;;:23;;;;;;;;;;;;;;;;;;1074:183;:::o;1821:189::-;1884:10;1868:26;;:12;;;;;;;;;;;:26;;;1860:35;;;;;;;;1905:33;1918:12;;;;;;;;;;;1932:5;;;;;;;;;;;1905:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1956:12;;;;;;;;;;;1948:5;;:20;;;;;;;;;;;;;;;;;;2001:1;1978:12;;:25;;;;;;;;;;;;;;;;;;1821:189::o;1432:218::-;466:5;;;;;;;;;;;452:19;;:10;:19;;;444:28;;;;;;;;1535:1;1515:22;;:8;:22;;;;1507:31;;;;;;;;1548:30;1569:8;1548:30;;;;;;;;;;;;;;;;;;;;;;1588:29;1601:8;1611:5;;;;;;;;;;;1588:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1635:8;1627:5;;:16;;;;;;;;;;;;;;;;;;1432:218;:::o;772:94::-;818:9;;:::i;:::-;846:13;839:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;772:94;:::o;352:89:45:-;625:8:17;:20;634:10;625:20;;;;;;;;;;;;;;;;;;;;;;;;;617:29;;;;;;;;429:5:45;415:11;;:19;;;;;;;;;;;;;;;;;;352:89::o;2897:312:17:-;466:5;;;;;;;;;;;452:19;;:10;:19;;;444:28;;;;;;;;2975:9;:22;2985:11;2975:22;;;;;;;;;;;;;;;;;;;;;;;;;2974:23;2966:32;;;;;;;;328:2;3039:14;:21;;;;:38;3031:47;;;;;;;;3089:32;3103:11;3116:4;3089:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3156:4;3131:9;:22;3141:11;3131:22;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3170:14;:32;;;;;;;;;;;:::i;:::-;;;;;;;;;;3190:11;3170:32;;;;;;;;;;;;;;;;;;;;;;;2897:312;:::o;3215:469::-;3366:6;466:5;;;;;;;;;;;452:19;;:10;:19;;;444:28;;;;;;;;3293:9;:19;3303:8;3293:19;;;;;;;;;;;;;;;;;;;;;;;;;3285:28;;;;;;;;3345:5;3323:9;:19;3333:8;3323:19;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;3375:1;3366:10;;3361:317;3382:14;:21;;;;3378:1;:25;3361:317;;;3449:8;3428:29;;:14;3443:1;3428:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;:29;;;3424:244;;;3497:14;3536:1;3512:14;:21;;;;:25;3497:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;3477:14;3492:1;3477:17;;;;;;;;;;;;;;;;;;;:61;;;;;;;;;;;;;;;;;;3581:1;3556:14;:26;;;;;;;;;;;;;;:::i;:::-;;3600:30;3614:8;3624:5;3600:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3648:5;;3424:244;3405:3;;;;;3361:317;;;3215:469;;:::o;447:93:45:-;538:9:17;:21;548:10;538:21;;;;;;;;;;;;;;;;;;;;;;;;;530:30;;;;;;;;529:4:45;515:11;;:18;;;;;;;;;;;;;;;;;;447:93::o;59:20:17:-;;;;;;;;;;;;;:::o;62:480:45:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.18;\n\nimport \"../PermissionGroups.sol\";\n\n\ncontract MockPermission is PermissionGroups {\n    uint public rate;\n    bool public tradeActive = true;\n\n    function MockPermission () public\n        PermissionGroups()\n    {\n    }\n\n    function setRate ( uint newRate ) public\n        onlyOperator\n    {\n        rate = newRate;\n    }\n\n    function stopTrade () public\n        onlyAlerter\n    {\n        tradeActive = false;\n    }\n\n    function activateTrade () public\n        onlyOperator\n    {\n        tradeActive = true;\n    }\n}\n",
  "sourcePath": "/Users/oscarr/Ethereum/frappe/contracts/mockContracts/MockPermission.sol",
  "ast": {
    "absolutePath": "/Users/oscarr/Ethereum/frappe/contracts/mockContracts/MockPermission.sol",
    "exportedSymbols": {
      "MockPermission": [
        14353
      ]
    },
    "id": 14354,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 14306,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:45"
      },
      {
        "absolutePath": "/Users/oscarr/Ethereum/frappe/contracts/PermissionGroups.sol",
        "file": "../PermissionGroups.sol",
        "id": 14307,
        "nodeType": "ImportDirective",
        "scope": 14354,
        "sourceUnit": 8555,
        "src": "26:33:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 14308,
              "name": "PermissionGroups",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8554,
              "src": "89:16:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PermissionGroups_$8554",
                "typeString": "contract PermissionGroups"
              }
            },
            "id": 14309,
            "nodeType": "InheritanceSpecifier",
            "src": "89:16:45"
          }
        ],
        "contractDependencies": [
          8554
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 14353,
        "linearizedBaseContracts": [
          14353,
          8554
        ],
        "name": "MockPermission",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 14311,
            "name": "rate",
            "nodeType": "VariableDeclaration",
            "scope": 14353,
            "src": "112:16:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14310,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "112:4:45",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 14314,
            "name": "tradeActive",
            "nodeType": "VariableDeclaration",
            "scope": 14353,
            "src": "134:30:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 14312,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "134:4:45",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "74727565",
              "id": 14313,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "160:4:45",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 14319,
              "nodeType": "Block",
              "src": "236:7:45",
              "statements": []
            },
            "id": 14320,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 14317,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 14316,
                  "name": "PermissionGroups",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8554,
                  "src": "213:16:45",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_PermissionGroups_$8554_$",
                    "typeString": "type(contract PermissionGroups)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "213:18:45"
              }
            ],
            "name": "MockPermission",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14315,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "195:2:45"
            },
            "payable": false,
            "returnParameters": {
              "id": 14318,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "236:0:45"
            },
            "scope": 14353,
            "src": "171:72:45",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 14331,
              "nodeType": "Block",
              "src": "315:31:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 14329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 14327,
                      "name": "rate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14311,
                      "src": "325:4:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 14328,
                      "name": "newRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14322,
                      "src": "332:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "325:14:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 14330,
                  "nodeType": "ExpressionStatement",
                  "src": "325:14:45"
                }
              ]
            },
            "id": 14332,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 14325,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 14324,
                  "name": "onlyOperator",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8220,
                  "src": "298:12:45",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "298:12:45"
              }
            ],
            "name": "setRate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14322,
                  "name": "newRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 14332,
                  "src": "268:12:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14321,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "268:4:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "266:16:45"
            },
            "payable": false,
            "returnParameters": {
              "id": 14326,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "315:0:45"
            },
            "scope": 14353,
            "src": "249:97:45",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 14341,
              "nodeType": "Block",
              "src": "405:36:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 14339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 14337,
                      "name": "tradeActive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14314,
                      "src": "415:11:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 14338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "429:5:45",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "415:19:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 14340,
                  "nodeType": "ExpressionStatement",
                  "src": "415:19:45"
                }
              ]
            },
            "id": 14342,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 14335,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 14334,
                  "name": "onlyAlerter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8231,
                  "src": "389:11:45",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "389:11:45"
              }
            ],
            "name": "stopTrade",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14333,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "371:2:45"
            },
            "payable": false,
            "returnParameters": {
              "id": 14336,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "405:0:45"
            },
            "scope": 14353,
            "src": "352:89:45",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 14351,
              "nodeType": "Block",
              "src": "505:35:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 14349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 14347,
                      "name": "tradeActive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14314,
                      "src": "515:11:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 14348,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "529:4:45",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "515:18:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 14350,
                  "nodeType": "ExpressionStatement",
                  "src": "515:18:45"
                }
              ]
            },
            "id": 14352,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 14345,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 14344,
                  "name": "onlyOperator",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8220,
                  "src": "488:12:45",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "488:12:45"
              }
            ],
            "name": "activateTrade",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14343,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "470:2:45"
            },
            "payable": false,
            "returnParameters": {
              "id": 14346,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "505:0:45"
            },
            "scope": 14353,
            "src": "447:93:45",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 14354,
        "src": "62:480:45"
      }
    ],
    "src": "0:543:45"
  },
  "legacyAST": {
    "absolutePath": "/Users/oscarr/Ethereum/frappe/contracts/mockContracts/MockPermission.sol",
    "exportedSymbols": {
      "MockPermission": [
        14353
      ]
    },
    "id": 14354,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 14306,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:45"
      },
      {
        "absolutePath": "/Users/oscarr/Ethereum/frappe/contracts/PermissionGroups.sol",
        "file": "../PermissionGroups.sol",
        "id": 14307,
        "nodeType": "ImportDirective",
        "scope": 14354,
        "sourceUnit": 8555,
        "src": "26:33:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 14308,
              "name": "PermissionGroups",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8554,
              "src": "89:16:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PermissionGroups_$8554",
                "typeString": "contract PermissionGroups"
              }
            },
            "id": 14309,
            "nodeType": "InheritanceSpecifier",
            "src": "89:16:45"
          }
        ],
        "contractDependencies": [
          8554
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 14353,
        "linearizedBaseContracts": [
          14353,
          8554
        ],
        "name": "MockPermission",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 14311,
            "name": "rate",
            "nodeType": "VariableDeclaration",
            "scope": 14353,
            "src": "112:16:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14310,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "112:4:45",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 14314,
            "name": "tradeActive",
            "nodeType": "VariableDeclaration",
            "scope": 14353,
            "src": "134:30:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 14312,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "134:4:45",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "74727565",
              "id": 14313,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "160:4:45",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 14319,
              "nodeType": "Block",
              "src": "236:7:45",
              "statements": []
            },
            "id": 14320,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 14317,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 14316,
                  "name": "PermissionGroups",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8554,
                  "src": "213:16:45",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_PermissionGroups_$8554_$",
                    "typeString": "type(contract PermissionGroups)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "213:18:45"
              }
            ],
            "name": "MockPermission",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14315,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "195:2:45"
            },
            "payable": false,
            "returnParameters": {
              "id": 14318,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "236:0:45"
            },
            "scope": 14353,
            "src": "171:72:45",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 14331,
              "nodeType": "Block",
              "src": "315:31:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 14329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 14327,
                      "name": "rate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14311,
                      "src": "325:4:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 14328,
                      "name": "newRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14322,
                      "src": "332:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "325:14:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 14330,
                  "nodeType": "ExpressionStatement",
                  "src": "325:14:45"
                }
              ]
            },
            "id": 14332,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 14325,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 14324,
                  "name": "onlyOperator",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8220,
                  "src": "298:12:45",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "298:12:45"
              }
            ],
            "name": "setRate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14322,
                  "name": "newRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 14332,
                  "src": "268:12:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14321,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "268:4:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "266:16:45"
            },
            "payable": false,
            "returnParameters": {
              "id": 14326,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "315:0:45"
            },
            "scope": 14353,
            "src": "249:97:45",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 14341,
              "nodeType": "Block",
              "src": "405:36:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 14339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 14337,
                      "name": "tradeActive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14314,
                      "src": "415:11:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 14338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "429:5:45",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "415:19:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 14340,
                  "nodeType": "ExpressionStatement",
                  "src": "415:19:45"
                }
              ]
            },
            "id": 14342,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 14335,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 14334,
                  "name": "onlyAlerter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8231,
                  "src": "389:11:45",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "389:11:45"
              }
            ],
            "name": "stopTrade",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14333,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "371:2:45"
            },
            "payable": false,
            "returnParameters": {
              "id": 14336,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "405:0:45"
            },
            "scope": 14353,
            "src": "352:89:45",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 14351,
              "nodeType": "Block",
              "src": "505:35:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 14349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 14347,
                      "name": "tradeActive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14314,
                      "src": "515:11:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 14348,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "529:4:45",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "515:18:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 14350,
                  "nodeType": "ExpressionStatement",
                  "src": "515:18:45"
                }
              ]
            },
            "id": 14352,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 14345,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 14344,
                  "name": "onlyOperator",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8220,
                  "src": "488:12:45",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "488:12:45"
              }
            ],
            "name": "activateTrade",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14343,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "470:2:45"
            },
            "payable": false,
            "returnParameters": {
              "id": 14346,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "505:0:45"
            },
            "scope": 14353,
            "src": "447:93:45",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 14354,
        "src": "62:480:45"
      }
    ],
    "src": "0:543:45"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.18+commit.9cf6e910.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.6",
  "updatedAt": "2019-05-18T17:14:13.254Z",
  "devdoc": {
    "methods": {
      "claimAdmin()": {
        "details": "Allows the pendingAdmin address to finalize the change admin process."
      },
      "transferAdmin(address)": {
        "details": "Allows the current admin to set the pendingAdmin address.",
        "params": {
          "newAdmin": "The address to transfer ownership to."
        }
      },
      "transferAdminQuickly(address)": {
        "details": "Allows the current admin to set the admin in one tx. Useful initial deployment.",
        "params": {
          "newAdmin": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}