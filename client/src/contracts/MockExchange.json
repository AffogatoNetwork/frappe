{
  "contractName": "MockExchange",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "owners",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "exchangeName",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenDepositAddresses",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "bank",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_exchangeName",
          "type": "string"
        },
        {
          "name": "_bank",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "token",
          "type": "address"
        },
        {
          "name": "tokenAmount",
          "type": "uint256"
        },
        {
          "name": "destination",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "tokens",
          "type": "address[]"
        },
        {
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "name": "clearBalances",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "addOwner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "token",
          "type": "address"
        }
      ],
      "name": "addMockDepositAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.18+commit.9cf6e910\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"owners\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"exchangeName\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenDepositAddresses\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"addOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bank\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokens\",\"type\":\"address[]\"},{\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"clearBalances\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"addMockDepositAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_exchangeName\",\"type\":\"string\"},{\"name\":\"_bank\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"author\":\"Ilan Doron\",\"methods\":{},\"title\":\"Mock Exchange Deposit Address\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/oscarr/Ethereum/frappe/contracts/mockContracts/MockExchange.sol\":\"MockExchange\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/oscarr/Ethereum/frappe/contracts/ERC20Interface.sol\":{\"keccak256\":\"0x0e7f8073e3de5997f6c36d7226923c5173b80a834a471f38f6da29d804e96ad0\",\"urls\":[\"bzzr://2ea77f174c95cf0b8383a06a383ca79cdc7296dabb2b79f56f8642abe1d83a5c\"]},\"/Users/oscarr/Ethereum/frappe/contracts/Utils.sol\":{\"keccak256\":\"0x32a3a9ea6af49ab06bee6244697d7f59e291664f50ab77b085f4ee5385928727\",\"urls\":[\"bzzr://dbd83a0b1c6b3fbde0e887a9c08e1f0b6e76647be2cfcc0457b23d74c9163e77\"]},\"/Users/oscarr/Ethereum/frappe/contracts/mockContracts/MockCentralBank.sol\":{\"keccak256\":\"0x38a0ee0285275b9d433626b50c6595bd266d66eb6a9160a355fbbf355f6492d2\",\"urls\":[\"bzzr://6b6f99dfcbf96f73d615ce83c7d92d7655316b094136b81180bdd338885cbdf2\"]},\"/Users/oscarr/Ethereum/frappe/contracts/mockContracts/MockDepositAddress.sol\":{\"keccak256\":\"0x2b7f69ed10fc8772cbf3457f52049f432bf415965d3e980efefd825be412b1e0\",\"urls\":[\"bzzr://c664819476fc642ab72bb940617545ec6eaab061cfbee6df70dc4cfdb3743b3b\"]},\"/Users/oscarr/Ethereum/frappe/contracts/mockContracts/MockDepositAddressEther.sol\":{\"keccak256\":\"0xa7d8c43ade3286cc8fdb96c20da8e277420fb474dc58b314ba23cfc18fbc8644\",\"urls\":[\"bzzr://00f683fdb1d7a63f66b82c5db7ff4f81308b75be9af0166c557630e2f15a1483\"]},\"/Users/oscarr/Ethereum/frappe/contracts/mockContracts/MockDepositAddressToken.sol\":{\"keccak256\":\"0xd3ac56fb7fb92d3fb54b0a5d50bd4ef2704c39aa0dbe3c706cc3f1e431d93026\",\"urls\":[\"bzzr://24194325e0a1b10a69887fb38c998ac385fb608dd39959e13eea43296661e03e\"]},\"/Users/oscarr/Ethereum/frappe/contracts/mockContracts/MockExchange.sol\":{\"keccak256\":\"0x034cfca9a5709638ec854b4a529e262cc95fd9612f7fdf8514e13311eedc2f41\",\"urls\":[\"bzzr://4cd0bd97daf799d76e10202275f4e5448c837c04ef49ab20b457fe7f77641475\"]}},\"version\":1}",
  "bytecode": "0x6060604052341561000f57600080fd5b60405162001fb138038062001fb183398101604052808051820191906020018051906020019091905050816001908051906020019061004f9291906100f0565b5080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050610195565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061013157805160ff191683800117855561015f565b8280016001018555821561015f579182015b8281111561015e578251825591602001919060010190610143565b5b50905061016c9190610170565b5090565b61019291905b8082111561018e576000816000905550600101610176565b5090565b90565b611e0c80620001a56000396000f300606060405260043610610099576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063022914a71461009e5780634f68ea5f146100ef57806369328dec1461017d5780636a0d6681146101de5780637065cb481461025757806376cdb03b14610290578063bb49a123146102e5578063d8f67a901461037f578063f8b2cb4f146103b8575b600080fd5b34156100a957600080fd5b6100d5600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610405565b604051808215151515815260200191505060405180910390f35b34156100fa57600080fd5b610102610425565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610142578082015181840152602081019050610127565b50505050905090810190601f16801561016f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561018857600080fd5b6101dc600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506104c3565b005b34156101e957600080fd5b610215600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506106cf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561026257600080fd5b61028e600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610702565b005b341561029b57600080fd5b6102a36107b5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156102f057600080fd5b61037d600480803590602001908201803590602001908080602002602001604051908101604052809392919081815260200183836020028082843782019150505050505091908035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919050506107db565b005b341561038a57600080fd5b6103b6600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610a15565b005b34156103c357600080fd5b6103ef600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610e71565b6040518082815260200191505060405180910390f35b60036020528060005260406000206000915054906101000a900460ff1681565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104bb5780601f10610490576101008083540402835291602001916104bb565b820191906000526020600020905b81548152906001019060200180831161049e57829003601f168201915b505050505081565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561051b57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515156105b657600080fd5b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662f714ce83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b15156106b657600080fd5b6102c65a03f115156106c757600080fd5b505050505050565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561075a57600080fd5b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561083557600080fd5b600090505b8251811015610a1057600073ffffffffffffffffffffffffffffffffffffffff1660046000858481518110151561086d57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156108f357610a03565b60046000848381518110151561090557fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166384d9a4e6838381518110151561099357fe5b906020019060200201516040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381600087803b15156109ee57600080fd5b6102c65a03f115156109ff57600080fd5b5050505b808060010191505061083a565b505050565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515610a6d57600080fd5b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610be257600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630610ae1610f60565b808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050604051809103906000f0801515610b6057600080fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610d3f565b80600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630610c0f610f70565b808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019350505050604051809103906000f0801515610cc157600080fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637065cb48600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1515610e5a57600080fd5b6102c65a03f11515610e6b57600080fd5b50505050565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166312065fe06000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1515610f3e57600080fd5b6102c65a03f11515610f4f57600080fd5b505050604051805190509050919050565b60405161052a80610f8183390190565b604051610936806114ab8339019056006060604052341561000f57600080fd5b60405160408061052a83398101604052808051906020019091908051906020019091905050818180600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050610460806100ca6000396000f30060606040526004361061006c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168062f714ce1461006e57806312065fe0146100b057806376cdb03b146100d957806384d9a4e61461012e5780638da5cb5b14610151575b005b341561007957600080fd5b6100ae600480803590602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506101a6565b005b34156100bb57600080fd5b6100c36102e9565b6040518082815260200191505060405180910390f35b34156100e457600080fd5b6100ec610308565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561013957600080fd5b61014f600480803590602001909190505061032d565b005b341561015c57600080fd5b61016461040e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561020257600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633bed33ce836040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381600087803b151561029157600080fd5b6102c65a03f115156102a257600080fd5b5050508073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505015156102e557600080fd5b5050565b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561038957600080fd5b803073ffffffffffffffffffffffffffffffffffffffff163110151561040b576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050151561040a57600080fd5b5b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a72305820824d62b916f5c62e85db3bced86083bf90bb0801d741d4f5264742480bdb95ef00296060604052341561000f57600080fd5b60405160608061093683398101604052808051906020019091908051906020019091908051906020019091905050818180600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505082600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050610821806101156000396000f300606060405260043610610077576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168062f714ce1461007c57806312065fe0146100be57806376cdb03b146100e757806384d9a4e61461013c5780638da5cb5b1461015f578063fc0c546a146101b4575b600080fd5b341561008757600080fd5b6100bc600480803590602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610209565b005b34156100c957600080fd5b6100d161044b565b6040518082815260200191505060405180910390f35b34156100f257600080fd5b6100fa610532565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561014757600080fd5b61015d6004808035906020019091905050610557565b005b341561016a57600080fd5b6101726107a9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156101bf57600080fd5b6101c76107cf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561026557600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639e281a98600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b151561034a57600080fd5b6102c65a03f1151561035b57600080fd5b505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82846000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561042b57600080fd5b6102c65a03f1151561043c57600080fd5b50505060405180519050505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561051257600080fd5b6102c65a03f1151561052357600080fd5b50505060405180519050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156105b357600080fd5b80600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561067957600080fd5b6102c65a03f1151561068a57600080fd5b505050604051805190501015156107a657600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561078957600080fd5b6102c65a03f1151561079a57600080fd5b50505060405180519050505b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a723058200105f27b0e3c49ab5e505b306a7156e5f0316d1b54a95b881c162e945cbbfb520029a165627a7a723058200a96797c26b59909e1180d33205e48fed60d6f4ac5f47abf28a1f3f24d3595c30029",
  "deployedBytecode": "0x606060405260043610610099576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063022914a71461009e5780634f68ea5f146100ef57806369328dec1461017d5780636a0d6681146101de5780637065cb481461025757806376cdb03b14610290578063bb49a123146102e5578063d8f67a901461037f578063f8b2cb4f146103b8575b600080fd5b34156100a957600080fd5b6100d5600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610405565b604051808215151515815260200191505060405180910390f35b34156100fa57600080fd5b610102610425565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610142578082015181840152602081019050610127565b50505050905090810190601f16801561016f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561018857600080fd5b6101dc600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506104c3565b005b34156101e957600080fd5b610215600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506106cf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561026257600080fd5b61028e600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610702565b005b341561029b57600080fd5b6102a36107b5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156102f057600080fd5b61037d600480803590602001908201803590602001908080602002602001604051908101604052809392919081815260200183836020028082843782019150505050505091908035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919050506107db565b005b341561038a57600080fd5b6103b6600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610a15565b005b34156103c357600080fd5b6103ef600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610e71565b6040518082815260200191505060405180910390f35b60036020528060005260406000206000915054906101000a900460ff1681565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104bb5780601f10610490576101008083540402835291602001916104bb565b820191906000526020600020905b81548152906001019060200180831161049e57829003601f168201915b505050505081565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561051b57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515156105b657600080fd5b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662f714ce83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b15156106b657600080fd5b6102c65a03f115156106c757600080fd5b505050505050565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561075a57600080fd5b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561083557600080fd5b600090505b8251811015610a1057600073ffffffffffffffffffffffffffffffffffffffff1660046000858481518110151561086d57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156108f357610a03565b60046000848381518110151561090557fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166384d9a4e6838381518110151561099357fe5b906020019060200201516040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381600087803b15156109ee57600080fd5b6102c65a03f115156109ff57600080fd5b5050505b808060010191505061083a565b505050565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515610a6d57600080fd5b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610be257600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630610ae1610f60565b808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050604051809103906000f0801515610b6057600080fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610d3f565b80600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630610c0f610f70565b808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019350505050604051809103906000f0801515610cc157600080fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637065cb48600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1515610e5a57600080fd5b6102c65a03f11515610e6b57600080fd5b50505050565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166312065fe06000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1515610f3e57600080fd5b6102c65a03f11515610f4f57600080fd5b505050604051805190509050919050565b60405161052a80610f8183390190565b604051610936806114ab8339019056006060604052341561000f57600080fd5b60405160408061052a83398101604052808051906020019091908051906020019091905050818180600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050610460806100ca6000396000f30060606040526004361061006c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168062f714ce1461006e57806312065fe0146100b057806376cdb03b146100d957806384d9a4e61461012e5780638da5cb5b14610151575b005b341561007957600080fd5b6100ae600480803590602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506101a6565b005b34156100bb57600080fd5b6100c36102e9565b6040518082815260200191505060405180910390f35b34156100e457600080fd5b6100ec610308565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561013957600080fd5b61014f600480803590602001909190505061032d565b005b341561015c57600080fd5b61016461040e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561020257600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633bed33ce836040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381600087803b151561029157600080fd5b6102c65a03f115156102a257600080fd5b5050508073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505015156102e557600080fd5b5050565b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561038957600080fd5b803073ffffffffffffffffffffffffffffffffffffffff163110151561040b576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050151561040a57600080fd5b5b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a72305820824d62b916f5c62e85db3bced86083bf90bb0801d741d4f5264742480bdb95ef00296060604052341561000f57600080fd5b60405160608061093683398101604052808051906020019091908051906020019091908051906020019091905050818180600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505082600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050610821806101156000396000f300606060405260043610610077576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168062f714ce1461007c57806312065fe0146100be57806376cdb03b146100e757806384d9a4e61461013c5780638da5cb5b1461015f578063fc0c546a146101b4575b600080fd5b341561008757600080fd5b6100bc600480803590602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610209565b005b34156100c957600080fd5b6100d161044b565b6040518082815260200191505060405180910390f35b34156100f257600080fd5b6100fa610532565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561014757600080fd5b61015d6004808035906020019091905050610557565b005b341561016a57600080fd5b6101726107a9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156101bf57600080fd5b6101c76107cf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561026557600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639e281a98600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b151561034a57600080fd5b6102c65a03f1151561035b57600080fd5b505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82846000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561042b57600080fd5b6102c65a03f1151561043c57600080fd5b50505060405180519050505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561051257600080fd5b6102c65a03f1151561052357600080fd5b50505060405180519050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156105b357600080fd5b80600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561067957600080fd5b6102c65a03f1151561068a57600080fd5b505050604051805190501015156107a657600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561078957600080fd5b6102c65a03f1151561079a57600080fd5b50505060405180519050505b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a723058200105f27b0e3c49ab5e505b306a7156e5f0316d1b54a95b881c162e945cbbfb520029a165627a7a723058200a96797c26b59909e1180d33205e48fed60d6f4ac5f47abf28a1f3f24d3595c30029",
  "sourceMap": "388:1670:41:-;;;605:176;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;704:13;689:12;:28;;;;;;;;;;;;:::i;:::-;;734:5;727:4;;:12;;;;;;;;;;;;;;;;;;770:4;749:6;:18;756:10;749:18;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;605:176;;388:1670;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "388:1670:41:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;491:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;426:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;873:299:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;533:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1602:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;458:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1178:286;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1703:353;;;;;;;;;;;;;;;;;;;;;;;;;;;;1470:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;491:36;;;;;;;;;;;;;;;;;;;;;;:::o;426:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;873:299::-;830:6;:18;837:10;830:18;;;;;;;;;;;;;;;;;;;;;;;;;822:27;;;;;;;;1018:1;978:42;;:21;:28;1000:5;978:28;;;;;;;;;;;;;;;;;;;;;;;;;:42;;;;970:51;;;;;;;;1102:21;:28;1124:5;1102:28;;;;;;;;;;;;;;;;;;;;;;;;;:37;;;1140:11;1153;1102:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;873:299;;;:::o;533:65::-;;;;;;;;;;;;;;;;;;;;;;:::o;1602:95::-;830:6;:18;837:10;830:18;;;;;;;;;;;;;;;;;;;;;;;;;822:27;;;;;;;;1686:4;1667:6;:16;1674:8;1667:16;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;1602:95;:::o;458:27::-;;;;;;;;;;;;;:::o;1178:286::-;1266:6;830;:18;837:10;830:18;;;;;;;;;;;;;;;;;;;;;;;;;822:27;;;;;;;;1275:1;1266:10;;1261:197;1282:6;:13;1278:1;:17;1261:197;;;1364:1;1320:46;;:21;:32;1342:6;1349:1;1342:9;;;;;;;;;;;;;;;;;;1320:32;;;;;;;;;;;;;;;;;;;;;;;;;:46;;;1316:60;;;1368:8;;1316:60;1390:21;:32;1412:6;1419:1;1412:9;;;;;;;;;;;;;;;;;;1390:32;;;;;;;;;;;;;;;;;;;;;;;;;:45;;;1436:7;1444:1;1436:10;;;;;;;;;;;;;;;;;;1390:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1261:197;1297:3;;;;;;;1261:197;;;1178:286;;;:::o;1703:353::-;830:6;:18;837:10;830:18;;;;;;;;;;;;;;;;;;;;;;;;;822:27;;;;;;;;167:44:21;1781:26:41;;:5;:26;;;1777:218;;;1880:4;;;;;;;;;;;1886;1852:39;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1821:21;:28;1843:5;1821:28;;;;;;;;;;;;;;;;:70;;;;;;;;;;;;;;;;;;1777:218;;;1977:5;1984:4;;;;;;;;;;;1990;1949:46;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1918:21;:28;1940:5;1918:28;;;;;;;;;;;;;;;;:77;;;;;;;;;;;;;;;;;;1777:218;2006:4;;;;;;;;;;;:13;;;2020:21;:28;2042:5;2020:28;;;;;;;;;;;;;;;;;;;;;;;;;2006:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1703:353;:::o;1470:126::-;1525:4;1548:21;:28;1570:5;1548:28;;;;;;;;;;;;;;;;;;;;;;;;;:39;;;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1541:48;;1470:126;;;:::o;388:1670::-;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.18;\n\n\nimport \"../ERC20Interface.sol\";\nimport \"./MockCentralBank.sol\";\nimport \"./MockDepositAddressEther.sol\";\nimport \"./MockDepositAddressToken.sol\";\nimport \"../Utils.sol\";\n\n\n/// @title Mock Exchange Deposit Address\n/// @author Ilan Doron\n/// @dev a dummy contract that simulates a deposit address of an exchange. allows user to deposit, withdraw and convert tokens.\ncontract MockExchange is Utils {\n\n    string public exchangeName;\n    MockCentralBank public bank;\n    mapping(address=>bool) public owners;\n    mapping(address=>MockDepositAddress) public tokenDepositAddresses;\n\n    function MockExchange(string _exchangeName, MockCentralBank _bank) public {\n        exchangeName = _exchangeName;\n        bank = _bank;\n        owners[msg.sender] = true;\n    }\n\n    modifier onlyOwner()\n    {\n        require(owners[msg.sender]);\n        _;\n    }\n\n    function withdraw(ERC20 token, uint tokenAmount, address destination) public onlyOwner {\n        require(tokenDepositAddresses[token] != address(0));\n        // withdraw from mockDepositaddress. which withdraws from bank\n        tokenDepositAddresses[token].withdraw(tokenAmount, destination);\n    }\n\n    function clearBalances(ERC20[] tokens, uint[] amounts) public onlyOwner {\n\n        for (uint i = 0; i < tokens.length; i++) {\n            if (tokenDepositAddresses[tokens[i]] == address(0)) continue;\n            tokenDepositAddresses[tokens[i]].clearBalance(amounts[i]);\n        }\n    }\n\n    function getBalance( ERC20 token ) public view returns(uint) {\n        return tokenDepositAddresses[token].getBalance();\n    }\n\n    function addOwner( address newOwner ) public onlyOwner {\n        owners[newOwner] = true;\n    }\n\n    function addMockDepositAddress( ERC20 token ) public onlyOwner {\n\n        if (token == ETH_TOKEN_ADDRESS)\n            tokenDepositAddresses[token] = new MockDepositAddressEther(bank, this);\n        else\n            tokenDepositAddresses[token] = new MockDepositAddressToken(token, bank, this);\n\n        bank.addOwner(tokenDepositAddresses[token]);\n    }\n}",
  "sourcePath": "/Users/oscarr/Ethereum/frappe/contracts/mockContracts/MockExchange.sol",
  "ast": {
    "absolutePath": "/Users/oscarr/Ethereum/frappe/contracts/mockContracts/MockExchange.sol",
    "exportedSymbols": {
      "MockExchange": [
        13808
      ]
    },
    "id": 13809,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13608,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:41"
      },
      {
        "absolutePath": "/Users/oscarr/Ethereum/frappe/contracts/ERC20Interface.sol",
        "file": "../ERC20Interface.sol",
        "id": 13609,
        "nodeType": "ImportDirective",
        "scope": 13809,
        "sourceUnit": 1560,
        "src": "27:31:41",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/oscarr/Ethereum/frappe/contracts/mockContracts/MockCentralBank.sol",
        "file": "./MockCentralBank.sol",
        "id": 13610,
        "nodeType": "ImportDirective",
        "scope": 13809,
        "sourceUnit": 13223,
        "src": "59:31:41",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/oscarr/Ethereum/frappe/contracts/mockContracts/MockDepositAddressEther.sol",
        "file": "./MockDepositAddressEther.sol",
        "id": 13611,
        "nodeType": "ImportDirective",
        "scope": 13809,
        "sourceUnit": 13445,
        "src": "91:39:41",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/oscarr/Ethereum/frappe/contracts/mockContracts/MockDepositAddressToken.sol",
        "file": "./MockDepositAddressToken.sol",
        "id": 13612,
        "nodeType": "ImportDirective",
        "scope": 13809,
        "sourceUnit": 13530,
        "src": "131:39:41",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/oscarr/Ethereum/frappe/contracts/Utils.sol",
        "file": "../Utils.sol",
        "id": 13613,
        "nodeType": "ImportDirective",
        "scope": 13809,
        "sourceUnit": 9094,
        "src": "171:22:41",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 13614,
              "name": "Utils",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9093,
              "src": "413:5:41",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Utils_$9093",
                "typeString": "contract Utils"
              }
            },
            "id": 13615,
            "nodeType": "InheritanceSpecifier",
            "src": "413:5:41"
          }
        ],
        "contractDependencies": [
          9093,
          13444,
          13529
        ],
        "contractKind": "contract",
        "documentation": "@title Mock Exchange Deposit Address\n @author Ilan Doron\n @dev a dummy contract that simulates a deposit address of an exchange. allows user to deposit, withdraw and convert tokens.",
        "fullyImplemented": true,
        "id": 13808,
        "linearizedBaseContracts": [
          13808,
          9093
        ],
        "name": "MockExchange",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 13617,
            "name": "exchangeName",
            "nodeType": "VariableDeclaration",
            "scope": 13808,
            "src": "426:26:41",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string storage ref"
            },
            "typeName": {
              "id": 13616,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "426:6:41",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string storage pointer"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 13619,
            "name": "bank",
            "nodeType": "VariableDeclaration",
            "scope": 13808,
            "src": "458:27:41",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockCentralBank_$13222",
              "typeString": "contract MockCentralBank"
            },
            "typeName": {
              "contractScope": null,
              "id": 13618,
              "name": "MockCentralBank",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13222,
              "src": "458:15:41",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockCentralBank_$13222",
                "typeString": "contract MockCentralBank"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 13623,
            "name": "owners",
            "nodeType": "VariableDeclaration",
            "scope": 13808,
            "src": "491:36:41",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 13622,
              "keyType": {
                "id": 13620,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "499:7:41",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "491:22:41",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 13621,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "508:4:41",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 13627,
            "name": "tokenDepositAddresses",
            "nodeType": "VariableDeclaration",
            "scope": 13808,
            "src": "533:65:41",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_MockDepositAddress_$13370_$",
              "typeString": "mapping(address => contract MockDepositAddress)"
            },
            "typeName": {
              "id": 13626,
              "keyType": {
                "id": 13624,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "541:7:41",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "533:36:41",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_MockDepositAddress_$13370_$",
                "typeString": "mapping(address => contract MockDepositAddress)"
              },
              "valueType": {
                "contractScope": null,
                "id": 13625,
                "name": "MockDepositAddress",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 13370,
                "src": "550:18:41",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_MockDepositAddress_$13370",
                  "typeString": "contract MockDepositAddress"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13649,
              "nodeType": "Block",
              "src": "679:102:41",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 13634,
                      "name": "exchangeName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13617,
                      "src": "689:12:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 13635,
                      "name": "_exchangeName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13629,
                      "src": "704:13:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "689:28:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 13637,
                  "nodeType": "ExpressionStatement",
                  "src": "689:28:41"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 13638,
                      "name": "bank",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13619,
                      "src": "727:4:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockCentralBank_$13222",
                        "typeString": "contract MockCentralBank"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 13639,
                      "name": "_bank",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13631,
                      "src": "734:5:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockCentralBank_$13222",
                        "typeString": "contract MockCentralBank"
                      }
                    },
                    "src": "727:12:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockCentralBank_$13222",
                      "typeString": "contract MockCentralBank"
                    }
                  },
                  "id": 13641,
                  "nodeType": "ExpressionStatement",
                  "src": "727:12:41"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 13642,
                        "name": "owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13623,
                        "src": "749:6:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 13645,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 13643,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29911,
                          "src": "756:3:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 13644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "756:10:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "749:18:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 13646,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "770:4:41",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "749:25:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 13648,
                  "nodeType": "ExpressionStatement",
                  "src": "749:25:41"
                }
              ]
            },
            "id": 13650,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "MockExchange",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13629,
                  "name": "_exchangeName",
                  "nodeType": "VariableDeclaration",
                  "scope": 13650,
                  "src": "627:20:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string memory"
                  },
                  "typeName": {
                    "id": 13628,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "627:6:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13631,
                  "name": "_bank",
                  "nodeType": "VariableDeclaration",
                  "scope": 13650,
                  "src": "649:21:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MockCentralBank_$13222",
                    "typeString": "contract MockCentralBank"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13630,
                    "name": "MockCentralBank",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13222,
                    "src": "649:15:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockCentralBank_$13222",
                      "typeString": "contract MockCentralBank"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "626:45:41"
            },
            "payable": false,
            "returnParameters": {
              "id": 13633,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "679:0:41"
            },
            "scope": 13808,
            "src": "605:176:41",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13660,
              "nodeType": "Block",
              "src": "812:55:41",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 13653,
                          "name": "owners",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13623,
                          "src": "830:6:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 13656,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 13654,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29911,
                            "src": "837:3:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 13655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "837:10:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "830:18:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 13652,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29914,
                      "src": "822:7:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 13657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "822:27:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13658,
                  "nodeType": "ExpressionStatement",
                  "src": "822:27:41"
                },
                {
                  "id": 13659,
                  "nodeType": "PlaceholderStatement",
                  "src": "859:1:41"
                }
              ]
            },
            "id": 13661,
            "name": "onlyOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 13651,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "805:2:41"
            },
            "src": "787:80:41",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 13690,
              "nodeType": "Block",
              "src": "960:212:41",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 13673,
                            "name": "tokenDepositAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13627,
                            "src": "978:21:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_MockDepositAddress_$13370_$",
                              "typeString": "mapping(address => contract MockDepositAddress)"
                            }
                          },
                          "id": 13675,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 13674,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13663,
                            "src": "1000:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$1559",
                              "typeString": "contract ERC20"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "978:28:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockDepositAddress_$13370",
                            "typeString": "contract MockDepositAddress"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 13677,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1018:1:41",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 13676,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1010:7:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 13678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1010:10:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "978:42:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 13672,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29914,
                      "src": "970:7:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 13680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "970:51:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13681,
                  "nodeType": "ExpressionStatement",
                  "src": "970:51:41"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13686,
                        "name": "tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13665,
                        "src": "1140:11:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13687,
                        "name": "destination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13667,
                        "src": "1153:11:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 13682,
                          "name": "tokenDepositAddresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13627,
                          "src": "1102:21:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_MockDepositAddress_$13370_$",
                            "typeString": "mapping(address => contract MockDepositAddress)"
                          }
                        },
                        "id": 13684,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 13683,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13663,
                          "src": "1124:5:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$1559",
                            "typeString": "contract ERC20"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1102:28:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockDepositAddress_$13370",
                          "typeString": "contract MockDepositAddress"
                        }
                      },
                      "id": 13685,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13359,
                      "src": "1102:37:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address) external"
                      }
                    },
                    "id": 13688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1102:63:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13689,
                  "nodeType": "ExpressionStatement",
                  "src": "1102:63:41"
                }
              ]
            },
            "id": 13691,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 13670,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 13669,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 13661,
                  "src": "950:9:41",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "950:9:41"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13663,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 13691,
                  "src": "891:11:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$1559",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13662,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1559,
                    "src": "891:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1559",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13665,
                  "name": "tokenAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 13691,
                  "src": "904:16:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13664,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "904:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13667,
                  "name": "destination",
                  "nodeType": "VariableDeclaration",
                  "scope": 13691,
                  "src": "922:19:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13666,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "922:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "890:52:41"
            },
            "payable": false,
            "returnParameters": {
              "id": 13671,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "960:0:41"
            },
            "scope": 13808,
            "src": "873:299:41",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13737,
              "nodeType": "Block",
              "src": "1250:214:41",
              "statements": [
                {
                  "body": {
                    "id": 13735,
                    "nodeType": "Block",
                    "src": "1302:156:41",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 13721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 13713,
                              "name": "tokenDepositAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13627,
                              "src": "1320:21:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_MockDepositAddress_$13370_$",
                                "typeString": "mapping(address => contract MockDepositAddress)"
                              }
                            },
                            "id": 13717,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 13714,
                                "name": "tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13694,
                                "src": "1342:6:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_ERC20_$1559_$dyn_memory_ptr",
                                  "typeString": "contract ERC20[] memory"
                                }
                              },
                              "id": 13716,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 13715,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13703,
                                "src": "1349:1:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1342:9:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$1559",
                                "typeString": "contract ERC20"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1320:32:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockDepositAddress_$13370",
                              "typeString": "contract MockDepositAddress"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 13719,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1364:1:41",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 13718,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1356:7:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 13720,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1356:10:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1320:46:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 13723,
                        "nodeType": "IfStatement",
                        "src": "1316:60:41",
                        "trueBody": {
                          "id": 13722,
                          "nodeType": "Continue",
                          "src": "1368:8:41"
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 13730,
                                "name": "amounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13697,
                                "src": "1436:7:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 13732,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 13731,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13703,
                                "src": "1444:1:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1436:10:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 13724,
                                "name": "tokenDepositAddresses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13627,
                                "src": "1390:21:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_contract$_MockDepositAddress_$13370_$",
                                  "typeString": "mapping(address => contract MockDepositAddress)"
                                }
                              },
                              "id": 13728,
                              "indexExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 13725,
                                  "name": "tokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13694,
                                  "src": "1412:6:41",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_contract$_ERC20_$1559_$dyn_memory_ptr",
                                    "typeString": "contract ERC20[] memory"
                                  }
                                },
                                "id": 13727,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 13726,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13703,
                                  "src": "1419:1:41",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1412:9:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$1559",
                                  "typeString": "contract ERC20"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1390:32:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockDepositAddress_$13370",
                                "typeString": "contract MockDepositAddress"
                              }
                            },
                            "id": 13729,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "clearBalance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13364,
                            "src": "1390:45:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 13733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1390:57:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 13734,
                        "nodeType": "ExpressionStatement",
                        "src": "1390:57:41"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 13709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 13706,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13703,
                      "src": "1278:1:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 13707,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13694,
                        "src": "1282:6:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC20_$1559_$dyn_memory_ptr",
                          "typeString": "contract ERC20[] memory"
                        }
                      },
                      "id": 13708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1282:13:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1278:17:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 13736,
                  "initializationExpression": {
                    "assignments": [
                      13703
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 13703,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 13738,
                        "src": "1266:6:41",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 13702,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1266:4:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 13705,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 13704,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1275:1:41",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1266:10:41"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 13711,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1297:3:41",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 13710,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13703,
                        "src": "1297:1:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 13712,
                    "nodeType": "ExpressionStatement",
                    "src": "1297:3:41"
                  },
                  "nodeType": "ForStatement",
                  "src": "1261:197:41"
                }
              ]
            },
            "id": 13738,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 13700,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 13699,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 13661,
                  "src": "1240:9:41",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1240:9:41"
              }
            ],
            "name": "clearBalances",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13698,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13694,
                  "name": "tokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 13738,
                  "src": "1201:14:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_ERC20_$1559_$dyn_memory_ptr",
                    "typeString": "contract ERC20[] memory"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 13692,
                      "name": "ERC20",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 1559,
                      "src": "1201:5:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1559",
                        "typeString": "contract ERC20"
                      }
                    },
                    "id": 13693,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1201:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_ERC20_$1559_$dyn_storage_ptr",
                      "typeString": "contract ERC20[] storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13697,
                  "name": "amounts",
                  "nodeType": "VariableDeclaration",
                  "scope": 13738,
                  "src": "1217:14:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[] memory"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 13695,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1217:4:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 13696,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1217:6:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[] storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1200:32:41"
            },
            "payable": false,
            "returnParameters": {
              "id": 13701,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1250:0:41"
            },
            "scope": 13808,
            "src": "1178:286:41",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13751,
              "nodeType": "Block",
              "src": "1531:65:41",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 13745,
                          "name": "tokenDepositAddresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13627,
                          "src": "1548:21:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_MockDepositAddress_$13370_$",
                            "typeString": "mapping(address => contract MockDepositAddress)"
                          }
                        },
                        "id": 13747,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 13746,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13740,
                          "src": "1570:5:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$1559",
                            "typeString": "contract ERC20"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1548:28:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockDepositAddress_$13370",
                          "typeString": "contract MockDepositAddress"
                        }
                      },
                      "id": 13748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13369,
                      "src": "1548:39:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 13749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1548:41:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 13744,
                  "id": 13750,
                  "nodeType": "Return",
                  "src": "1541:48:41"
                }
              ]
            },
            "id": 13752,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13740,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 13752,
                  "src": "1491:11:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$1559",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13739,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1559,
                    "src": "1491:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1559",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1489:15:41"
            },
            "payable": false,
            "returnParameters": {
              "id": 13744,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13743,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 13752,
                  "src": "1525:4:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13742,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1525:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1524:6:41"
            },
            "scope": 13808,
            "src": "1470:126:41",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13765,
              "nodeType": "Block",
              "src": "1657:40:41",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 13759,
                        "name": "owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13623,
                        "src": "1667:6:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 13761,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 13760,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13754,
                        "src": "1674:8:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1667:16:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 13762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1686:4:41",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1667:23:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 13764,
                  "nodeType": "ExpressionStatement",
                  "src": "1667:23:41"
                }
              ]
            },
            "id": 13766,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 13757,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 13756,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 13661,
                  "src": "1647:9:41",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1647:9:41"
              }
            ],
            "name": "addOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13754,
                  "name": "newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 13766,
                  "src": "1621:16:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13753,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1621:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1619:20:41"
            },
            "payable": false,
            "returnParameters": {
              "id": 13758,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1657:0:41"
            },
            "scope": 13808,
            "src": "1602:95:41",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13806,
              "nodeType": "Block",
              "src": "1766:290:41",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_contract$_ERC20_$1559",
                      "typeString": "contract ERC20"
                    },
                    "id": 13775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 13773,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13768,
                      "src": "1781:5:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1559",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 13774,
                      "name": "ETH_TOKEN_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8823,
                      "src": "1790:17:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1559",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1781:26:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 13795,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 13786,
                          "name": "tokenDepositAddresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13627,
                          "src": "1918:21:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_MockDepositAddress_$13370_$",
                            "typeString": "mapping(address => contract MockDepositAddress)"
                          }
                        },
                        "id": 13788,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 13787,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13768,
                          "src": "1940:5:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$1559",
                            "typeString": "contract ERC20"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "1918:28:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockDepositAddress_$13370",
                          "typeString": "contract MockDepositAddress"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 13791,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13768,
                            "src": "1977:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$1559",
                              "typeString": "contract ERC20"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 13792,
                            "name": "bank",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13619,
                            "src": "1984:4:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockCentralBank_$13222",
                              "typeString": "contract MockCentralBank"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 13793,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30014,
                            "src": "1990:4:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockExchange_$13808",
                              "typeString": "contract MockExchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$1559",
                              "typeString": "contract ERC20"
                            },
                            {
                              "typeIdentifier": "t_contract$_MockCentralBank_$13222",
                              "typeString": "contract MockCentralBank"
                            },
                            {
                              "typeIdentifier": "t_contract$_MockExchange_$13808",
                              "typeString": "contract MockExchange"
                            }
                          ],
                          "id": 13790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "1949:27:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_ERC20_$1559_$_t_contract$_MockCentralBank_$13222_$_t_address_$returns$_t_contract$_MockDepositAddressToken_$13529_$",
                            "typeString": "function (contract ERC20,contract MockCentralBank,address) returns (contract MockDepositAddressToken)"
                          },
                          "typeName": {
                            "contractScope": null,
                            "id": 13789,
                            "name": "MockDepositAddressToken",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 13529,
                            "src": "1953:23:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockDepositAddressToken_$13529",
                              "typeString": "contract MockDepositAddressToken"
                            }
                          }
                        },
                        "id": 13794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1949:46:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockDepositAddressToken_$13529",
                          "typeString": "contract MockDepositAddressToken"
                        }
                      },
                      "src": "1918:77:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockDepositAddress_$13370",
                        "typeString": "contract MockDepositAddress"
                      }
                    },
                    "id": 13796,
                    "nodeType": "ExpressionStatement",
                    "src": "1918:77:41"
                  },
                  "id": 13797,
                  "nodeType": "IfStatement",
                  "src": "1777:218:41",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 13784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 13776,
                          "name": "tokenDepositAddresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13627,
                          "src": "1821:21:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_MockDepositAddress_$13370_$",
                            "typeString": "mapping(address => contract MockDepositAddress)"
                          }
                        },
                        "id": 13778,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 13777,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13768,
                          "src": "1843:5:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$1559",
                            "typeString": "contract ERC20"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "1821:28:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockDepositAddress_$13370",
                          "typeString": "contract MockDepositAddress"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 13781,
                            "name": "bank",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13619,
                            "src": "1880:4:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockCentralBank_$13222",
                              "typeString": "contract MockCentralBank"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 13782,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30014,
                            "src": "1886:4:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockExchange_$13808",
                              "typeString": "contract MockExchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockCentralBank_$13222",
                              "typeString": "contract MockCentralBank"
                            },
                            {
                              "typeIdentifier": "t_contract$_MockExchange_$13808",
                              "typeString": "contract MockExchange"
                            }
                          ],
                          "id": 13780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "1852:27:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_MockCentralBank_$13222_$_t_address_$returns$_t_contract$_MockDepositAddressEther_$13444_$",
                            "typeString": "function (contract MockCentralBank,address) returns (contract MockDepositAddressEther)"
                          },
                          "typeName": {
                            "contractScope": null,
                            "id": 13779,
                            "name": "MockDepositAddressEther",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 13444,
                            "src": "1856:23:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockDepositAddressEther_$13444",
                              "typeString": "contract MockDepositAddressEther"
                            }
                          }
                        },
                        "id": 13783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1852:39:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockDepositAddressEther_$13444",
                          "typeString": "contract MockDepositAddressEther"
                        }
                      },
                      "src": "1821:70:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockDepositAddress_$13370",
                        "typeString": "contract MockDepositAddress"
                      }
                    },
                    "id": 13785,
                    "nodeType": "ExpressionStatement",
                    "src": "1821:70:41"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 13801,
                          "name": "tokenDepositAddresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13627,
                          "src": "2020:21:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_MockDepositAddress_$13370_$",
                            "typeString": "mapping(address => contract MockDepositAddress)"
                          }
                        },
                        "id": 13803,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 13802,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13768,
                          "src": "2042:5:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$1559",
                            "typeString": "contract ERC20"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2020:28:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockDepositAddress_$13370",
                          "typeString": "contract MockDepositAddress"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockDepositAddress_$13370",
                          "typeString": "contract MockDepositAddress"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 13798,
                        "name": "bank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13619,
                        "src": "2006:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockCentralBank_$13222",
                          "typeString": "contract MockCentralBank"
                        }
                      },
                      "id": 13800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13221,
                      "src": "2006:13:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 13804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2006:43:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13805,
                  "nodeType": "ExpressionStatement",
                  "src": "2006:43:41"
                }
              ]
            },
            "id": 13807,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 13771,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 13770,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 13661,
                  "src": "1756:9:41",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1756:9:41"
              }
            ],
            "name": "addMockDepositAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13769,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13768,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 13807,
                  "src": "1735:11:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$1559",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13767,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1559,
                    "src": "1735:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1559",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1733:15:41"
            },
            "payable": false,
            "returnParameters": {
              "id": 13772,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1766:0:41"
            },
            "scope": 13808,
            "src": "1703:353:41",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 13809,
        "src": "388:1670:41"
      }
    ],
    "src": "0:2058:41"
  },
  "legacyAST": {
    "absolutePath": "/Users/oscarr/Ethereum/frappe/contracts/mockContracts/MockExchange.sol",
    "exportedSymbols": {
      "MockExchange": [
        13808
      ]
    },
    "id": 13809,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13608,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:41"
      },
      {
        "absolutePath": "/Users/oscarr/Ethereum/frappe/contracts/ERC20Interface.sol",
        "file": "../ERC20Interface.sol",
        "id": 13609,
        "nodeType": "ImportDirective",
        "scope": 13809,
        "sourceUnit": 1560,
        "src": "27:31:41",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/oscarr/Ethereum/frappe/contracts/mockContracts/MockCentralBank.sol",
        "file": "./MockCentralBank.sol",
        "id": 13610,
        "nodeType": "ImportDirective",
        "scope": 13809,
        "sourceUnit": 13223,
        "src": "59:31:41",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/oscarr/Ethereum/frappe/contracts/mockContracts/MockDepositAddressEther.sol",
        "file": "./MockDepositAddressEther.sol",
        "id": 13611,
        "nodeType": "ImportDirective",
        "scope": 13809,
        "sourceUnit": 13445,
        "src": "91:39:41",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/oscarr/Ethereum/frappe/contracts/mockContracts/MockDepositAddressToken.sol",
        "file": "./MockDepositAddressToken.sol",
        "id": 13612,
        "nodeType": "ImportDirective",
        "scope": 13809,
        "sourceUnit": 13530,
        "src": "131:39:41",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/oscarr/Ethereum/frappe/contracts/Utils.sol",
        "file": "../Utils.sol",
        "id": 13613,
        "nodeType": "ImportDirective",
        "scope": 13809,
        "sourceUnit": 9094,
        "src": "171:22:41",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 13614,
              "name": "Utils",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9093,
              "src": "413:5:41",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Utils_$9093",
                "typeString": "contract Utils"
              }
            },
            "id": 13615,
            "nodeType": "InheritanceSpecifier",
            "src": "413:5:41"
          }
        ],
        "contractDependencies": [
          9093,
          13444,
          13529
        ],
        "contractKind": "contract",
        "documentation": "@title Mock Exchange Deposit Address\n @author Ilan Doron\n @dev a dummy contract that simulates a deposit address of an exchange. allows user to deposit, withdraw and convert tokens.",
        "fullyImplemented": true,
        "id": 13808,
        "linearizedBaseContracts": [
          13808,
          9093
        ],
        "name": "MockExchange",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 13617,
            "name": "exchangeName",
            "nodeType": "VariableDeclaration",
            "scope": 13808,
            "src": "426:26:41",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string storage ref"
            },
            "typeName": {
              "id": 13616,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "426:6:41",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string storage pointer"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 13619,
            "name": "bank",
            "nodeType": "VariableDeclaration",
            "scope": 13808,
            "src": "458:27:41",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockCentralBank_$13222",
              "typeString": "contract MockCentralBank"
            },
            "typeName": {
              "contractScope": null,
              "id": 13618,
              "name": "MockCentralBank",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13222,
              "src": "458:15:41",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockCentralBank_$13222",
                "typeString": "contract MockCentralBank"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 13623,
            "name": "owners",
            "nodeType": "VariableDeclaration",
            "scope": 13808,
            "src": "491:36:41",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 13622,
              "keyType": {
                "id": 13620,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "499:7:41",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "491:22:41",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 13621,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "508:4:41",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 13627,
            "name": "tokenDepositAddresses",
            "nodeType": "VariableDeclaration",
            "scope": 13808,
            "src": "533:65:41",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_MockDepositAddress_$13370_$",
              "typeString": "mapping(address => contract MockDepositAddress)"
            },
            "typeName": {
              "id": 13626,
              "keyType": {
                "id": 13624,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "541:7:41",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "533:36:41",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_MockDepositAddress_$13370_$",
                "typeString": "mapping(address => contract MockDepositAddress)"
              },
              "valueType": {
                "contractScope": null,
                "id": 13625,
                "name": "MockDepositAddress",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 13370,
                "src": "550:18:41",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_MockDepositAddress_$13370",
                  "typeString": "contract MockDepositAddress"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13649,
              "nodeType": "Block",
              "src": "679:102:41",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 13634,
                      "name": "exchangeName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13617,
                      "src": "689:12:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 13635,
                      "name": "_exchangeName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13629,
                      "src": "704:13:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "689:28:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 13637,
                  "nodeType": "ExpressionStatement",
                  "src": "689:28:41"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 13638,
                      "name": "bank",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13619,
                      "src": "727:4:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockCentralBank_$13222",
                        "typeString": "contract MockCentralBank"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 13639,
                      "name": "_bank",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13631,
                      "src": "734:5:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockCentralBank_$13222",
                        "typeString": "contract MockCentralBank"
                      }
                    },
                    "src": "727:12:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockCentralBank_$13222",
                      "typeString": "contract MockCentralBank"
                    }
                  },
                  "id": 13641,
                  "nodeType": "ExpressionStatement",
                  "src": "727:12:41"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 13642,
                        "name": "owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13623,
                        "src": "749:6:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 13645,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 13643,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29911,
                          "src": "756:3:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 13644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "756:10:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "749:18:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 13646,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "770:4:41",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "749:25:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 13648,
                  "nodeType": "ExpressionStatement",
                  "src": "749:25:41"
                }
              ]
            },
            "id": 13650,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "MockExchange",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13629,
                  "name": "_exchangeName",
                  "nodeType": "VariableDeclaration",
                  "scope": 13650,
                  "src": "627:20:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string memory"
                  },
                  "typeName": {
                    "id": 13628,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "627:6:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13631,
                  "name": "_bank",
                  "nodeType": "VariableDeclaration",
                  "scope": 13650,
                  "src": "649:21:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MockCentralBank_$13222",
                    "typeString": "contract MockCentralBank"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13630,
                    "name": "MockCentralBank",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13222,
                    "src": "649:15:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockCentralBank_$13222",
                      "typeString": "contract MockCentralBank"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "626:45:41"
            },
            "payable": false,
            "returnParameters": {
              "id": 13633,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "679:0:41"
            },
            "scope": 13808,
            "src": "605:176:41",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13660,
              "nodeType": "Block",
              "src": "812:55:41",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 13653,
                          "name": "owners",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13623,
                          "src": "830:6:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 13656,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 13654,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29911,
                            "src": "837:3:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 13655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "837:10:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "830:18:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 13652,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29914,
                      "src": "822:7:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 13657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "822:27:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13658,
                  "nodeType": "ExpressionStatement",
                  "src": "822:27:41"
                },
                {
                  "id": 13659,
                  "nodeType": "PlaceholderStatement",
                  "src": "859:1:41"
                }
              ]
            },
            "id": 13661,
            "name": "onlyOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 13651,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "805:2:41"
            },
            "src": "787:80:41",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 13690,
              "nodeType": "Block",
              "src": "960:212:41",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 13673,
                            "name": "tokenDepositAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13627,
                            "src": "978:21:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_MockDepositAddress_$13370_$",
                              "typeString": "mapping(address => contract MockDepositAddress)"
                            }
                          },
                          "id": 13675,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 13674,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13663,
                            "src": "1000:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$1559",
                              "typeString": "contract ERC20"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "978:28:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockDepositAddress_$13370",
                            "typeString": "contract MockDepositAddress"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 13677,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1018:1:41",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 13676,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1010:7:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 13678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1010:10:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "978:42:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 13672,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29914,
                      "src": "970:7:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 13680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "970:51:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13681,
                  "nodeType": "ExpressionStatement",
                  "src": "970:51:41"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13686,
                        "name": "tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13665,
                        "src": "1140:11:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13687,
                        "name": "destination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13667,
                        "src": "1153:11:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 13682,
                          "name": "tokenDepositAddresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13627,
                          "src": "1102:21:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_MockDepositAddress_$13370_$",
                            "typeString": "mapping(address => contract MockDepositAddress)"
                          }
                        },
                        "id": 13684,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 13683,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13663,
                          "src": "1124:5:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$1559",
                            "typeString": "contract ERC20"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1102:28:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockDepositAddress_$13370",
                          "typeString": "contract MockDepositAddress"
                        }
                      },
                      "id": 13685,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13359,
                      "src": "1102:37:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address) external"
                      }
                    },
                    "id": 13688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1102:63:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13689,
                  "nodeType": "ExpressionStatement",
                  "src": "1102:63:41"
                }
              ]
            },
            "id": 13691,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 13670,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 13669,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 13661,
                  "src": "950:9:41",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "950:9:41"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13663,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 13691,
                  "src": "891:11:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$1559",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13662,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1559,
                    "src": "891:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1559",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13665,
                  "name": "tokenAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 13691,
                  "src": "904:16:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13664,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "904:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13667,
                  "name": "destination",
                  "nodeType": "VariableDeclaration",
                  "scope": 13691,
                  "src": "922:19:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13666,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "922:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "890:52:41"
            },
            "payable": false,
            "returnParameters": {
              "id": 13671,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "960:0:41"
            },
            "scope": 13808,
            "src": "873:299:41",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13737,
              "nodeType": "Block",
              "src": "1250:214:41",
              "statements": [
                {
                  "body": {
                    "id": 13735,
                    "nodeType": "Block",
                    "src": "1302:156:41",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 13721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 13713,
                              "name": "tokenDepositAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13627,
                              "src": "1320:21:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_MockDepositAddress_$13370_$",
                                "typeString": "mapping(address => contract MockDepositAddress)"
                              }
                            },
                            "id": 13717,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 13714,
                                "name": "tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13694,
                                "src": "1342:6:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_ERC20_$1559_$dyn_memory_ptr",
                                  "typeString": "contract ERC20[] memory"
                                }
                              },
                              "id": 13716,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 13715,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13703,
                                "src": "1349:1:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1342:9:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$1559",
                                "typeString": "contract ERC20"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1320:32:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockDepositAddress_$13370",
                              "typeString": "contract MockDepositAddress"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 13719,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1364:1:41",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 13718,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1356:7:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 13720,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1356:10:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1320:46:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 13723,
                        "nodeType": "IfStatement",
                        "src": "1316:60:41",
                        "trueBody": {
                          "id": 13722,
                          "nodeType": "Continue",
                          "src": "1368:8:41"
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 13730,
                                "name": "amounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13697,
                                "src": "1436:7:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 13732,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 13731,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13703,
                                "src": "1444:1:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1436:10:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 13724,
                                "name": "tokenDepositAddresses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13627,
                                "src": "1390:21:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_contract$_MockDepositAddress_$13370_$",
                                  "typeString": "mapping(address => contract MockDepositAddress)"
                                }
                              },
                              "id": 13728,
                              "indexExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 13725,
                                  "name": "tokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13694,
                                  "src": "1412:6:41",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_contract$_ERC20_$1559_$dyn_memory_ptr",
                                    "typeString": "contract ERC20[] memory"
                                  }
                                },
                                "id": 13727,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 13726,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13703,
                                  "src": "1419:1:41",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1412:9:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$1559",
                                  "typeString": "contract ERC20"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1390:32:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockDepositAddress_$13370",
                                "typeString": "contract MockDepositAddress"
                              }
                            },
                            "id": 13729,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "clearBalance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13364,
                            "src": "1390:45:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 13733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1390:57:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 13734,
                        "nodeType": "ExpressionStatement",
                        "src": "1390:57:41"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 13709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 13706,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13703,
                      "src": "1278:1:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 13707,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13694,
                        "src": "1282:6:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC20_$1559_$dyn_memory_ptr",
                          "typeString": "contract ERC20[] memory"
                        }
                      },
                      "id": 13708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1282:13:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1278:17:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 13736,
                  "initializationExpression": {
                    "assignments": [
                      13703
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 13703,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 13738,
                        "src": "1266:6:41",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 13702,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1266:4:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 13705,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 13704,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1275:1:41",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1266:10:41"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 13711,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1297:3:41",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 13710,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13703,
                        "src": "1297:1:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 13712,
                    "nodeType": "ExpressionStatement",
                    "src": "1297:3:41"
                  },
                  "nodeType": "ForStatement",
                  "src": "1261:197:41"
                }
              ]
            },
            "id": 13738,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 13700,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 13699,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 13661,
                  "src": "1240:9:41",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1240:9:41"
              }
            ],
            "name": "clearBalances",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13698,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13694,
                  "name": "tokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 13738,
                  "src": "1201:14:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_ERC20_$1559_$dyn_memory_ptr",
                    "typeString": "contract ERC20[] memory"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 13692,
                      "name": "ERC20",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 1559,
                      "src": "1201:5:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1559",
                        "typeString": "contract ERC20"
                      }
                    },
                    "id": 13693,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1201:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_ERC20_$1559_$dyn_storage_ptr",
                      "typeString": "contract ERC20[] storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13697,
                  "name": "amounts",
                  "nodeType": "VariableDeclaration",
                  "scope": 13738,
                  "src": "1217:14:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[] memory"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 13695,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1217:4:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 13696,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1217:6:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[] storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1200:32:41"
            },
            "payable": false,
            "returnParameters": {
              "id": 13701,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1250:0:41"
            },
            "scope": 13808,
            "src": "1178:286:41",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13751,
              "nodeType": "Block",
              "src": "1531:65:41",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 13745,
                          "name": "tokenDepositAddresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13627,
                          "src": "1548:21:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_MockDepositAddress_$13370_$",
                            "typeString": "mapping(address => contract MockDepositAddress)"
                          }
                        },
                        "id": 13747,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 13746,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13740,
                          "src": "1570:5:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$1559",
                            "typeString": "contract ERC20"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1548:28:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockDepositAddress_$13370",
                          "typeString": "contract MockDepositAddress"
                        }
                      },
                      "id": 13748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13369,
                      "src": "1548:39:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 13749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1548:41:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 13744,
                  "id": 13750,
                  "nodeType": "Return",
                  "src": "1541:48:41"
                }
              ]
            },
            "id": 13752,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13740,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 13752,
                  "src": "1491:11:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$1559",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13739,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1559,
                    "src": "1491:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1559",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1489:15:41"
            },
            "payable": false,
            "returnParameters": {
              "id": 13744,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13743,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 13752,
                  "src": "1525:4:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13742,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1525:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1524:6:41"
            },
            "scope": 13808,
            "src": "1470:126:41",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13765,
              "nodeType": "Block",
              "src": "1657:40:41",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 13759,
                        "name": "owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13623,
                        "src": "1667:6:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 13761,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 13760,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13754,
                        "src": "1674:8:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1667:16:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 13762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1686:4:41",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1667:23:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 13764,
                  "nodeType": "ExpressionStatement",
                  "src": "1667:23:41"
                }
              ]
            },
            "id": 13766,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 13757,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 13756,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 13661,
                  "src": "1647:9:41",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1647:9:41"
              }
            ],
            "name": "addOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13754,
                  "name": "newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 13766,
                  "src": "1621:16:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13753,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1621:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1619:20:41"
            },
            "payable": false,
            "returnParameters": {
              "id": 13758,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1657:0:41"
            },
            "scope": 13808,
            "src": "1602:95:41",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13806,
              "nodeType": "Block",
              "src": "1766:290:41",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_contract$_ERC20_$1559",
                      "typeString": "contract ERC20"
                    },
                    "id": 13775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 13773,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13768,
                      "src": "1781:5:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1559",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 13774,
                      "name": "ETH_TOKEN_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8823,
                      "src": "1790:17:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1559",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1781:26:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 13795,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 13786,
                          "name": "tokenDepositAddresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13627,
                          "src": "1918:21:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_MockDepositAddress_$13370_$",
                            "typeString": "mapping(address => contract MockDepositAddress)"
                          }
                        },
                        "id": 13788,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 13787,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13768,
                          "src": "1940:5:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$1559",
                            "typeString": "contract ERC20"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "1918:28:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockDepositAddress_$13370",
                          "typeString": "contract MockDepositAddress"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 13791,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13768,
                            "src": "1977:5:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$1559",
                              "typeString": "contract ERC20"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 13792,
                            "name": "bank",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13619,
                            "src": "1984:4:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockCentralBank_$13222",
                              "typeString": "contract MockCentralBank"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 13793,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30014,
                            "src": "1990:4:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockExchange_$13808",
                              "typeString": "contract MockExchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$1559",
                              "typeString": "contract ERC20"
                            },
                            {
                              "typeIdentifier": "t_contract$_MockCentralBank_$13222",
                              "typeString": "contract MockCentralBank"
                            },
                            {
                              "typeIdentifier": "t_contract$_MockExchange_$13808",
                              "typeString": "contract MockExchange"
                            }
                          ],
                          "id": 13790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "1949:27:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_ERC20_$1559_$_t_contract$_MockCentralBank_$13222_$_t_address_$returns$_t_contract$_MockDepositAddressToken_$13529_$",
                            "typeString": "function (contract ERC20,contract MockCentralBank,address) returns (contract MockDepositAddressToken)"
                          },
                          "typeName": {
                            "contractScope": null,
                            "id": 13789,
                            "name": "MockDepositAddressToken",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 13529,
                            "src": "1953:23:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockDepositAddressToken_$13529",
                              "typeString": "contract MockDepositAddressToken"
                            }
                          }
                        },
                        "id": 13794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1949:46:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockDepositAddressToken_$13529",
                          "typeString": "contract MockDepositAddressToken"
                        }
                      },
                      "src": "1918:77:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockDepositAddress_$13370",
                        "typeString": "contract MockDepositAddress"
                      }
                    },
                    "id": 13796,
                    "nodeType": "ExpressionStatement",
                    "src": "1918:77:41"
                  },
                  "id": 13797,
                  "nodeType": "IfStatement",
                  "src": "1777:218:41",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 13784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 13776,
                          "name": "tokenDepositAddresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13627,
                          "src": "1821:21:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_MockDepositAddress_$13370_$",
                            "typeString": "mapping(address => contract MockDepositAddress)"
                          }
                        },
                        "id": 13778,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 13777,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13768,
                          "src": "1843:5:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$1559",
                            "typeString": "contract ERC20"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "1821:28:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockDepositAddress_$13370",
                          "typeString": "contract MockDepositAddress"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 13781,
                            "name": "bank",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13619,
                            "src": "1880:4:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockCentralBank_$13222",
                              "typeString": "contract MockCentralBank"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 13782,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30014,
                            "src": "1886:4:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockExchange_$13808",
                              "typeString": "contract MockExchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockCentralBank_$13222",
                              "typeString": "contract MockCentralBank"
                            },
                            {
                              "typeIdentifier": "t_contract$_MockExchange_$13808",
                              "typeString": "contract MockExchange"
                            }
                          ],
                          "id": 13780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "1852:27:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_MockCentralBank_$13222_$_t_address_$returns$_t_contract$_MockDepositAddressEther_$13444_$",
                            "typeString": "function (contract MockCentralBank,address) returns (contract MockDepositAddressEther)"
                          },
                          "typeName": {
                            "contractScope": null,
                            "id": 13779,
                            "name": "MockDepositAddressEther",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 13444,
                            "src": "1856:23:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockDepositAddressEther_$13444",
                              "typeString": "contract MockDepositAddressEther"
                            }
                          }
                        },
                        "id": 13783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1852:39:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockDepositAddressEther_$13444",
                          "typeString": "contract MockDepositAddressEther"
                        }
                      },
                      "src": "1821:70:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockDepositAddress_$13370",
                        "typeString": "contract MockDepositAddress"
                      }
                    },
                    "id": 13785,
                    "nodeType": "ExpressionStatement",
                    "src": "1821:70:41"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 13801,
                          "name": "tokenDepositAddresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13627,
                          "src": "2020:21:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_MockDepositAddress_$13370_$",
                            "typeString": "mapping(address => contract MockDepositAddress)"
                          }
                        },
                        "id": 13803,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 13802,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13768,
                          "src": "2042:5:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$1559",
                            "typeString": "contract ERC20"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2020:28:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockDepositAddress_$13370",
                          "typeString": "contract MockDepositAddress"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockDepositAddress_$13370",
                          "typeString": "contract MockDepositAddress"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 13798,
                        "name": "bank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13619,
                        "src": "2006:4:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockCentralBank_$13222",
                          "typeString": "contract MockCentralBank"
                        }
                      },
                      "id": 13800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13221,
                      "src": "2006:13:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 13804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2006:43:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13805,
                  "nodeType": "ExpressionStatement",
                  "src": "2006:43:41"
                }
              ]
            },
            "id": 13807,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 13771,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 13770,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 13661,
                  "src": "1756:9:41",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1756:9:41"
              }
            ],
            "name": "addMockDepositAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13769,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13768,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 13807,
                  "src": "1735:11:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$1559",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13767,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1559,
                    "src": "1735:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1559",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1733:15:41"
            },
            "payable": false,
            "returnParameters": {
              "id": 13772,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1766:0:41"
            },
            "scope": 13808,
            "src": "1703:353:41",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 13809,
        "src": "388:1670:41"
      }
    ],
    "src": "0:2058:41"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.18+commit.9cf6e910.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.6",
  "updatedAt": "2019-05-18T17:14:13.202Z",
  "devdoc": {
    "author": "Ilan Doron",
    "methods": {},
    "title": "Mock Exchange Deposit Address"
  },
  "userdoc": {
    "methods": {}
  }
}