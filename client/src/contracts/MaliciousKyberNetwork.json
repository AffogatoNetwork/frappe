{
  "contractName": "MaliciousKyberNetwork",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "alerter",
          "type": "address"
        }
      ],
      "name": "removeAlerter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "trader",
          "type": "address"
        },
        {
          "name": "src",
          "type": "address"
        },
        {
          "name": "srcAmount",
          "type": "uint256"
        },
        {
          "name": "dest",
          "type": "address"
        },
        {
          "name": "destAddress",
          "type": "address"
        },
        {
          "name": "maxDestAmount",
          "type": "uint256"
        },
        {
          "name": "minConversionRate",
          "type": "uint256"
        },
        {
          "name": "walletId",
          "type": "address"
        },
        {
          "name": "hint",
          "type": "bytes"
        }
      ],
      "name": "tradeWithHint",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getReserves",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "myFeeWei",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "src",
          "type": "address"
        },
        {
          "name": "dest",
          "type": "address"
        },
        {
          "name": "srcAmount",
          "type": "uint256"
        },
        {
          "name": "usePermissionless",
          "type": "bool"
        }
      ],
      "name": "searchBestRate",
      "outputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "infoFields",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "feeBurner",
          "type": "address"
        }
      ],
      "name": "setFeeBurner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "src",
          "type": "address"
        },
        {
          "name": "dest",
          "type": "address"
        },
        {
          "name": "srcAmount",
          "type": "uint256"
        }
      ],
      "name": "findBestRateOnlyPermission",
      "outputs": [
        {
          "name": "obsolete",
          "type": "uint256"
        },
        {
          "name": "rate",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "enabled",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "reserve",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "removeReserve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "pendingAdmin",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOperators",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "reservesPerTokenSrc",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "whiteList",
          "type": "address"
        }
      ],
      "name": "setWhiteList",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "token",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        },
        {
          "name": "sendTo",
          "type": "address"
        }
      ],
      "name": "withdrawToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maxGasPrice",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newAlerter",
          "type": "address"
        }
      ],
      "name": "addAlerter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "negligibleRateDiff",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "feeBurnerContract",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "expectedRate",
          "type": "address"
        }
      ],
      "name": "setExpectedRate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "expectedRateContract",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "whiteListContract",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "field",
          "type": "bytes32"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setInfo",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getUserCapInWei",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isEnabled",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "reserveType",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "transferAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_enable",
          "type": "bool"
        }
      ],
      "name": "setEnable",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "claimAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "kyberNetworkProxyContract",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "transferAdminQuickly",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAlerters",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "src",
          "type": "address"
        },
        {
          "name": "dest",
          "type": "address"
        },
        {
          "name": "srcQty",
          "type": "uint256"
        }
      ],
      "name": "getExpectedRate",
      "outputs": [
        {
          "name": "expectedRate",
          "type": "uint256"
        },
        {
          "name": "slippageRate",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "reserves",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "src",
          "type": "address"
        },
        {
          "name": "dest",
          "type": "address"
        },
        {
          "name": "srcQty",
          "type": "uint256"
        }
      ],
      "name": "getExpectedRateOnlyPermission",
      "outputs": [
        {
          "name": "expectedRate",
          "type": "uint256"
        },
        {
          "name": "slippageRate",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "PERM_HINT",
      "outputs": [
        {
          "name": "",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "user",
          "type": "address"
        },
        {
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getUserCapInTokenWei",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "reservesPerTokenDest",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOperator",
          "type": "address"
        }
      ],
      "name": "addOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "reserve",
          "type": "address"
        },
        {
          "name": "isPermissionless",
          "type": "bool"
        }
      ],
      "name": "addReserve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "removeOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maxGasPriceValue",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "field",
          "type": "bytes32"
        }
      ],
      "name": "info",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "src",
          "type": "address"
        },
        {
          "name": "dest",
          "type": "address"
        },
        {
          "name": "srcAmount",
          "type": "uint256"
        }
      ],
      "name": "findBestRate",
      "outputs": [
        {
          "name": "obsolete",
          "type": "uint256"
        },
        {
          "name": "rate",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "myWallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_maxGasPrice",
          "type": "uint256"
        },
        {
          "name": "_negligibleRateDiff",
          "type": "uint256"
        }
      ],
      "name": "setParams",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "PERM_HINT_GET_RATE",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "networkProxy",
          "type": "address"
        }
      ],
      "name": "setKyberProxy",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "amount",
          "type": "uint256"
        },
        {
          "name": "sendTo",
          "type": "address"
        }
      ],
      "name": "withdrawEther",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getNumReserves",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "token",
          "type": "address"
        },
        {
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "reserve",
          "type": "address"
        },
        {
          "name": "token",
          "type": "address"
        },
        {
          "name": "ethToToken",
          "type": "bool"
        },
        {
          "name": "tokenToEth",
          "type": "bool"
        },
        {
          "name": "add",
          "type": "bool"
        }
      ],
      "name": "listPairForReserve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_admin",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "EtherReceival",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "reserve",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "add",
          "type": "bool"
        },
        {
          "indexed": false,
          "name": "isPermissionless",
          "type": "bool"
        }
      ],
      "name": "AddReserveToNetwork",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "reserve",
          "type": "address"
        }
      ],
      "name": "RemoveReserveFromNetwork",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "reserve",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "src",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "dest",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "add",
          "type": "bool"
        }
      ],
      "name": "ListReservePairs",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newContract",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "currentContract",
          "type": "address"
        }
      ],
      "name": "WhiteListContractSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newContract",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "currentContract",
          "type": "address"
        }
      ],
      "name": "ExpectedRateContractSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newContract",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "currentContract",
          "type": "address"
        }
      ],
      "name": "FeeBurnerContractSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "maxGasPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "negligibleRateDiff",
          "type": "uint256"
        }
      ],
      "name": "KyberNetwrokParamsSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "isEnabled",
          "type": "bool"
        }
      ],
      "name": "KyberNetworkSetEnable",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "proxy",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "KyberProxySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "trader",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "src",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "dest",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "srcAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "dstAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "destAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "ethWeiValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "reserve1",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "reserve2",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "hint",
          "type": "bytes"
        }
      ],
      "name": "KyberTrade",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "sendTo",
          "type": "address"
        }
      ],
      "name": "TokenWithdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "sendTo",
          "type": "address"
        }
      ],
      "name": "EtherWithdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "pendingAdmin",
          "type": "address"
        }
      ],
      "name": "TransferAdminPending",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "previousAdmin",
          "type": "address"
        }
      ],
      "name": "AdminClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newAlerter",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "isAdd",
          "type": "bool"
        }
      ],
      "name": "AlerterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newOperator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "isAdd",
          "type": "bool"
        }
      ],
      "name": "OperatorAdded",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "setMyFeeWei",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.18+commit.9cf6e910\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"alerter\",\"type\":\"address\"}],\"name\":\"removeAlerter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"trader\",\"type\":\"address\"},{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"srcAmount\",\"type\":\"uint256\"},{\"name\":\"dest\",\"type\":\"address\"},{\"name\":\"destAddress\",\"type\":\"address\"},{\"name\":\"maxDestAmount\",\"type\":\"uint256\"},{\"name\":\"minConversionRate\",\"type\":\"uint256\"},{\"name\":\"walletId\",\"type\":\"address\"},{\"name\":\"hint\",\"type\":\"bytes\"}],\"name\":\"tradeWithHint\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"myFeeWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dest\",\"type\":\"address\"},{\"name\":\"srcAmount\",\"type\":\"uint256\"},{\"name\":\"usePermissionless\",\"type\":\"bool\"}],\"name\":\"searchBestRate\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"infoFields\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"setMyFeeWei\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"feeBurner\",\"type\":\"address\"}],\"name\":\"setFeeBurner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dest\",\"type\":\"address\"},{\"name\":\"srcAmount\",\"type\":\"uint256\"}],\"name\":\"findBestRateOnlyPermission\",\"outputs\":[{\"name\":\"obsolete\",\"type\":\"uint256\"},{\"name\":\"rate\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"enabled\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"reserve\",\"type\":\"address\"},{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"removeReserve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pendingAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOperators\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"reservesPerTokenSrc\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"whiteList\",\"type\":\"address\"}],\"name\":\"setWhiteList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"sendTo\",\"type\":\"address\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxGasPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newAlerter\",\"type\":\"address\"}],\"name\":\"addAlerter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"negligibleRateDiff\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeBurnerContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"expectedRate\",\"type\":\"address\"}],\"name\":\"setExpectedRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"expectedRateContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"whiteListContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"field\",\"type\":\"bytes32\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setInfo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserCapInWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isEnabled\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"reserveType\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"transferAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_enable\",\"type\":\"bool\"}],\"name\":\"setEnable\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claimAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"kyberNetworkProxyContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"transferAdminQuickly\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAlerters\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dest\",\"type\":\"address\"},{\"name\":\"srcQty\",\"type\":\"uint256\"}],\"name\":\"getExpectedRate\",\"outputs\":[{\"name\":\"expectedRate\",\"type\":\"uint256\"},{\"name\":\"slippageRate\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"reserves\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dest\",\"type\":\"address\"},{\"name\":\"srcQty\",\"type\":\"uint256\"}],\"name\":\"getExpectedRateOnlyPermission\",\"outputs\":[{\"name\":\"expectedRate\",\"type\":\"uint256\"},{\"name\":\"slippageRate\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERM_HINT\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"},{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getUserCapInTokenWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"reservesPerTokenDest\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOperator\",\"type\":\"address\"}],\"name\":\"addOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"reserve\",\"type\":\"address\"},{\"name\":\"isPermissionless\",\"type\":\"bool\"}],\"name\":\"addReserve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"removeOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxGasPriceValue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"field\",\"type\":\"bytes32\"}],\"name\":\"info\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dest\",\"type\":\"address\"},{\"name\":\"srcAmount\",\"type\":\"uint256\"}],\"name\":\"findBestRate\",\"outputs\":[{\"name\":\"obsolete\",\"type\":\"uint256\"},{\"name\":\"rate\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"myWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_maxGasPrice\",\"type\":\"uint256\"},{\"name\":\"_negligibleRateDiff\",\"type\":\"uint256\"}],\"name\":\"setParams\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERM_HINT_GET_RATE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"networkProxy\",\"type\":\"address\"}],\"name\":\"setKyberProxy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"sendTo\",\"type\":\"address\"}],\"name\":\"withdrawEther\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getNumReserves\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"reserve\",\"type\":\"address\"},{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"ethToToken\",\"type\":\"bool\"},{\"name\":\"tokenToEth\",\"type\":\"bool\"},{\"name\":\"add\",\"type\":\"bool\"}],\"name\":\"listPairForReserve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_admin\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EtherReceival\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"add\",\"type\":\"bool\"},{\"indexed\":false,\"name\":\"isPermissionless\",\"type\":\"bool\"}],\"name\":\"AddReserveToNetwork\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"reserve\",\"type\":\"address\"}],\"name\":\"RemoveReserveFromNetwork\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"dest\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"add\",\"type\":\"bool\"}],\"name\":\"ListReservePairs\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newContract\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"currentContract\",\"type\":\"address\"}],\"name\":\"WhiteListContractSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newContract\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"currentContract\",\"type\":\"address\"}],\"name\":\"ExpectedRateContractSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newContract\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"currentContract\",\"type\":\"address\"}],\"name\":\"FeeBurnerContractSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"maxGasPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"negligibleRateDiff\",\"type\":\"uint256\"}],\"name\":\"KyberNetwrokParamsSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"isEnabled\",\"type\":\"bool\"}],\"name\":\"KyberNetworkSetEnable\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"proxy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"KyberProxySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"dest\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"srcAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"dstAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"destAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"ethWeiValue\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"reserve1\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"reserve2\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"hint\",\"type\":\"bytes\"}],\"name\":\"KyberTrade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"sendTo\",\"type\":\"address\"}],\"name\":\"TokenWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"sendTo\",\"type\":\"address\"}],\"name\":\"EtherWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"pendingAdmin\",\"type\":\"address\"}],\"name\":\"TransferAdminPending\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newAdmin\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"previousAdmin\",\"type\":\"address\"}],\"name\":\"AdminClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newAlerter\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"isAdd\",\"type\":\"bool\"}],\"name\":\"AlerterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newOperator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"isAdd\",\"type\":\"bool\"}],\"name\":\"OperatorAdded\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"addReserve(address,bool)\":{\"details\":\"add or deletes a reserve to/from the network.\",\"params\":{\"isPermissionless\":\"is the new reserve from permissionless type.\",\"reserve\":\"The reserve address.\"}},\"claimAdmin()\":{\"details\":\"Allows the pendingAdmin address to finalize the change admin process.\"},\"findBestRate(address,address,uint256)\":{\"details\":\"best conversion rate for a pair of tokens, if number of reserves have small differences. randomize\",\"params\":{\"dest\":\"Destination token\",\"src\":\"Src token\"},\"return\":\"obsolete - used to return best reserve index. not relevant anymore for this API.\"},\"getBalance(address,address)\":{\"details\":\"get the balance of a user.\",\"params\":{\"token\":\"The token type\"},\"return\":\"The balance\"},\"getNumReserves()\":{\"details\":\"returns number of reserves\",\"return\":\"number of reserves\"},\"getReserves()\":{\"details\":\"get an array of all reserves\",\"return\":\"An array of all reserves\"},\"listPairForReserve(address,address,bool,bool,bool)\":{\"details\":\"allow or prevent a specific reserve to trade a pair of tokens\",\"params\":{\"add\":\"If true then list this pair, otherwise unlist it.\",\"ethToToken\":\"will it support ether to token trade\",\"reserve\":\"The reserve address.\",\"token\":\"token address\",\"tokenToEth\":\"will it support token to ether trade\"}},\"removeReserve(address,uint256)\":{\"details\":\"removes a reserve from Kyber network.\",\"params\":{\"index\":\"in reserve array.\",\"reserve\":\"The reserve address.\"}},\"setWhiteList(address)\":{\"params\":{\"whiteList\":\"can be empty\"}},\"transferAdmin(address)\":{\"details\":\"Allows the current admin to set the pendingAdmin address.\",\"params\":{\"newAdmin\":\"The address to transfer ownership to.\"}},\"transferAdminQuickly(address)\":{\"details\":\"Allows the current admin to set the admin in one tx. Useful initial deployment.\",\"params\":{\"newAdmin\":\"The address to transfer ownership to.\"}},\"withdrawEther(uint256,address)\":{\"details\":\"Withdraw Ethers\"},\"withdrawToken(address,uint256,address)\":{\"details\":\"Withdraw all ERC20 compatible tokens\",\"params\":{\"token\":\"ERC20 The address of the token contract\"}}},\"title\":\"Kyber Network main contract, takes some fee and reports actual dest amount minus Fees.\"},\"userdoc\":{\"methods\":{\"addReserve(address,bool)\":{\"notice\":\"can be called only by operator\"},\"findBestRate(address,address,uint256)\":{\"notice\":\"use token address ETH_TOKEN_ADDRESS for ether\"},\"getReserves()\":{\"notice\":\"should be called off chain\"},\"listPairForReserve(address,address,bool,bool,bool)\":{\"notice\":\"can be called only by operator\"},\"removeReserve(address,uint256)\":{\"notice\":\"can be called only by operator\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/oscarr/Ethereum/frappe/contracts/mockContracts/MaliciousKyberNetwork.sol\":\"MaliciousKyberNetwork\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/oscarr/Ethereum/frappe/contracts/ERC20Interface.sol\":{\"keccak256\":\"0x0e7f8073e3de5997f6c36d7226923c5173b80a834a471f38f6da29d804e96ad0\",\"urls\":[\"bzzr://2ea77f174c95cf0b8383a06a383ca79cdc7296dabb2b79f56f8642abe1d83a5c\"]},\"/Users/oscarr/Ethereum/frappe/contracts/ExpectedRateInterface.sol\":{\"keccak256\":\"0xe54c531298711e1db84d0f7f56f756ff1cd12bc88794413473fa5e93f7b6668c\",\"urls\":[\"bzzr://b965ba5ff35279142d3085794ee4a11967439a92204a51b8f4f378fa5b37a915\"]},\"/Users/oscarr/Ethereum/frappe/contracts/FeeBurnerInterface.sol\":{\"keccak256\":\"0xb7f73d2c60497b4c45db6e4f816607fefe9583d1d6fd137d394f897d6b21e8b5\",\"urls\":[\"bzzr://eca8bfbb91f195eb74ed7ac311b5490a27b4bc32b3536174a41ddfc029b94172\"]},\"/Users/oscarr/Ethereum/frappe/contracts/KyberNetwork.sol\":{\"keccak256\":\"0x11adf11b516183c8b12e61cb13033b9a6c02efd513e8b853339d1c03abe9356b\",\"urls\":[\"bzzr://716be45e1b2da74691de071d16596dd079fb18b2d8377a319317d5b7cf2ea9e8\"]},\"/Users/oscarr/Ethereum/frappe/contracts/KyberNetworkInterface.sol\":{\"keccak256\":\"0x23870158c8ec73591e4ed64b535530cab0d7ac4dfc570bbe908789be55a94977\",\"urls\":[\"bzzr://5e4cf8720fa47b0b7a46513bd3a805655e93836b9634c78a20f8aae707db20f2\"]},\"/Users/oscarr/Ethereum/frappe/contracts/KyberReserveInterface.sol\":{\"keccak256\":\"0x041faf5eb976d946b0808bce14627b3206f03fe8b84a74c77b58bf3980f43824\",\"urls\":[\"bzzr://ae8f0d435de3aa95a6ceb4c57bb594152e3f9b90b9eb82a7d4244c765b50a061\"]},\"/Users/oscarr/Ethereum/frappe/contracts/PermissionGroups.sol\":{\"keccak256\":\"0xaeb966959d210ab3bbd9177d55e80ed14b7431af1bf352b8d9bd9c72003e428b\",\"urls\":[\"bzzr://d822faa41a2557051bb34e35f41cc038a4fd6fa5f6ef096c3cb2b60450e72767\"]},\"/Users/oscarr/Ethereum/frappe/contracts/Utils.sol\":{\"keccak256\":\"0x32a3a9ea6af49ab06bee6244697d7f59e291664f50ab77b085f4ee5385928727\",\"urls\":[\"bzzr://dbd83a0b1c6b3fbde0e887a9c08e1f0b6e76647be2cfcc0457b23d74c9163e77\"]},\"/Users/oscarr/Ethereum/frappe/contracts/Utils2.sol\":{\"keccak256\":\"0xcb04bcc734be4a7bc82489cf9c5e740a4c3df9239bdfc287953ceb3c8b7a77f6\",\"urls\":[\"bzzr://b7add0fb7ced2d22f72d6c0b82990941cc3dedcb96ea9b24a30a04ac6c1763c2\"]},\"/Users/oscarr/Ethereum/frappe/contracts/WhiteListInterface.sol\":{\"keccak256\":\"0x52e81cb686cce0085c5692b3ae980c1373d80718a2b5bcff52d5bd232aa8c2e0\",\"urls\":[\"bzzr://71cb0b227db35d927936636c903bf080f8e7a1bd3632d12377ecb7f9c904204c\"]},\"/Users/oscarr/Ethereum/frappe/contracts/Withdrawable.sol\":{\"keccak256\":\"0x465dfa6d5f18b7290efd7336cd2cff1259fc09470d8048eba495f76853affb48\",\"urls\":[\"bzzr://87f3ee9caf33c4f9b36d19021658a422c395867e1ab560e5c7058fac523167da\"]},\"/Users/oscarr/Ethereum/frappe/contracts/mockContracts/MaliciousKyberNetwork.sol\":{\"keccak256\":\"0x5d3921d128471c0b809a965bbe64e65c915a7fe8f77959635dc5e43529f506b2\",\"urls\":[\"bzzr://34433b777d5c4f9f53ce32e3e847d6d65d2af5c91098f8d49ecf508a97ad6c96\"]}},\"version\":1}",
  "bytecode": "0x60606040526001600755600a600855640ba43b7400600f556000601060006101000a81548160ff021916908315150217905550611234601460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600a60155534156200008657600080fd5b604051602080620064ee8339810160405280805190602001909190505080336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156200012157600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505061637b80620001736000396000f300606060405260043610610288576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806301a12fd31461034a578063088322ef146103835780630902f1ac1461049f5780630b490116146105095780630c235d96146105325780631610b59b146105e557806318903085146106205780631a79464e146106435780631dc1f78d1461067c578063238dafe0146106f8578063249715b314610725578063267822471461077f57806327a099d8146107d45780632ab8fc2d1461083e57806339e899ee146108c05780633ccdbb28146108f95780633de39c111461095a578063408ee7fe146109835780634cef5a5c146109bc578063579425b7146109e55780635d270cdc14610a3a5780635dada96414610a735780635ed5ea2814610ac85780635f65d70314610b1d5780636432679f14610b4d5780636aa633b614610b9a578063749f95bf14610bc757806375829def14610c225780637726bed314610c5b57806377f50f9714610c80578063785250da14610c955780637acc867814610cea5780637c423f5414610d23578063809a9e5514610d8d5780638334278d14610e0957806385dc0c5614610e6c5780638b98a2c514610ee85780638eaaeecf14610f76578063937e909b14610fe25780639870d7fe14611064578063a0d7bb1b1461109d578063ac8a584a146110f9578063b2d111f614611132578063b64a097e1461115b578063b8388aca14611196578063b880b69a14611212578063c0324c7714611267578063c0919ac614611293578063c6c3f3f9146112bc578063ce56c454146112f5578063cfff25bb14611337578063d4fac45d14611360578063e02584bf146113cc578063f851a4401461145d575b6000600281111561029557fe5b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660028111156102ed57fe5b141515156102fa57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff167f75f33ed68675112c77094e7c5b073890598be1d23e27cd7f6907b4a7d98ac619346040518082815260200191505060405180910390a2005b341561035557600080fd5b610381600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506114b2565b005b610489600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050611774565b6040518082815260200191505060405180910390f35b34156104aa57600080fd5b6104b2611978565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156104f55780820151818401526020810190506104da565b505050509050019250505060405180910390f35b341561051457600080fd5b61051c611a0c565b6040518082815260200191505060405180910390f35b341561053d57600080fd5b61059c600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919080351515906020019091905050611a12565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b34156105f057600080fd5b61060a600480803560001916906020019091905050611fe9565b6040518082815260200191505060405180910390f35b341561062b57600080fd5b6106416004808035906020019091905050612001565b005b341561064e57600080fd5b61067a600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061200b565b005b341561068757600080fd5b6106db600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061219f565b604051808381526020018281526020019250505060405180910390f35b341561070357600080fd5b61070b612204565b604051808215151515815260200191505060405180910390f35b341561073057600080fd5b610765600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061221b565b604051808215151515815260200191505060405180910390f35b341561078a57600080fd5b6107926124da565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156107df57600080fd5b6107e7612500565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561082a57808201518184015260208101905061080f565b505050509050019250505060405180910390f35b341561084957600080fd5b61087e600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050612594565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156108cb57600080fd5b6108f7600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506125e2565b005b341561090457600080fd5b610958600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061273a565b005b341561096557600080fd5b61096d61290a565b6040518082815260200191505060405180910390f35b341561098e57600080fd5b6109ba600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612914565b005b34156109c757600080fd5b6109cf612b0a565b6040518082815260200191505060405180910390f35b34156109f057600080fd5b6109f8612b10565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3415610a4557600080fd5b610a71600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612b36565b005b3415610a7e57600080fd5b610a86612cca565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3415610ad357600080fd5b610adb612cf0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3415610b2857600080fd5b610b4b600480803560001916906020019091908035906020019091905050612d16565b005b3415610b5857600080fd5b610b84600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612d92565b6040518082815260200191505060405180910390f35b3415610ba557600080fd5b610bad612efa565b604051808215151515815260200191505060405180910390f35b3415610bd257600080fd5b610bfe600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612f0d565b60405180826002811115610c0e57fe5b60ff16815260200191505060405180910390f35b3415610c2d57600080fd5b610c59600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612f2d565b005b3415610c6657600080fd5b610c7e6004808035151590602001909190505061308d565b005b3415610c8b57600080fd5b610c93613270565b005b3415610ca057600080fd5b610ca861344c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3415610cf557600080fd5b610d21600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050613472565b005b3415610d2e57600080fd5b610d36613667565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610d79578082015181840152602081019050610d5e565b505050509050019250505060405180910390f35b3415610d9857600080fd5b610dec600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506136fb565b604051808381526020018281526020019250505060405180910390f35b3415610e1457600080fd5b610e2a60048080359060200190919050506138f1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3415610e7757600080fd5b610ecb600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050613930565b604051808381526020018281526020019250505060405180910390f35b3415610ef357600080fd5b610efb613aca565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610f3b578082015181840152602081019050610f20565b50505050905090810190601f168015610f685780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3415610f8157600080fd5b610fcc600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050613b03565b6040518082815260200191505060405180910390f35b3415610fed57600080fd5b611022600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050613b17565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561106f57600080fd5b61109b600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050613b65565b005b34156110a857600080fd5b6110df600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080351515906020019091905050613d5b565b604051808215151515815260200191505060405180910390f35b341561110457600080fd5b611130600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050613f60565b005b341561113d57600080fd5b611145614225565b6040518082815260200191505060405180910390f35b341561116657600080fd5b61118060048080356000191690602001909190505061422b565b6040518082815260200191505060405180910390f35b34156111a157600080fd5b6111f5600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050614250565b604051808381526020018281526020019250505060405180910390f35b341561121d57600080fd5b611225614290565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561127257600080fd5b61129160048080359060200190919080359060200190919050506142b6565b005b341561129e57600080fd5b6112a6614377565b6040518082815260200191505060405180910390f35b34156112c757600080fd5b6112f3600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061439b565b005b341561130057600080fd5b611335600480803590602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061452f565b005b341561134257600080fd5b61134a614639565b6040518082815260200191505060405180910390f35b341561136b57600080fd5b6113b6600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050614646565b6040518082815260200191505060405180910390f35b34156113d757600080fd5b611443600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035151590602001909190803515159060200190919080351515906020019091905050614776565b604051808215151515815260200191505060405180910390f35b341561146857600080fd5b611470614bea565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561150f57600080fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561156757600080fd5b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600090505b600580549050811015611770578173ffffffffffffffffffffffffffffffffffffffff166005828154811015156115f757fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561176557600560016005805490500381548110151561165657fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660058281548110151561169157fe5b906000526020600020900160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060058054809190600190036116ef91906160ff565b507f5611bf3e417d124f97bf2c788843ea8bb502b66079fbee02158ef30b172cb762826000604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001821515151581526020019250505060405180910390a1611770565b8060010190506115c4565b5050565b600061177e61612b565b600060016007600082825401925050819055506007549050600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156117f257600080fd5b600084511480611803575060048451145b151561180e57600080fd5b8b826000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508a826020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508982604001818152505088826060019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505087826080019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050868260a0018181525050858260c0018181525050848260e0019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508382610100018190525061195782614c0f565b92506007548114151561196957600080fd5b50509998505050505050505050565b6119806161ec565b6009805480602002602001604051908101604052809291908181526020018280548015611a0257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116119b8575b5050505050905090565b60155481565b6000806000806000611a22616200565b611a2a616214565b611a32616214565b6000806000975060009650600095508c73ffffffffffffffffffffffffffffffffffffffff168e73ffffffffffffffffffffffffffffffffffffffff161415611ac557600987815481101515611a8457fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16670de0b6b3a764000081915099509950611fd8565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168e73ffffffffffffffffffffffffffffffffffffffff1614611b5057601260008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611b90565b601360008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205b805480602002602001604051908101604052809291908181526020018280548015611c1057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611bc6575b50505050509450600085511415611c6957600987815481101515611c3057fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168881915099509950611fd8565b8451604051805910611c785750595b908082528060200260200182016040525093508451604051805910611c9a5750595b90808252806020026020018201604052509250600091505b8451821015611ec8578a158015611d415750600280811115611cd057fe5b600a60008785815181101515611ce257fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166002811115611d3f57fe5b145b15611d4b57611ebb565b8482815181101515611d5957fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff16637cd442728f8f8f436000604051602001526040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001945050505050602060405180830381600087803b1515611e4957600080fd5b6102c65a03f11515611e5a57600080fd5b505050604051805190508483815181101515611e7257fe5b9060200190602002018181525050878483815181101515611e8f57fe5b906020019060200201511115611eba578382815181101515611ead57fe5b9060200190602002015197505b5b8180600101925050611cb2565b6000881115611fba57600854612710016127108902811515611ee657fe5b049050600091505b8451821015611f4857808483815181101515611f0657fe5b90602001906020020151101515611f3b57818387806001019850815181101515611f2c57fe5b90602001906020020181815250505b8180600101925050611eee565b6001861115611f83578286600143034060019004811515611f6557fe5b06815181101515611f7257fe5b906020019060200201519650611f9f565b826000815181101515611f9257fe5b9060200190602002015196505b8387815181101515611fad57fe5b9060200190602002015197505b8487815181101515611fc857fe5b9060200190602002015188995099505b505050505050505094509492505050565b60116020528060005260406000206000915090505481565b8060158190555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561206657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156120a257600080fd5b7f91251c8b04e3ed4b921776c3aced2ad433c3701257fc5666cb35239ec4df541181600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a180600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000806121aa616228565b6121eb8686866040805190810160405280600481526020017f5045524d00000000000000000000000000000000000000000000000000000000815250614f0b565b9050600081600001518191509250925050935093915050565b6000601060009054906101000a900460ff16905090565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561227557600080fd5b6000600281111561228257fe5b600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660028111156122da57fe5b141515156122e757600080fd5b8273ffffffffffffffffffffffffffffffffffffffff1660098381548110151561230d57fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561235b57600080fd5b6000600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360028111156123b757fe5b021790555060096001600980549050038154811015156123d357fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660098381548110151561240e57fe5b906000526020600020900160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600980548091906001900361246c9190616292565b507f861f07ab6bad95b71c362ed240dc0082c3d9bbfe75e7830be646ef0d61da311783604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a16001905092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b612508616200565b600480548060200260200160405190810160405280929190818152602001828054801561258a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612540575b5050505050905090565b6012602052816000526040600020818154811015156125af57fe5b90600052602060002090016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561263d57600080fd5b7f1eae61fde1a37f65af69f00b4269aa5fda423f684194d303865cba6c650b236681600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a180600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561279557600080fd5b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82846000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561284057600080fd5b6102c65a03f1151561285157600080fd5b50505060405180519050151561286657600080fd5b7f72cb8a894ddb372ceec3d2a7648d86f17d5a15caae0e986c53109b8a9a9385e6838383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a1505050565b6000600f54905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561296f57600080fd5b600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515156129c857600080fd5b60326005805490501015156129dc57600080fd5b7f5611bf3e417d124f97bf2c788843ea8bb502b66079fbee02158ef30b172cb762816001604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001821515151581526020019250505060405180910390a16001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060058054806001018281612ab891906162be565b9160005260206000209001600083909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60085481565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612b9157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515612bcd57600080fd5b7fa2446ac1a8b17e6d40c1cafcbf076b945fdc5f897c970e6e19915760def475ad81600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a180600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515612d6e57600080fd5b80601160008460001916600019168152602001908152602001600020819055505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612e12577f80000000000000000000000000000000000000000000000000000000000000009050612ef5565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636432679f836000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1515612ed757600080fd5b6102c65a03f11515612ee857600080fd5b5050506040518051905090505b919050565b601060009054906101000a900460ff1681565b600a6020528060005260406000206000915054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612f8857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515612fc457600080fd5b7f3b81caf78fa51ecbc8acb482fd7012a277b428d9b80f9d156e8a54107496cc40600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a180600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156130e857600080fd5b801561320957600073ffffffffffffffffffffffffffffffffffffffff16600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561314c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515156131aa57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561320857600080fd5b5b80601060006101000a81548160ff0219169083151502179055507f8a846a525e22497042ee2f99423a8ff8bbb831d3ae5384692bf6040f591c1eba601060009054906101000a900460ff16604051808215151515815260200191505060405180910390a150565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156132cc57600080fd5b7f65da1cfc2c2e81576ad96afb24a581f8e109b7a403b35cbd3243a1c99efdb9ed600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156134cd57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561350957600080fd5b7f3b81caf78fa51ecbc8acb482fd7012a277b428d9b80f9d156e8a54107496cc4081604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a17f65da1cfc2c2e81576ad96afb24a581f8e109b7a403b35cbd3243a1c99efdb9ed816000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61366f616200565b60058054806020026020016040519081016040528092919081815260200182805480156136f157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116136a7575b5050505050905090565b60008060008073ffffffffffffffffffffffffffffffffffffffff16600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561375d57600080fd5b6001905060007f8000000000000000000000000000000000000000000000000000000000000000851611156137b757600090507f800000000000000000000000000000000000000000000000000000000000000019841693505b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d38d2bea878787856000604051604001526040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001821515151581526020019450505050506040805180830381600087803b15156138c357600080fd5b6102c65a03f115156138d457600080fd5b505050604051805190602001805190509250925050935093915050565b60098181548110151561390057fe5b90600052602060002090016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600073ffffffffffffffffffffffffffffffffffffffff16600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561399157600080fd5b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d38d2bea868686600080604051604001526040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001821515151581526020019450505050506040805180830381600087803b1515613a9d57600080fd5b6102c65a03f11515613aae57600080fd5b5050506040518051906020018051905091509150935093915050565b6040805190810160405280600481526020017f5045524d0000000000000000000000000000000000000000000000000000000081525081565b6000801515613b1157600080fd5b92915050565b601360205281600052604060002081815481101515613b3257fe5b90600052602060002090016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515613bc057600080fd5b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151515613c1957600080fd5b6032600480549050101515613c2d57600080fd5b7f091a7a4b85135fdd7e8dbc18b12fabe5cc191ea867aa3c2e1a24a102af61d58b816001604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001821515151581526020019250505060405180910390a16001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060048054806001018281613d0991906162be565b9160005260206000209001600083909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515613db557600080fd5b60006002811115613dc257fe5b600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166002811115613e1a57fe5b141515613e2657600080fd5b60098054806001018281613e3a91906162ea565b9160005260206000209001600085909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505081613e95576001613e98565b60025b600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690836002811115613ef257fe5b02179055508273ffffffffffffffffffffffffffffffffffffffff167f4d99ce7cd99dfb1a7692e50c2e9b8d84c1b420f1d439ca8c4de0171acac119076001846040518083151515158152602001821515151581526020019250505060405180910390a26001905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515613fbd57600080fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561401557600080fd5b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600090505b600480549050811015614221578173ffffffffffffffffffffffffffffffffffffffff166004828154811015156140a557fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561421657600460016004805490500381548110151561410457fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660048281548110151561413f57fe5b906000526020600020900160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016004818180549050039150816141a091906160ff565b507f091a7a4b85135fdd7e8dbc18b12fabe5cc191ea867aa3c2e1a24a102af61d58b826000604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001821515151581526020019250505060405180910390a1614221565b806001019050614072565b5050565b600f5481565b6000601160008360001916600019168152602001908152602001600020549050919050565b60008061425b616228565b6142778686866020604051908101604052806000815250614f0b565b9050600081600001518191509250925050935093915050565b601460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561431157600080fd5b612710811115151561432257600080fd5b81600f81905550806008819055507fc1bdc2503431144078ba3cb975f03be0f6c1d365cf490875e7534b4ca70c863e600f54600854604051808381526020018281526020019250505060405180910390a15050565b7f800000000000000000000000000000000000000000000000000000000000000081565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156143f657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561443257600080fd5b80600e60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507ffdd305502f7797ff3390aa08825f7f6aec92c27a94e103bfaf45452b4cf1d4f4600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561458a57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505015156145ca57600080fd5b7fec47e7ed86c86774d1a72c19f35c639911393fe7c1a34031fdbd260890da90de8282604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b6000600980549050905090565b600073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156146af578173ffffffffffffffffffffffffffffffffffffffff16319050614770565b8273ffffffffffffffffffffffffffffffffffffffff166370a08231836000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561475257600080fd5b6102c65a03f1151561476357600080fd5b5050506040518051905090505b92915050565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156147d057600080fd5b600060028111156147dd57fe5b600a60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600281111561483557fe5b1415151561484257600080fd5b83156149245761485586866000856153c4565b8573ffffffffffffffffffffffffffffffffffffffff167fadb5a4f14d89b3a5ffb3900ac1ea4574d991f93887f6199fabaf25393644e01c73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8785604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182151515158152602001935050505060405180910390a25b8215614bd45761493786866001856153c4565b8115614a33578473ffffffffffffffffffffffffffffffffffffffff1663095ea7b3877f80000000000000000000000000000000000000000000000000000000000000006000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1515614a0857600080fd5b6102c65a03f11515614a1957600080fd5b505050604051805190501515614a2e57600080fd5b614b05565b8473ffffffffffffffffffffffffffffffffffffffff1663095ea7b387600080604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1515614ade57600080fd5b6102c65a03f11515614aef57600080fd5b505050604051805190501515614b0457600080fd5b5b8573ffffffffffffffffffffffffffffffffffffffff167fadb5a4f14d89b3a5ffb3900ac1ea4574d991f93887f6199fabaf25393644e01c8673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee85604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182151515158152602001935050505060405180910390a25b614bdd85615618565b6001905095945050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000614c19616228565b6000806000601060009054906101000a900460ff161515614c3957600080fd5b600f543a11151515614c4a57600080fd5b614c728660200151876060015188604001516020604051908101604052806000815250614f0b565b935060008460000151111515614c8757600080fd5b620f4240670de0b6b3a7640000028460000151101515614ca657600080fd5b8560c00151846000015110151515614cbd57600080fd5b614cda8660200151876060015188604001518960a0015188615778565b8095508194508293505050508560400151811015614e645773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff16866020015173ffffffffffffffffffffffffffffffffffffffff161415614d8d57856000015173ffffffffffffffffffffffffffffffffffffffff166108fc828860400151039081150290604051600060405180830381858888f193505050501515614d8857600080fd5b614e63565b856020015173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8760000151838960400151036000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1515614e4657600080fd5b6102c65a03f11515614e5757600080fd5b50505060405180519050505b5b614e718660000151612d92565b8211151515614e7f57600080fd5b614eb086602001518273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee308689602001518a608001516001615809565b1515614ebb57600080fd5b614ef073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee83886060015189608001518789604001518a60a001516001615809565b1515614efb57600080fd5b6015548303945050505050919050565b614f13616228565b600060019050600483511015801561526a57506040805190810160405280600481526020017f5045524d000000000000000000000000000000000000000000000000000000008152506040518082805190602001908083835b602083101515614f915780518252602082019150602081019050602083039250614f6c565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060001916836000815181101515614fd157fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000284600181518110151561502b57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000285600281518110151561508557fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028660038151811015156150df57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000260405180857effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152600101847effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152600101837effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152600101827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152600101945050505050604051809103902060001916145b1561527457600090505b6152948673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8684611a12565b8360200184608001828152508273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050506152f68673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee868560800151615d5b565b82606001818152505061532373eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee86846060015184611a12565b836040018460a001828152508273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250505061538973eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8684606001518560a00151615d5b565b8260c00181815250506153b2848360c001516153a489615d83565b6153ad89615d83565b615eba565b82600001818152505050949350505050565b600080601360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050831561545057601260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090505b600091505b808054905082101561559857808281548110151561546f57fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141561558b5782156154d957615598565b8060018280549050038154811015156154ee57fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16818381548110151561552857fe5b906000526020600020900160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508080548091906001900361558591906162be565b50615598565b8180600101925050615455565b8280156155a85750808054905082145b15615610578080548060010182816155c091906162be565b9160005260206000209001600088909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b505050505050565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156156aa576012600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550615775565b8073ffffffffffffffffffffffffffffffffffffffff1663313ce5676000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561571657600080fd5b6102c65a03f1151561572757600080fd5b50505060405180519050600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b50565b6000806000848460c0015111156157ec578490506157b073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee88838760a00151615f6b565b91506157d68873eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee848760800151615f6b565b92508583111515156157e757600080fd5b6157fe565b8360c001519050859250836060015191505b955095509592505050565b600080600090508773ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff16141561592b573073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16141515615922578673ffffffffffffffffffffffffffffffffffffffff166108fc6015548b039081150290604051600060405180830381858888f1935050505015156158bd57600080fd5b601460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6015549081150290604051600060405180830381858888f19350505050151561592157600080fd5b5b60019150615d4e565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff161415615977578890505b8473ffffffffffffffffffffffffffffffffffffffff16636cf69811828c8c8c308a8a6000604051602001526040518863ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018215151515815260200196505050505050506020604051808303818588803b1515615a9e57600080fd5b6125ee5a03f11515615aaf57600080fd5b50505050604051805190501515615ac557600080fd5b3073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16141515615d495773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff161415615b87578673ffffffffffffffffffffffffffffffffffffffff166108fc879081150290604051600060405180830381858888f193505050501515615b8257600080fd5b615d48565b8773ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8860155489036000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1515615c3657600080fd5b6102c65a03f11515615c4757600080fd5b505050604051805190501515615c5c57600080fd5b8773ffffffffffffffffffffffffffffffffffffffff1663a9059cbb601460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166015546000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1515615d2b57600080fd5b6102c65a03f11515615d3c57600080fd5b50505060405180519050505b5b600191505b5098975050505050505050565b6000615d7983615d6a87615d83565b615d7387615d83565b85615f93565b9050949350505050565b60008073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415615dd75760129150615eb4565b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811415615eb0578273ffffffffffffffffffffffffffffffffffffffff1663313ce5676000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1515615e8e57600080fd5b6102c65a03f11515615e9f57600080fd5b505050604051805190509150615eb4565b8091505b50919050565b60006b204fce5e3e250261100000008511151515615ed757600080fd5b6b204fce5e3e250261100000008411151515615ef257600080fd5b8282101515615f3157601283830311151515615f0d57600080fd5b84838303600a0a02670de0b6b3a76400008502811515615f2957fe5b049050615f63565b601282840311151515615f4357600080fd5b84828403600a0a670de0b6b3a7640000860202811515615f5f57fe5b0490505b949350505050565b6000615f8983615f7a87615d83565b615f8387615d83565b85616045565b9050949350505050565b60006b204fce5e3e250261100000008511151515615fb057600080fd5b620f4240670de0b6b3a7640000028211151515615fcc57600080fd5b838310151561600b57601284840311151515615fe757600080fd5b670de0b6b3a7640000848403600a0a8387020281151561600357fe5b04905061603d565b60128385031115151561601d57600080fd5b828403600a0a670de0b6b3a76400000282860281151561603957fe5b0490505b949350505050565b60008060006b204fce5e3e25026110000000871115151561606557600080fd5b620f4240670de0b6b3a764000002841115151561608157600080fd5b84861015156160b85760128587031115151561609c57600080fd5b848603600a0a87670de0b6b3a7640000020291508390506160e2565b6012868603111515156160ca57600080fd5b86670de0b6b3a7640000029150858503600a0a840290505b806001828401038115156160f257fe5b0492505050949350505050565b815481835581811511616126578183600052602060002091820191016161259190616316565b5b505050565b61012060405190810160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016161e661633b565b81525090565b602060405190810160405280600081525090565b602060405190810160405280600081525090565b602060405190810160405280600081525090565b60e06040519081016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600081525090565b8154818355818115116162b9578183600052602060002091820191016162b89190616316565b5b505050565b8154818355818115116162e5578183600052602060002091820191016162e49190616316565b5b505050565b815481835581811511616311578183600052602060002091820191016163109190616316565b5b505050565b61633891905b8082111561633457600081600090555060010161631c565b5090565b90565b6020604051908101604052806000815250905600a165627a7a72305820291952d29438dde181337a5e1d90fc0afccb6250d11bc8a34c86507be2ebabed0029",
  "deployedBytecode": "0x606060405260043610610288576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806301a12fd31461034a578063088322ef146103835780630902f1ac1461049f5780630b490116146105095780630c235d96146105325780631610b59b146105e557806318903085146106205780631a79464e146106435780631dc1f78d1461067c578063238dafe0146106f8578063249715b314610725578063267822471461077f57806327a099d8146107d45780632ab8fc2d1461083e57806339e899ee146108c05780633ccdbb28146108f95780633de39c111461095a578063408ee7fe146109835780634cef5a5c146109bc578063579425b7146109e55780635d270cdc14610a3a5780635dada96414610a735780635ed5ea2814610ac85780635f65d70314610b1d5780636432679f14610b4d5780636aa633b614610b9a578063749f95bf14610bc757806375829def14610c225780637726bed314610c5b57806377f50f9714610c80578063785250da14610c955780637acc867814610cea5780637c423f5414610d23578063809a9e5514610d8d5780638334278d14610e0957806385dc0c5614610e6c5780638b98a2c514610ee85780638eaaeecf14610f76578063937e909b14610fe25780639870d7fe14611064578063a0d7bb1b1461109d578063ac8a584a146110f9578063b2d111f614611132578063b64a097e1461115b578063b8388aca14611196578063b880b69a14611212578063c0324c7714611267578063c0919ac614611293578063c6c3f3f9146112bc578063ce56c454146112f5578063cfff25bb14611337578063d4fac45d14611360578063e02584bf146113cc578063f851a4401461145d575b6000600281111561029557fe5b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660028111156102ed57fe5b141515156102fa57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff167f75f33ed68675112c77094e7c5b073890598be1d23e27cd7f6907b4a7d98ac619346040518082815260200191505060405180910390a2005b341561035557600080fd5b610381600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506114b2565b005b610489600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050611774565b6040518082815260200191505060405180910390f35b34156104aa57600080fd5b6104b2611978565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156104f55780820151818401526020810190506104da565b505050509050019250505060405180910390f35b341561051457600080fd5b61051c611a0c565b6040518082815260200191505060405180910390f35b341561053d57600080fd5b61059c600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919080351515906020019091905050611a12565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b34156105f057600080fd5b61060a600480803560001916906020019091905050611fe9565b6040518082815260200191505060405180910390f35b341561062b57600080fd5b6106416004808035906020019091905050612001565b005b341561064e57600080fd5b61067a600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061200b565b005b341561068757600080fd5b6106db600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061219f565b604051808381526020018281526020019250505060405180910390f35b341561070357600080fd5b61070b612204565b604051808215151515815260200191505060405180910390f35b341561073057600080fd5b610765600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061221b565b604051808215151515815260200191505060405180910390f35b341561078a57600080fd5b6107926124da565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156107df57600080fd5b6107e7612500565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561082a57808201518184015260208101905061080f565b505050509050019250505060405180910390f35b341561084957600080fd5b61087e600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050612594565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156108cb57600080fd5b6108f7600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506125e2565b005b341561090457600080fd5b610958600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061273a565b005b341561096557600080fd5b61096d61290a565b6040518082815260200191505060405180910390f35b341561098e57600080fd5b6109ba600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612914565b005b34156109c757600080fd5b6109cf612b0a565b6040518082815260200191505060405180910390f35b34156109f057600080fd5b6109f8612b10565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3415610a4557600080fd5b610a71600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612b36565b005b3415610a7e57600080fd5b610a86612cca565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3415610ad357600080fd5b610adb612cf0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3415610b2857600080fd5b610b4b600480803560001916906020019091908035906020019091905050612d16565b005b3415610b5857600080fd5b610b84600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612d92565b6040518082815260200191505060405180910390f35b3415610ba557600080fd5b610bad612efa565b604051808215151515815260200191505060405180910390f35b3415610bd257600080fd5b610bfe600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612f0d565b60405180826002811115610c0e57fe5b60ff16815260200191505060405180910390f35b3415610c2d57600080fd5b610c59600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612f2d565b005b3415610c6657600080fd5b610c7e6004808035151590602001909190505061308d565b005b3415610c8b57600080fd5b610c93613270565b005b3415610ca057600080fd5b610ca861344c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3415610cf557600080fd5b610d21600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050613472565b005b3415610d2e57600080fd5b610d36613667565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610d79578082015181840152602081019050610d5e565b505050509050019250505060405180910390f35b3415610d9857600080fd5b610dec600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506136fb565b604051808381526020018281526020019250505060405180910390f35b3415610e1457600080fd5b610e2a60048080359060200190919050506138f1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3415610e7757600080fd5b610ecb600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050613930565b604051808381526020018281526020019250505060405180910390f35b3415610ef357600080fd5b610efb613aca565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610f3b578082015181840152602081019050610f20565b50505050905090810190601f168015610f685780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3415610f8157600080fd5b610fcc600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050613b03565b6040518082815260200191505060405180910390f35b3415610fed57600080fd5b611022600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050613b17565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561106f57600080fd5b61109b600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050613b65565b005b34156110a857600080fd5b6110df600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080351515906020019091905050613d5b565b604051808215151515815260200191505060405180910390f35b341561110457600080fd5b611130600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050613f60565b005b341561113d57600080fd5b611145614225565b6040518082815260200191505060405180910390f35b341561116657600080fd5b61118060048080356000191690602001909190505061422b565b6040518082815260200191505060405180910390f35b34156111a157600080fd5b6111f5600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050614250565b604051808381526020018281526020019250505060405180910390f35b341561121d57600080fd5b611225614290565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561127257600080fd5b61129160048080359060200190919080359060200190919050506142b6565b005b341561129e57600080fd5b6112a6614377565b6040518082815260200191505060405180910390f35b34156112c757600080fd5b6112f3600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061439b565b005b341561130057600080fd5b611335600480803590602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061452f565b005b341561134257600080fd5b61134a614639565b6040518082815260200191505060405180910390f35b341561136b57600080fd5b6113b6600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050614646565b6040518082815260200191505060405180910390f35b34156113d757600080fd5b611443600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035151590602001909190803515159060200190919080351515906020019091905050614776565b604051808215151515815260200191505060405180910390f35b341561146857600080fd5b611470614bea565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561150f57600080fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561156757600080fd5b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600090505b600580549050811015611770578173ffffffffffffffffffffffffffffffffffffffff166005828154811015156115f757fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561176557600560016005805490500381548110151561165657fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660058281548110151561169157fe5b906000526020600020900160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060058054809190600190036116ef91906160ff565b507f5611bf3e417d124f97bf2c788843ea8bb502b66079fbee02158ef30b172cb762826000604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001821515151581526020019250505060405180910390a1611770565b8060010190506115c4565b5050565b600061177e61612b565b600060016007600082825401925050819055506007549050600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156117f257600080fd5b600084511480611803575060048451145b151561180e57600080fd5b8b826000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508a826020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508982604001818152505088826060019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505087826080019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050868260a0018181525050858260c0018181525050848260e0019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508382610100018190525061195782614c0f565b92506007548114151561196957600080fd5b50509998505050505050505050565b6119806161ec565b6009805480602002602001604051908101604052809291908181526020018280548015611a0257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116119b8575b5050505050905090565b60155481565b6000806000806000611a22616200565b611a2a616214565b611a32616214565b6000806000975060009650600095508c73ffffffffffffffffffffffffffffffffffffffff168e73ffffffffffffffffffffffffffffffffffffffff161415611ac557600987815481101515611a8457fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16670de0b6b3a764000081915099509950611fd8565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168e73ffffffffffffffffffffffffffffffffffffffff1614611b5057601260008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611b90565b601360008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205b805480602002602001604051908101604052809291908181526020018280548015611c1057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611bc6575b50505050509450600085511415611c6957600987815481101515611c3057fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168881915099509950611fd8565b8451604051805910611c785750595b908082528060200260200182016040525093508451604051805910611c9a5750595b90808252806020026020018201604052509250600091505b8451821015611ec8578a158015611d415750600280811115611cd057fe5b600a60008785815181101515611ce257fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166002811115611d3f57fe5b145b15611d4b57611ebb565b8482815181101515611d5957fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff16637cd442728f8f8f436000604051602001526040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001945050505050602060405180830381600087803b1515611e4957600080fd5b6102c65a03f11515611e5a57600080fd5b505050604051805190508483815181101515611e7257fe5b9060200190602002018181525050878483815181101515611e8f57fe5b906020019060200201511115611eba578382815181101515611ead57fe5b9060200190602002015197505b5b8180600101925050611cb2565b6000881115611fba57600854612710016127108902811515611ee657fe5b049050600091505b8451821015611f4857808483815181101515611f0657fe5b90602001906020020151101515611f3b57818387806001019850815181101515611f2c57fe5b90602001906020020181815250505b8180600101925050611eee565b6001861115611f83578286600143034060019004811515611f6557fe5b06815181101515611f7257fe5b906020019060200201519650611f9f565b826000815181101515611f9257fe5b9060200190602002015196505b8387815181101515611fad57fe5b9060200190602002015197505b8487815181101515611fc857fe5b9060200190602002015188995099505b505050505050505094509492505050565b60116020528060005260406000206000915090505481565b8060158190555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561206657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156120a257600080fd5b7f91251c8b04e3ed4b921776c3aced2ad433c3701257fc5666cb35239ec4df541181600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a180600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000806121aa616228565b6121eb8686866040805190810160405280600481526020017f5045524d00000000000000000000000000000000000000000000000000000000815250614f0b565b9050600081600001518191509250925050935093915050565b6000601060009054906101000a900460ff16905090565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561227557600080fd5b6000600281111561228257fe5b600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660028111156122da57fe5b141515156122e757600080fd5b8273ffffffffffffffffffffffffffffffffffffffff1660098381548110151561230d57fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561235b57600080fd5b6000600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360028111156123b757fe5b021790555060096001600980549050038154811015156123d357fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660098381548110151561240e57fe5b906000526020600020900160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600980548091906001900361246c9190616292565b507f861f07ab6bad95b71c362ed240dc0082c3d9bbfe75e7830be646ef0d61da311783604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a16001905092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b612508616200565b600480548060200260200160405190810160405280929190818152602001828054801561258a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612540575b5050505050905090565b6012602052816000526040600020818154811015156125af57fe5b90600052602060002090016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561263d57600080fd5b7f1eae61fde1a37f65af69f00b4269aa5fda423f684194d303865cba6c650b236681600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a180600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561279557600080fd5b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82846000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561284057600080fd5b6102c65a03f1151561285157600080fd5b50505060405180519050151561286657600080fd5b7f72cb8a894ddb372ceec3d2a7648d86f17d5a15caae0e986c53109b8a9a9385e6838383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a1505050565b6000600f54905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561296f57600080fd5b600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515156129c857600080fd5b60326005805490501015156129dc57600080fd5b7f5611bf3e417d124f97bf2c788843ea8bb502b66079fbee02158ef30b172cb762816001604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001821515151581526020019250505060405180910390a16001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060058054806001018281612ab891906162be565b9160005260206000209001600083909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60085481565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612b9157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515612bcd57600080fd5b7fa2446ac1a8b17e6d40c1cafcbf076b945fdc5f897c970e6e19915760def475ad81600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a180600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515612d6e57600080fd5b80601160008460001916600019168152602001908152602001600020819055505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612e12577f80000000000000000000000000000000000000000000000000000000000000009050612ef5565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636432679f836000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1515612ed757600080fd5b6102c65a03f11515612ee857600080fd5b5050506040518051905090505b919050565b601060009054906101000a900460ff1681565b600a6020528060005260406000206000915054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612f8857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515612fc457600080fd5b7f3b81caf78fa51ecbc8acb482fd7012a277b428d9b80f9d156e8a54107496cc40600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a180600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156130e857600080fd5b801561320957600073ffffffffffffffffffffffffffffffffffffffff16600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561314c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515156131aa57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561320857600080fd5b5b80601060006101000a81548160ff0219169083151502179055507f8a846a525e22497042ee2f99423a8ff8bbb831d3ae5384692bf6040f591c1eba601060009054906101000a900460ff16604051808215151515815260200191505060405180910390a150565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156132cc57600080fd5b7f65da1cfc2c2e81576ad96afb24a581f8e109b7a403b35cbd3243a1c99efdb9ed600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156134cd57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561350957600080fd5b7f3b81caf78fa51ecbc8acb482fd7012a277b428d9b80f9d156e8a54107496cc4081604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a17f65da1cfc2c2e81576ad96afb24a581f8e109b7a403b35cbd3243a1c99efdb9ed816000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61366f616200565b60058054806020026020016040519081016040528092919081815260200182805480156136f157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116136a7575b5050505050905090565b60008060008073ffffffffffffffffffffffffffffffffffffffff16600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561375d57600080fd5b6001905060007f8000000000000000000000000000000000000000000000000000000000000000851611156137b757600090507f800000000000000000000000000000000000000000000000000000000000000019841693505b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d38d2bea878787856000604051604001526040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001821515151581526020019450505050506040805180830381600087803b15156138c357600080fd5b6102c65a03f115156138d457600080fd5b505050604051805190602001805190509250925050935093915050565b60098181548110151561390057fe5b90600052602060002090016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600073ffffffffffffffffffffffffffffffffffffffff16600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561399157600080fd5b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d38d2bea868686600080604051604001526040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001821515151581526020019450505050506040805180830381600087803b1515613a9d57600080fd5b6102c65a03f11515613aae57600080fd5b5050506040518051906020018051905091509150935093915050565b6040805190810160405280600481526020017f5045524d0000000000000000000000000000000000000000000000000000000081525081565b6000801515613b1157600080fd5b92915050565b601360205281600052604060002081815481101515613b3257fe5b90600052602060002090016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515613bc057600080fd5b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151515613c1957600080fd5b6032600480549050101515613c2d57600080fd5b7f091a7a4b85135fdd7e8dbc18b12fabe5cc191ea867aa3c2e1a24a102af61d58b816001604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001821515151581526020019250505060405180910390a16001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060048054806001018281613d0991906162be565b9160005260206000209001600083909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515613db557600080fd5b60006002811115613dc257fe5b600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166002811115613e1a57fe5b141515613e2657600080fd5b60098054806001018281613e3a91906162ea565b9160005260206000209001600085909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505081613e95576001613e98565b60025b600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690836002811115613ef257fe5b02179055508273ffffffffffffffffffffffffffffffffffffffff167f4d99ce7cd99dfb1a7692e50c2e9b8d84c1b420f1d439ca8c4de0171acac119076001846040518083151515158152602001821515151581526020019250505060405180910390a26001905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515613fbd57600080fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561401557600080fd5b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600090505b600480549050811015614221578173ffffffffffffffffffffffffffffffffffffffff166004828154811015156140a557fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561421657600460016004805490500381548110151561410457fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660048281548110151561413f57fe5b906000526020600020900160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016004818180549050039150816141a091906160ff565b507f091a7a4b85135fdd7e8dbc18b12fabe5cc191ea867aa3c2e1a24a102af61d58b826000604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001821515151581526020019250505060405180910390a1614221565b806001019050614072565b5050565b600f5481565b6000601160008360001916600019168152602001908152602001600020549050919050565b60008061425b616228565b6142778686866020604051908101604052806000815250614f0b565b9050600081600001518191509250925050935093915050565b601460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561431157600080fd5b612710811115151561432257600080fd5b81600f81905550806008819055507fc1bdc2503431144078ba3cb975f03be0f6c1d365cf490875e7534b4ca70c863e600f54600854604051808381526020018281526020019250505060405180910390a15050565b7f800000000000000000000000000000000000000000000000000000000000000081565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156143f657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561443257600080fd5b80600e60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507ffdd305502f7797ff3390aa08825f7f6aec92c27a94e103bfaf45452b4cf1d4f4600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561458a57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505015156145ca57600080fd5b7fec47e7ed86c86774d1a72c19f35c639911393fe7c1a34031fdbd260890da90de8282604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b6000600980549050905090565b600073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156146af578173ffffffffffffffffffffffffffffffffffffffff16319050614770565b8273ffffffffffffffffffffffffffffffffffffffff166370a08231836000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561475257600080fd5b6102c65a03f1151561476357600080fd5b5050506040518051905090505b92915050565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156147d057600080fd5b600060028111156147dd57fe5b600a60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600281111561483557fe5b1415151561484257600080fd5b83156149245761485586866000856153c4565b8573ffffffffffffffffffffffffffffffffffffffff167fadb5a4f14d89b3a5ffb3900ac1ea4574d991f93887f6199fabaf25393644e01c73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8785604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182151515158152602001935050505060405180910390a25b8215614bd45761493786866001856153c4565b8115614a33578473ffffffffffffffffffffffffffffffffffffffff1663095ea7b3877f80000000000000000000000000000000000000000000000000000000000000006000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1515614a0857600080fd5b6102c65a03f11515614a1957600080fd5b505050604051805190501515614a2e57600080fd5b614b05565b8473ffffffffffffffffffffffffffffffffffffffff1663095ea7b387600080604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1515614ade57600080fd5b6102c65a03f11515614aef57600080fd5b505050604051805190501515614b0457600080fd5b5b8573ffffffffffffffffffffffffffffffffffffffff167fadb5a4f14d89b3a5ffb3900ac1ea4574d991f93887f6199fabaf25393644e01c8673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee85604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182151515158152602001935050505060405180910390a25b614bdd85615618565b6001905095945050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000614c19616228565b6000806000601060009054906101000a900460ff161515614c3957600080fd5b600f543a11151515614c4a57600080fd5b614c728660200151876060015188604001516020604051908101604052806000815250614f0b565b935060008460000151111515614c8757600080fd5b620f4240670de0b6b3a7640000028460000151101515614ca657600080fd5b8560c00151846000015110151515614cbd57600080fd5b614cda8660200151876060015188604001518960a0015188615778565b8095508194508293505050508560400151811015614e645773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff16866020015173ffffffffffffffffffffffffffffffffffffffff161415614d8d57856000015173ffffffffffffffffffffffffffffffffffffffff166108fc828860400151039081150290604051600060405180830381858888f193505050501515614d8857600080fd5b614e63565b856020015173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8760000151838960400151036000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1515614e4657600080fd5b6102c65a03f11515614e5757600080fd5b50505060405180519050505b5b614e718660000151612d92565b8211151515614e7f57600080fd5b614eb086602001518273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee308689602001518a608001516001615809565b1515614ebb57600080fd5b614ef073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee83886060015189608001518789604001518a60a001516001615809565b1515614efb57600080fd5b6015548303945050505050919050565b614f13616228565b600060019050600483511015801561526a57506040805190810160405280600481526020017f5045524d000000000000000000000000000000000000000000000000000000008152506040518082805190602001908083835b602083101515614f915780518252602082019150602081019050602083039250614f6c565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060001916836000815181101515614fd157fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000284600181518110151561502b57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000285600281518110151561508557fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028660038151811015156150df57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000260405180857effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152600101847effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152600101837effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152600101827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152600101945050505050604051809103902060001916145b1561527457600090505b6152948673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8684611a12565b8360200184608001828152508273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050506152f68673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee868560800151615d5b565b82606001818152505061532373eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee86846060015184611a12565b836040018460a001828152508273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250505061538973eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8684606001518560a00151615d5b565b8260c00181815250506153b2848360c001516153a489615d83565b6153ad89615d83565b615eba565b82600001818152505050949350505050565b600080601360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050831561545057601260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090505b600091505b808054905082101561559857808281548110151561546f57fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141561558b5782156154d957615598565b8060018280549050038154811015156154ee57fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16818381548110151561552857fe5b906000526020600020900160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508080548091906001900361558591906162be565b50615598565b8180600101925050615455565b8280156155a85750808054905082145b15615610578080548060010182816155c091906162be565b9160005260206000209001600088909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b505050505050565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156156aa576012600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550615775565b8073ffffffffffffffffffffffffffffffffffffffff1663313ce5676000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561571657600080fd5b6102c65a03f1151561572757600080fd5b50505060405180519050600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b50565b6000806000848460c0015111156157ec578490506157b073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee88838760a00151615f6b565b91506157d68873eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee848760800151615f6b565b92508583111515156157e757600080fd5b6157fe565b8360c001519050859250836060015191505b955095509592505050565b600080600090508773ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff16141561592b573073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16141515615922578673ffffffffffffffffffffffffffffffffffffffff166108fc6015548b039081150290604051600060405180830381858888f1935050505015156158bd57600080fd5b601460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6015549081150290604051600060405180830381858888f19350505050151561592157600080fd5b5b60019150615d4e565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff161415615977578890505b8473ffffffffffffffffffffffffffffffffffffffff16636cf69811828c8c8c308a8a6000604051602001526040518863ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018215151515815260200196505050505050506020604051808303818588803b1515615a9e57600080fd5b6125ee5a03f11515615aaf57600080fd5b50505050604051805190501515615ac557600080fd5b3073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16141515615d495773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff161415615b87578673ffffffffffffffffffffffffffffffffffffffff166108fc879081150290604051600060405180830381858888f193505050501515615b8257600080fd5b615d48565b8773ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8860155489036000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1515615c3657600080fd5b6102c65a03f11515615c4757600080fd5b505050604051805190501515615c5c57600080fd5b8773ffffffffffffffffffffffffffffffffffffffff1663a9059cbb601460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166015546000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1515615d2b57600080fd5b6102c65a03f11515615d3c57600080fd5b50505060405180519050505b5b600191505b5098975050505050505050565b6000615d7983615d6a87615d83565b615d7387615d83565b85615f93565b9050949350505050565b60008073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415615dd75760129150615eb4565b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811415615eb0578273ffffffffffffffffffffffffffffffffffffffff1663313ce5676000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1515615e8e57600080fd5b6102c65a03f11515615e9f57600080fd5b505050604051805190509150615eb4565b8091505b50919050565b60006b204fce5e3e250261100000008511151515615ed757600080fd5b6b204fce5e3e250261100000008411151515615ef257600080fd5b8282101515615f3157601283830311151515615f0d57600080fd5b84838303600a0a02670de0b6b3a76400008502811515615f2957fe5b049050615f63565b601282840311151515615f4357600080fd5b84828403600a0a670de0b6b3a7640000860202811515615f5f57fe5b0490505b949350505050565b6000615f8983615f7a87615d83565b615f8387615d83565b85616045565b9050949350505050565b60006b204fce5e3e250261100000008511151515615fb057600080fd5b620f4240670de0b6b3a7640000028211151515615fcc57600080fd5b838310151561600b57601284840311151515615fe757600080fd5b670de0b6b3a7640000848403600a0a8387020281151561600357fe5b04905061603d565b60128385031115151561601d57600080fd5b828403600a0a670de0b6b3a76400000282860281151561603957fe5b0490505b949350505050565b60008060006b204fce5e3e25026110000000871115151561606557600080fd5b620f4240670de0b6b3a764000002841115151561608157600080fd5b84861015156160b85760128587031115151561609c57600080fd5b848603600a0a87670de0b6b3a7640000020291508390506160e2565b6012868603111515156160ca57600080fd5b86670de0b6b3a7640000029150858503600a0a840290505b806001828401038115156160f257fe5b0492505050949350505050565b815481835581811511616126578183600052602060002091820191016161259190616316565b5b505050565b61012060405190810160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016161e661633b565b81525090565b602060405190810160405280600081525090565b602060405190810160405280600081525090565b602060405190810160405280600081525090565b60e06040519081016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600081525090565b8154818355818115116162b9578183600052602060002091820191016162b89190616316565b5b505050565b8154818355818115116162e5578183600052602060002091820191016162e49190616316565b5b505050565b815481835581811511616311578183600052602060002091820191016163109190616316565b5b505050565b61633891905b8082111561633457600081600090555060010161631c565b5090565b90565b6020604051908101604052806000815250905600a165627a7a72305820291952d29438dde181337a5e1d90fc0afccb6250d11bc8a34c86507be2ebabed0029",
  "sourceMap": "260:4302:32:-;;;498:1:8;467:32;;1389:2;1356:35;;1797:23;1749:71;;1878:5;1837:46;;;;;;;;;;;;;;;;;;;;340:6:32;314:32;;;;;;;;;;;;;;;;;;;;375:2;352:25;;384:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;451:6;390:10:17;382:5;;:18;;;;;;;;;;;;;;;;;;2376:1:8;2358:20;;:6;:20;;;;2350:29;;;;;;;;2397:6;2389:5;;:14;;;;;;;;;;;;;;;;;;2295:115;384:78:32;260:4302;;;;;;",
  "deployedSourceMap": "260:4302:32:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2807:16:8;2780:43;;;;;;;;:11;:23;2792:10;2780:23;;;;;;;;;;;;;;;;;;;;;;;;;:43;;;;;;;;;;2772:52;;;;;;;;2848:10;2834:36;;;2860:9;2834:36;;;;;;;;;;;;;;;;;;260:4302:32;2381:451:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;3181:894:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9351:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;352:25:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12278:1998:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1911:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2729:69:32;;;;;;;;;;;;;;;;;;;;;;;;;;7562:218:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;11517:286;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11809:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5076:424;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;85:27:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;670:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;2003:54:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6919:175;;;;;;;;;;;;;;;;;;;;;;;;;;;;560:186:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9457:89:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:301:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;1356:35:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1637:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7210:245;;;;;;;;;;;;;;;;;;;;;;;;;;;;1582:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1533:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8652:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10346:192;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1837:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1479:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1074:183:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;8311:335:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;1821:189:17;;;;;;;;;;;;;;1689:54:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1432:218:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;772:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;9552:490:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1434:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10048:292;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1220:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10544:168:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2098:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2897:312:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;4412:409:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3215:469:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;1749:71:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11893:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11266:245;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;314:32:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7863:392:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1266:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8821:226;;;;;;;;;;;;;;;;;;;;;;;;;;;;851:150:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9128:91:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;186:208:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5989:786:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;59:20:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2381:451;2526:6;466:5;;;;;;;;;;;452:19;;:10;:19;;;444:28;;;;;;;;2457:8;:17;2466:7;2457:17;;;;;;;;;;;;;;;;;;;;;;;;;2449:26;;;;;;;;2505:5;2485:8;:17;2494:7;2485:17;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;2535:1;2526:10;;2521:305;2542:13;:20;;;;2538:1;:24;2521:305;;;2607:7;2587:27;;:13;2601:1;2587:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;:27;;;2583:233;;;2653:13;2690:1;2667:13;:20;;;;:24;2653:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;2634:13;2648:1;2634:16;;;;;;;;;;;;;;;;;;;:58;;;;;;;;;;;;;;;;;;2710:13;:22;;;;;;;;;;;;:::i;:::-;;2750:28;2763:7;2772:5;2750:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2796:5;;2583:233;2564:3;;;;;2521:305;;;2381:451;;:::o;3181:894:8:-;3500:4;3638:28;;:::i;:::-;878:20;867:1;851:12;;:17;;;;;;;;;;;901:12;;878:35;;3542:25;;;;;;;;;;;3528:39;;:10;:39;;;3520:48;;;;;;;;3602:1;3587:4;:11;:16;3586:40;;;;3624:1;3609:4;:11;:16;3586:40;3578:49;;;;;;;;3697:6;3677:10;:17;;:26;;;;;;;;;;;3730:3;3713:10;:14;;:20;;;;;;;;;;;3766:9;3743:10;:20;;:32;;;;;3803:4;3785:10;:15;;:22;;;;;;;;;;;3842:11;3817:10;:22;;:36;;;;;;;;;;;3890:13;3863:10;:24;;:40;;;;;3944:17;3913:10;:28;;:48;;;;;3993:8;3971:10;:19;;:30;;;;;;;;;;;4029:4;4011:10;:15;;:22;;;;4051:17;4057:10;4051:5;:17::i;:::-;4044:24;;958:12;;942;:28;934:37;;;;;;;;3181:894;;;;;;;;;;;;;:::o;9351:100::-;9394:23;;:::i;:::-;9436:8;9429:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9351:100;:::o;352:25:32:-;;;;:::o;12278:1998:8:-;12409:7;12418:4;12438:13;12465:16;12495:24;12641:27;;:::i;:::-;12862:19;;:::i;:::-;12923:31;;:::i;:::-;13002:6;13540:25;12454:1;12438:17;;12484:1;12465:20;;12522:1;12495:28;;12583:4;12576:11;;:3;:11;;;12572:58;;;12597:8;12606:11;12597:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;255:6:21;12589:41:8;;;;;;;;;12572:58;167:44:21;12692:24:8;;:3;:24;;;:80;;12748:19;:24;12768:3;12748:24;;;;;;;;;;;;;;;12692:80;;;12719:20;:26;12740:4;12719:26;;;;;;;;;;;;;;;12692:80;12679:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12808:1;12787:10;:17;:22;12783:68;;;12819:8;12828:11;12819:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;12842:8;12811:40;;;;;;;;;12783:68;12895:10;:17;12884:29;;;;;;;;;;;;;;;;;;;;;;;;12862:51;;12968:10;:17;12957:29;;;;;;;;;;;;;;;;;;;;;;;;12923:63;;13011:1;13002:10;;12997:501;13018:10;:17;13014:1;:21;12997:501;;;13115:17;13114:18;:78;;;;;13166:26;13136:56;;;;;;;;:11;:26;13148:10;13159:1;13148:13;;;;;;;;;;;;;;;;;;13136:26;;;;;;;;;;;;;;;;;;;;;;;;;:56;;;;;;;;;13114:78;13110:125;;;13212:8;;13110:125;13283:10;13294:1;13283:13;;;;;;;;;;;;;;;;;;13260:56;;;13317:3;13322:4;13328:9;13339:12;13260:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13249:5;13255:1;13249:8;;;;;;;;;;;;;;;;;:103;;;;;13382:8;13371:5;13377:1;13371:8;;;;;;;;;;;;;;;;;;:19;13367:121;;;13465:5;13471:1;13465:8;;;;;;;;;;;;;;;;;;13454:19;;13367:121;12997:501;13037:3;;;;;;;12997:501;;;13523:1;13512:8;:12;13508:709;;;13598:18;;13590:5;:26;13580:5;13569:8;:16;13568:49;;;;;;;;13540:77;;13641:1;13637:5;;13632:195;13648:10;:17;13644:1;:21;13632:195;;;13706:20;13694:5;13700:1;13694:8;;;;;;;;;;;;;;;;;;:32;;13690:123;;;13793:1;13750:17;13768:21;;;;;;13750:40;;;;;;;;;;;;;;;;;:44;;;;;13690:123;13667:3;;;;;;;13632:195;;;13867:1;13845:19;:23;13841:322;;;13997:17;14055:19;14049:1;14036:12;:14;14020:31;14015:37;;;:59;;;;;;;;13997:78;;;;;;;;;;;;;;;;;;13983:92;;13841:322;;;14128:17;14146:1;14128:20;;;;;;;;;;;;;;;;;;14114:34;;13841:322;14188:5;14194:11;14188:18;;;;;;;;;;;;;;;;;;14177:29;;13508:709;14235:10;14246:11;14235:23;;;;;;;;;;;;;;;;;;14260:8;14227:42;;;;12278:1998;;;;;;;;;;;;;;;;:::o;1911:40::-;;;;;;;;;;;;;;;;;:::o;2729:69:32:-;2788:3;2777:8;:14;;;;2729:69;:::o;7562:218:8:-;466:5:17;;;;;;;;;;;452:19;;:10;:19;;;444:28;;;;;;;;7670:1:8;7649:23;;:9;:23;;;;7641:32;;;;;;;;7684:50;7705:9;7716:17;;;;;;;;;;;7684:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7764:9;7744:17;;:29;;;;;;;;;;;;;;;;;;7562:218;:::o;11517:286::-;11636:13;11651:9;11676:28;;:::i;:::-;11707:57;11732:3;11737:4;11743:9;11754;;;;;;;;;;;;;;;;;;11707:24;:57::i;:::-;11676:88;;11781:1;11784:6;:11;;;11774:22;;;;;;;11517:286;;;;;;;:::o;11809:78::-;11848:4;11871:9;;;;;;;;;;;11864:16;;11809:78;:::o;5076:424::-;5178:4;538:9:17;:21;548:10;538:21;;;;;;;;;;;;;;;;;;;;;;;;;530:30;;;;;;;;5231:16:8;5207:40;;;;;;;;:11;:20;5219:7;5207:20;;;;;;;;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;5199:49;;;;;;;;5285:7;5266:26;;:8;5275:5;5266:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;:26;;;5258:35;;;;;;;;5327:16;5304:11;:20;5316:7;5304:20;;;;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;;;;;;;5371:8;5398:1;5380:8;:15;;;;:19;5371:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;5353:8;5362:5;5353:15;;;;;;;;;;;;;;;;;;;:47;;;;;;;;;;;;;;;;;;5410:8;:17;;;;;;;;;;;;:::i;:::-;;5438:33;5463:7;5438:33;;;;;;;;;;;;;;;;;;;;;;5489:4;5482:11;;5076:424;;;;:::o;85:27:17:-;;;;;;;;;;;;;:::o;670:96::-;717:9;;:::i;:::-;745:14;738:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;670:96;:::o;2003:54:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6919:175::-;466:5:17;;;;;;;;;;;452:19;;:10;:19;;;444:28;;;;;;;;6998:50:8;7019:9;7030:17;;;;;;;;;;;6998:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7078:9;7058:17;;:29;;;;;;;;;;;;;;;;;;6919:175;:::o;560:186:26:-;466:5:17;;;;;;;;;;;452:19;;:10;:19;;;444:28;;;;;;;;662:5:26;:14;;;677:6;685;662:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;654:39;;;;;;;;703:36;717:5;724:6;732;703:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;560:186;;;:::o;9457:89:8:-;9500:4;9523:16;;9516:23;;9457:89;:::o;2074:301:17:-;466:5;;;;;;;;;;;452:19;;:10;:19;;;444:28;;;;;;;;2150:8;:20;2159:10;2150:20;;;;;;;;;;;;;;;;;;;;;;;;;2149:21;2141:30;;;;;;;;328:2;2212:13;:20;;;;:37;2204:46;;;;;;;;2261:30;2274:10;2286:4;2261:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2324:4;2301:8;:20;2310:10;2301:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;2338:13;:30;;;;;;;;;;;:::i;:::-;;;;;;;;;;2357:10;2338:30;;;;;;;;;;;;;;;;;;;;;;;2074:301;:::o;1356:35:8:-;;;;:::o;1637:46::-;;;;;;;;;;;;;:::o;7210:245::-;466:5:17;;;;;;;;;;;452:19;;:10;:19;;;444:28;;;;;;;;7330:1:8;7306:26;;:12;:26;;;;7298:35;;;;;;;;7344:59;7368:12;7382:20;;;;;;;;;;;7344:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7436:12;7413:20;;:35;;;;;;;;;;;;;;;;;;7210:245;:::o;1582:49::-;;;;;;;;;;;;;:::o;1533:43::-;;;;;;;;;;;;;:::o;8652:106::-;538:9:17;:21;548:10;538:21;;;;;;;;;;;;;;;;;;;;;;;;;530:30;;;;;;;;8746:5:8;8726:10;:17;8737:5;8726:17;;;;;;;;;;;;;;;;;:25;;;;8652:106;;:::o;10346:192::-;10405:4;10454:1;10425:31;;:17;;;;;;;;;;;:31;;;10421:54;;;10466:8;10458:17;;;;10421:54;10492:17;;;;;;;;;;;:33;;;10526:4;10492:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10485:46;;10346:192;;;;:::o;1837:46::-;;;;;;;;;;;;;:::o;1479:48::-;;;;;;;;;;;;;;;;;;;;;;:::o;1074:183:17:-;466:5;;;;;;;;;;;452:19;;:10;:19;;;444:28;;;;;;;;1170:1;1150:22;;:8;:22;;;;1142:31;;;;;;;;1183:34;1204:12;;;;;;;;;;;1183:34;;;;;;;;;;;;;;;;;;;;;;1242:8;1227:12;;:23;;;;;;;;;;;;;;;;;;1074:183;:::o;8311:335:8:-;466:5:17;;;;;;;;;;;452:19;;:10;:19;;;444:28;;;;;;;;8375:7:8;8371:197;;;8435:1;8406:31;;:17;;;;;;;;;;;:31;;;;8398:40;;;;;;;;8492:1;8460:34;;:20;;;;;;;;;;;:34;;;;8452:43;;;;;;;;8554:1;8517:39;;:25;;;;;;;;;;;:39;;;;8509:48;;;;;;;;8371:197;8589:7;8577:9;;:19;;;;;;;;;;;;;;;;;;8607:32;8629:9;;;;;;;;;;;8607:32;;;;;;;;;;;;;;;;;;;;;;8311:335;:::o;1821:189:17:-;1884:10;1868:26;;:12;;;;;;;;;;;:26;;;1860:35;;;;;;;;1905:33;1918:12;;;;;;;;;;;1932:5;;;;;;;;;;;1905:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1956:12;;;;;;;;;;;1948:5;;:20;;;;;;;;;;;;;;;;;;2001:1;1978:12;;:25;;;;;;;;;;;;;;;;;;1821:189::o;1689:54:8:-;;;;;;;;;;;;;:::o;1432:218:17:-;466:5;;;;;;;;;;;452:19;;:10;:19;;;444:28;;;;;;;;1535:1;1515:22;;:8;:22;;;;1507:31;;;;;;;;1548:30;1569:8;1548:30;;;;;;;;;;;;;;;;;;;;;;1588:29;1601:8;1611:5;;;;;;;;;;;1588:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1635:8;1627:5;;:16;;;;;;;;;;;;;;;;;;1432:218;:::o;772:94::-;818:9;;:::i;:::-;846:13;839:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;772:94;:::o;9552:490:8:-;9649:17;9668;9754:26;9741:1;9709:34;;:20;;;;;;;;;;;:34;;;;9701:43;;;;;;;;9783:4;9754:33;;9832:1;1309:8;9802:6;:27;:31;9798:142;;;9873:5;9849:29;;1309:8;9910:19;9901:6;:28;9892:37;;9798:142;9957:20;;;;;;;;;;;:36;;;9994:3;9999:4;10005:6;10013:21;9957:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9950:85;;;;9552:490;;;;;;;:::o;1434:39::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;10048:292::-;10159:17;10178;10251:1;10219:34;;:20;;;;;;;;;;;:34;;;;10211:43;;;;;;;;10271:20;;;;;;;;;;;:36;;;10308:3;10313:4;10319:6;10327:5;10271:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10264:69;;;;10048:292;;;;;;:::o;1220:40::-;;;;;;;;;;;;;;;;;;;;:::o;10544:168::-;10621:4;10699:5;10691:14;;;;;;;;10544:168;;;;:::o;2098:55::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2897:312:17:-;466:5;;;;;;;;;;;452:19;;:10;:19;;;444:28;;;;;;;;2975:9;:22;2985:11;2975:22;;;;;;;;;;;;;;;;;;;;;;;;;2974:23;2966:32;;;;;;;;328:2;3039:14;:21;;;;:38;3031:47;;;;;;;;3089:32;3103:11;3116:4;3089:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3156:4;3131:9;:22;3141:11;3131:22;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3170:14;:32;;;;;;;;;;;:::i;:::-;;;;;;;;;;3190:11;3170:32;;;;;;;;;;;;;;;;;;;;;;;2897:312;:::o;4412:409:8:-;4522:4;538:9:17;:21;548:10;538:21;;;;;;;;;;;;;;;;;;;;;;;;;530:30;;;;;;;;4574:16:8;4550:40;;;;;;;;:11;:20;4562:7;4550:20;;;;;;;;;;;;;;;;;;;;;;;;;:40;;;;;;;;;4542:49;;;;;;;;4601:8;:22;;;;;;;;;;;:::i;:::-;;;;;;;;;;4615:7;4601:22;;;;;;;;;;;;;;;;;;;;;;;4657:16;:72;;4705:24;4657:72;;;4676:26;4657:72;4634:11;:20;4646:7;4634:20;;;;;;;;;;;;;;;;:95;;;;;;;;;;;;;;;;;;;;;;;;4760:7;4740:52;;;4769:4;4775:16;4740:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4810:4;4803:11;;4412:409;;;;:::o;3215:469:17:-;3366:6;466:5;;;;;;;;;;;452:19;;:10;:19;;;444:28;;;;;;;;3293:9;:19;3303:8;3293:19;;;;;;;;;;;;;;;;;;;;;;;;;3285:28;;;;;;;;3345:5;3323:9;:19;3333:8;3323:19;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;3375:1;3366:10;;3361:317;3382:14;:21;;;;3378:1;:25;3361:317;;;3449:8;3428:29;;:14;3443:1;3428:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;:29;;;3424:244;;;3497:14;3536:1;3512:14;:21;;;;:25;3497:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;3477:14;3492:1;3477:17;;;;;;;;;;;;;;;;;;;:61;;;;;;;;;;;;;;;;;;3581:1;3556:14;:26;;;;;;;;;;;;;;:::i;:::-;;3600:30;3614:8;3624:5;3600:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3648:5;;3424:244;3405:3;;;;;3361:317;;;3215:469;;:::o;1749:71:8:-;;;;:::o;11893:96::-;11942:4;11965:10;:17;11976:5;11965:17;;;;;;;;;;;;;;;;;;11958:24;;11893:96;;;:::o;11266:245::-;11347:13;11362:9;11383:28;;:::i;:::-;11414:58;11439:3;11444:4;11450:9;11461:10;;;;;;;;;;;;;11414:24;:58::i;:::-;11383:89;;11489:1;11492:6;:11;;;11482:22;;;;;;;11266:245;;;;;;;:::o;314:32:32:-;;;;;;;;;;;;;:::o;7863:392:8:-;466:5:17;;;;;;;;;;;452:19;;:10;:19;;;444:28;;;;;;;;8061:9:8;8038:19;:32;;8030:41;;;;;;;;8117:12;8098:16;:31;;;;8160:19;8139:18;:40;;;;8189:59;8211:16;;8229:18;;8189:59;;;;;;;;;;;;;;;;;;;;;;;;7863:392;;:::o;1266:51::-;1309:8;1266:51;:::o;8821:226::-;466:5:17;;;;;;;;;;;452:19;;:10;:19;;;444:28;;;;;;;;8925:1:8;8901:26;;:12;:26;;;;8893:35;;;;;;;;8966:12;8938:25;;:40;;;;;;;;;;;;;;;;;;8988:52;9002:25;;;;;;;;;;;9029:10;8988:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8821:226;:::o;851:150:26:-;466:5:17;;;;;;;;;;;452:19;;:10;:19;;;444:28;;;;;;;;932:6:26;:15;;:23;948:6;932:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;965:29;979:6;987;965:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;851:150;;:::o;9128:91:8:-;9174:4;9197:8;:15;;;;9190:22;;9128:91;:::o;186:208:22:-;253:4;167:44:21;273:26:22;;:5;:26;;;269:118;;;320:4;:12;;;313:19;;;;269:118;366:5;:15;;;382:4;366:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;359:28;;186:208;;;;;:::o;5989:786:8:-;6143:4;538:9:17;:21;548:10;538:21;;;;;;;;;;;;;;;;;;;;;;;;;530:30;;;;;;;;6195:16:8;6171:40;;;;;;;;:11;:20;6183:7;6171:20;;;;;;;;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;6163:49;;;;;;;;6227:10;6223:149;;;6253:37;6263:7;6272:5;6279;6286:3;6253:9;:37::i;:::-;6322:7;6305:56;;;167:44:21;6350:5:8;6357:3;6305:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6223:149;6386:10;6382:336;;;6412:36;6422:7;6431:5;6438:4;6444:3;6412:9;:36::i;:::-;6467:3;6463:174;;;6498:5;:13;;;6512:7;6521:6;6498:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6490:39;;;;;;;;6463:174;;;6596:5;:13;;;6610:7;6619:1;6596:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6588:34;;;;;;;;6463:174;6668:7;6651:56;;;6677:5;167:44:21;6703:3:8;6651:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6382:336;6728:18;6740:5;6728:11;:18::i;:::-;6764:4;6757:11;;5989:786;;;;;;;:::o;59:20:17:-;;;;;;;;;;;;;:::o;669:2010:32:-;724:4;819:32;;:::i;:::-;1114:21;1145:14;1169:20;748:9;;;;;;;;;;;740:18;;;;;;;;791:16;;776:11;:31;;768:40;;;;;;;;862:91;887:10;:14;;;903:10;:15;;;920:10;:20;;;942:10;;;;;;;;;;;;;862:24;:91::i;:::-;819:134;;990:1;972:10;:15;;;:19;964:28;;;;;;;;381:5:21;255:6;369:17;1010:10:32;:15;;;:26;1002:35;;;;;;;;1074:10;:28;;;1055:10;:15;;;:47;;1047:56;;;;;;;;1249:158;1267:10;:14;;;1295:10;:15;;;1324:10;:20;;;1358:10;:24;;;1396:10;1249:17;:158::i;:::-;1200:207;;;;;;;;;;;;1440:10;:20;;;1422:15;:38;1418:386;;;167:44:21;1535:35:32;;:10;:14;;;:35;;;1531:263;;;1590:10;:17;;;:26;;:66;1640:15;1617:10;:20;;;:38;1590:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1531:263;;;1695:10;:14;;;:23;;;1719:10;:17;;;1762:15;1739:10;:20;;;:38;1695:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1531:263;1418:386;1889:34;1905:10;:17;;;1889:15;:34::i;:::-;1876:9;:47;;1868:56;;;;;;;;1987:287;2019:10;:14;;;2051:15;167:44:21;2119:4:32;2141:9;2190:10;:19;;;2228:10;:23;;;2269:4;1987:14;:287::i;:::-;1979:296;;;;;;;;2316:308;167:44:21;2383:9:32;2410:10;:15;;;2443:10;:22;;;2483:16;2539:10;:19;;;2577:10;:24;;;2619:4;2316:14;:308::i;:::-;2308:317;;;;;;;;2663:8;;2644:16;:27;2636:36;;669:2010;;;;;;;:::o;14323:1077:8:-;14438:21;;:::i;:::-;14528:22;14553:4;14528:29;;14675:1;14660:4;:11;:16;;14659:93;;;;;14741:9;;;;;;;;;;;;;;;;;;14731:20;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:2;51:6;36:153;;;182:3;176:5;171:3;164:6;98:2;93:3;89;82:19;;123:2;118:3;114;107:19;;148:2;143:3;139;132:19;;36:153;;;274:1;267:3;263:2;259:3;254;250;246;315:4;311:3;305;299:5;295:3;356:4;350:3;344:5;340:3;389:7;380;377:2;372:3;365:6;3:399;;;;;;;;;;;;;;;;;;;14682:69:8;;;14692:4;14697:1;14692:7;;;;;;;;;;;;;;;;;;;;14701:4;14706:1;14701:7;;;;;;;;;;;;;;;;;;;;14710:4;14715:1;14710:7;;;;;;;;;;;;;;;;;;;;14719:4;14724:1;14719:7;;;;;;;;;;;;;;;;;;;;14682:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:69;;;;14659:93;14655:149;;;14788:5;14768:25;;14655:149;14867:68;14882:3;167:44:21;14906:9:8;14917:17;14867:14;:68::i;:::-;14815:6;:15;;14832:6;:19;;14814:121;;;;;;;;;;;;;;14965:70;14980:3;167:44:21;15004:9:8;15015:6;:19;;;14965:14;:70::i;:::-;14946:6;:16;;:89;;;;;15100:76;167:44:21;15134:4:8;15140:6;:16;;;15158:17;15100:14;:76::i;:::-;15047:6;:15;;15064:6;:20;;15046:130;;;;;;;;;;;;;;15207:79;167:44:21;15241:4:8;15247:6;:16;;;15265:6;:20;;;15207:14;:79::i;:::-;15187:6;:17;;:99;;;;;15311:82;15327:9;15338:6;:17;;;15357:16;15369:3;15357:11;:16::i;:::-;15375:17;15387:4;15375:11;:17::i;:::-;15311:15;:82::i;:::-;15297:6;:11;;:96;;;;;14323:1077;;;;;;;:::o;15406:809::-;15503:6;15519:28;15550:20;:27;15571:5;15550:27;;;;;;;;;;;;;;;15519:58;;15592:12;15588:82;;;15633:19;:26;15653:5;15633:26;;;;;;;;;;;;;;;15620:39;;15588:82;15689:1;15685:5;;15680:390;15696:10;:17;;;;15692:1;:21;15680:390;;;15749:10;15760:1;15749:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;15738:24;;:7;:24;;;15734:326;;;15786:3;15782:264;;;15813:5;;15782:264;15926:10;15957:1;15937:10;:17;;;;:21;15926:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;15910:10;15921:1;15910:13;;;;;;;;;;;;;;;;;;;:49;;;;;;;;;;;;;;;;;;15981:10;:19;;;;;;;;;;;;:::i;:::-;;16022:5;;15734:326;15715:3;;;;;;;15680:390;;;16084:3;:29;;;;;16096:10;:17;;;;16091:1;:22;16084:29;16080:129;;;16174:10;:24;;;;;;;;;;;:::i;:::-;;;;;;;;;;16190:7;16174:24;;;;;;;;;;;;;;;;;;;;;;;16080:129;15406:809;;;;;;:::o;561:171:21:-;167:44;618:26;;:5;:26;;;614:111;;;506:2;646:8;:15;655:5;646:15;;;;;;;;;;;;;;;:30;;;;614:111;;;709:5;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;691:8;:15;700:5;691:15;;;;;;;;;;;;;;;:34;;;;614:111;561:171;:::o;19469:747:8:-;19613:20;19635:14;19651:21;19716:13;19692:10;:21;;;:37;19688:522;;;19764:13;19745:32;;19803:82;167:44:21;19836:4:8;19842:16;19860:10;:24;;;19803:13;:82::i;:::-;19791:94;;19917:73;19931:3;167:44:21;19955:9:8;19966:10;:23;;;19917:13;:73::i;:::-;19899:91;;20031:9;20012:15;:28;;20004:37;;;;;;;;19688:522;;;20091:10;:21;;;20072:40;;20144:9;20126:27;;20179:10;:20;;;20167:32;;19688:522;19469:747;;;;;;;;;:::o;3225:1335:32:-;3501:4;3521:14;3538:1;3521:18;;3561:4;3554:11;;:3;:11;;;3550:295;;;3685:4;3661:30;;:11;:30;;;;3657:153;;;3711:11;:20;;:39;3741:8;;3732:6;:17;3711:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3768:8;;;;;;;;;;;:17;;:27;3786:8;;3768:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3657:153;3830:4;3823:11;;;;3550:295;167:44:21;3859:24:32;;:3;:24;;;3855:73;;;3911:6;3899:18;;3855:73;4026:7;:13;;;4046:9;4057:3;4062:6;4070:4;4076;4082:14;4098:8;4026:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4018:90;;;;;;;;4146:4;4123:28;;:11;:28;;;;4119:413;;;167:44:21;4264:25:32;;:4;:25;;;4260:262;;;4309:11;:20;;:40;4330:18;4309:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4260:262;;;4396:4;:13;;;4410:11;4445:8;;4424:18;:29;4396:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4388:68;;;;;;;;4474:4;:13;;;4488:8;;;;;;;;;;;4498;;4474:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4260:262;4119:413;4549:4;4542:11;;3225:1335;;;;;;;;;;;;:::o;586:190:22:-;682:4;705:64;716:9;727:16;739:3;727:11;:16::i;:::-;745:17;757:4;745:11;:17::i;:::-;764:4;705:10;:64::i;:::-;698:71;;586:190;;;;;;:::o;738:470:21:-;794:4;894:18;167:44;814:26;;:5;:26;;;810:51;;;506:2;842:19;;;;810:51;915:8;:15;924:5;915:15;;;;;;;;;;;;;;;;894:36;;1144:1;1127:13;:18;1124:46;;;1154:5;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1147:23;;;;1124:46;1188:13;1181:20;;738:470;;;;;:::o;979:614:22:-;1103:4;305:6:21;1131:9:22;:20;;1123:29;;;;;;;;305:6:21;1170:10:22;:21;;1162:30;;;;;;;;1222:11;1207;:26;;1203:384;;;459:2:21;1272:11:22;1258;:25;1257:43;;1249:52;;;;;;;;1387:9;1371:11;1357;:25;1350:2;:33;1349:47;255:6:21;1323:10:22;:22;:74;;;;;;;;1315:83;;;;1203:384;459:2:21;1452:11:22;1438;:25;1437:43;;1429:52;;;;;;;;1566:9;1550:11;1536;:25;1529:2;:33;255:6:21;1503:10:22;:22;:60;:72;;;;;;;;1495:81;;979:614;;;;;;;:::o;782:191::-;878:4;901:65;912:10;924:16;936:3;924:11;:16::i;:::-;942:17;954:4;942:11;:17::i;:::-;961:4;901:10;:65::i;:::-;894:72;;782:191;;;;;;:::o;1214:558:21:-;1316:4;305:6;1340;:17;;1332:26;;;;;;;;381:5;255:6;369:17;1376:4;:16;;1368:25;;;;;;;;1423:11;1408;:26;;1404:362;;;459:2;1473:11;1459;:25;1458:43;;1450:52;;;;;;;;255:6;1560:11;1546;:25;1541:2;:31;1533:4;1524:6;:13;:49;1523:63;;;;;;;;1516:70;;;;1404:362;459:2;1640:11;1626;:25;1625:43;;1617:52;;;;;;;;1741:11;1727;:25;1722:2;:31;255:6;1709:45;1700:4;1691:6;:13;1690:65;;;;;;;;1683:72;;1214:558;;;;;;;:::o;1778:844::-;1880:4;2055:14;2079:16;305:6;1904;:17;;1896:26;;;;;;;;381:5;255:6;369:17;1940:4;:16;;1932:25;;;;;;;;2124:11;2109;:26;;2105:422;;;459:2;2174:11;2160;:25;2159:43;;2151:52;;;;;;;;2271:11;2257;:25;2252:2;:31;2242:6;255;2230:18;:54;2217:68;;2313:4;2299:18;;2105:422;;;459:2;2371:11;2357;:25;2356:43;;2348:52;;;;;;;;2439:6;255;2427:18;2414:32;;2502:11;2488;:25;2483:2;:31;2475:4;:40;2460:56;;2105:422;2575:11;2570:1;2556:11;2544:9;:23;:27;2543:43;;;;;;;;2536:50;;1778:844;;;;;;;;:::o;260:4302:32:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity 0.4.18;\n\nimport \"../KyberNetwork.sol\";\n\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n/// @title Kyber Network main contract, takes some fee and reports actual dest amount minus Fees.\ncontract MaliciousKyberNetwork is KyberNetwork {\n\n    address public myWallet = 0x1234;\n    uint public myFeeWei = 10;\n\n    function MaliciousKyberNetwork(address _admin) public KyberNetwork(_admin) { }\n\n    /* solhint-disable function-max-lines */\n    /// @notice use token address ETH_TOKEN_ADDRESS for ether\n    /// @dev trade api for kyber network.\n    /// @param tradeInput structure of trade inputs\n    function trade(TradeInput tradeInput) internal returns(uint) {\n        require(isEnabled);\n        require(tx.gasprice <= maxGasPriceValue);\n\n        BestRateResult memory rateResult =\n        findBestRateTokenToToken(tradeInput.src, tradeInput.dest, tradeInput.srcAmount, EMPTY_HINT);\n\n        require(rateResult.rate > 0);\n        require(rateResult.rate < MAX_RATE);\n        require(rateResult.rate >= tradeInput.minConversionRate);\n\n        uint actualDestAmount;\n        uint weiAmount;\n        uint actualSrcAmount;\n\n        (actualSrcAmount, weiAmount, actualDestAmount) = calcActualAmounts(tradeInput.src,\n            tradeInput.dest,\n            tradeInput.srcAmount,\n            tradeInput.maxDestAmount,\n            rateResult);\n\n        if (actualSrcAmount < tradeInput.srcAmount) {\n            //if there is \"change\" send back to trader\n            if (tradeInput.src == ETH_TOKEN_ADDRESS) {\n                tradeInput.trader.transfer(tradeInput.srcAmount - actualSrcAmount);\n            } else {\n                tradeInput.src.transfer(tradeInput.trader, (tradeInput.srcAmount - actualSrcAmount));\n            }\n        }\n\n        // verify trade size is smaller than user cap\n        require(weiAmount <= getUserCapInWei(tradeInput.trader));\n\n        //do the trade\n        //src to ETH\n        require(doReserveTrade(\n                tradeInput.src,\n                actualSrcAmount,\n                ETH_TOKEN_ADDRESS,\n                this,\n                weiAmount,\n                KyberReserveInterface(rateResult.reserve1),\n                rateResult.rateSrcToEth,\n                true));\n\n        //Eth to dest\n        require(doReserveTrade(\n                ETH_TOKEN_ADDRESS,\n                weiAmount,\n                tradeInput.dest,\n                tradeInput.destAddress,\n                actualDestAmount,\n                KyberReserveInterface(rateResult.reserve2),\n                rateResult.rateEthToDest,\n                true));\n\n        return (actualDestAmount - myFeeWei);\n    }\n    /* solhint-enable function-max-lines */\n\n    function setMyFeeWei(uint fee) public {\n        myFeeWei = fee;\n    }\n\n    /// @notice use token address ETH_TOKEN_ADDRESS for ether\n    /// @dev do one trade with a reserve\n    /// @param src Src token\n    /// @param amount amount of src tokens\n    /// @param dest   Destination token\n    /// @param destAddress Address to send tokens to\n    /// @param reserve Reserve to use\n    /// @param validate If true, additional validations are applicable\n    /// @return true if trade is successful\n    function doReserveTrade(\n        ERC20 src,\n        uint amount,\n        ERC20 dest,\n        address destAddress,\n        uint expectedDestAmount,\n        KyberReserveInterface reserve,\n        uint conversionRate,\n        bool validate\n    )\n        internal\n        returns(bool)\n    {\n        uint callValue = 0;\n\n        if (src == dest) {\n            //this is for a \"fake\" trade when both src and dest are ethers.\n            if (destAddress != (address(this))) {\n                destAddress.transfer(amount - myFeeWei);\n                myWallet.transfer(myFeeWei);\n            }\n            return true;\n        }\n\n        if (src == ETH_TOKEN_ADDRESS) {\n            callValue = amount;\n        }\n\n        // reserve sends tokens/eth to network. network sends it to destination\n        require(reserve.trade.value(callValue)(src, amount, dest, this, conversionRate, validate));\n\n        if (destAddress != address(this)) {\n\n            //for token to token dest address is network. and Ether / token already here...\n            if (dest == ETH_TOKEN_ADDRESS) {\n                destAddress.transfer(expectedDestAmount);\n            } else {\n                require(dest.transfer(destAddress, (expectedDestAmount - myFeeWei)));\n                dest.transfer(myWallet, myFeeWei);\n            }\n        }\n\n        return true;\n    }\n}\n",
  "sourcePath": "/Users/oscarr/Ethereum/frappe/contracts/mockContracts/MaliciousKyberNetwork.sol",
  "ast": {
    "absolutePath": "/Users/oscarr/Ethereum/frappe/contracts/mockContracts/MaliciousKyberNetwork.sol",
    "exportedSymbols": {
      "MaliciousKyberNetwork": [
        12794
      ]
    },
    "id": 12795,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 12479,
        "literals": [
          "solidity",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:32"
      },
      {
        "absolutePath": "/Users/oscarr/Ethereum/frappe/contracts/KyberNetwork.sol",
        "file": "../KyberNetwork.sol",
        "id": 12480,
        "nodeType": "ImportDirective",
        "scope": 12795,
        "sourceUnit": 5062,
        "src": "25:29:32",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 12481,
              "name": "KyberNetwork",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5061,
              "src": "294:12:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_KyberNetwork_$5061",
                "typeString": "contract KyberNetwork"
              }
            },
            "id": 12482,
            "nodeType": "InheritanceSpecifier",
            "src": "294:12:32"
          }
        ],
        "contractDependencies": [
          3180,
          5061,
          5134,
          8554,
          9093,
          9275,
          10292
        ],
        "contractKind": "contract",
        "documentation": "/////////////////////////////////////////////////////////////////////////////////////////////////////\n @title Kyber Network main contract, takes some fee and reports actual dest amount minus Fees.",
        "fullyImplemented": true,
        "id": 12794,
        "linearizedBaseContracts": [
          12794,
          5061,
          3180,
          5134,
          9275,
          9093,
          10292,
          8554
        ],
        "name": "MaliciousKyberNetwork",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 12485,
            "name": "myWallet",
            "nodeType": "VariableDeclaration",
            "scope": 12794,
            "src": "314:32:32",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 12483,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "314:7:32",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307831323334",
              "id": 12484,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "340:6:32",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_4660_by_1",
                "typeString": "int_const 4660"
              },
              "value": "0x1234"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 12488,
            "name": "myFeeWei",
            "nodeType": "VariableDeclaration",
            "scope": 12794,
            "src": "352:25:32",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 12486,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "352:4:32",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130",
              "id": 12487,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "375:2:32",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 12496,
              "nodeType": "Block",
              "src": "459:3:32",
              "statements": []
            },
            "id": 12497,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 12493,
                    "name": "_admin",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12490,
                    "src": "451:6:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 12494,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 12492,
                  "name": "KyberNetwork",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5061,
                  "src": "438:12:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_KyberNetwork_$5061_$",
                    "typeString": "type(contract KyberNetwork)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "438:20:32"
              }
            ],
            "name": "MaliciousKyberNetwork",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12491,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12490,
                  "name": "_admin",
                  "nodeType": "VariableDeclaration",
                  "scope": 12497,
                  "src": "415:14:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12489,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "415:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "414:16:32"
            },
            "payable": false,
            "returnParameters": {
              "id": 12495,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "459:0:32"
            },
            "scope": 12794,
            "src": "384:78:32",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12664,
              "nodeType": "Block",
              "src": "730:1949:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12505,
                        "name": "isEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3226,
                        "src": "748:9:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 12504,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29914,
                      "src": "740:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 12506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "740:18:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12507,
                  "nodeType": "ExpressionStatement",
                  "src": "740:18:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 12512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 12509,
                            "name": "tx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29921,
                            "src": "776:2:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_transaction",
                              "typeString": "tx"
                            }
                          },
                          "id": 12510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "gasprice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "776:11:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 12511,
                          "name": "maxGasPriceValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3223,
                          "src": "791:16:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "776:31:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 12508,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29914,
                      "src": "768:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 12513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "768:40:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12514,
                  "nodeType": "ExpressionStatement",
                  "src": "768:40:32"
                },
                {
                  "assignments": [
                    12516
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12516,
                      "name": "rateResult",
                      "nodeType": "VariableDeclaration",
                      "scope": 12665,
                      "src": "819:32:32",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BestRateResult_$4016_memory_ptr",
                        "typeString": "struct KyberNetwork.BestRateResult memory"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 12515,
                        "name": "BestRateResult",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 4016,
                        "src": "819:14:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BestRateResult_$4016_storage_ptr",
                          "typeString": "struct KyberNetwork.BestRateResult storage pointer"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12526,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 12518,
                          "name": "tradeInput",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12499,
                          "src": "887:10:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeInput_$3311_memory_ptr",
                            "typeString": "struct KyberNetwork.TradeInput memory"
                          }
                        },
                        "id": 12519,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "src",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3296,
                        "src": "887:14:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1559",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 12520,
                          "name": "tradeInput",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12499,
                          "src": "903:10:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeInput_$3311_memory_ptr",
                            "typeString": "struct KyberNetwork.TradeInput memory"
                          }
                        },
                        "id": 12521,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "dest",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3300,
                        "src": "903:15:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1559",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 12522,
                          "name": "tradeInput",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12499,
                          "src": "920:10:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeInput_$3311_memory_ptr",
                            "typeString": "struct KyberNetwork.TradeInput memory"
                          }
                        },
                        "id": 12523,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "srcAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3298,
                        "src": "920:20:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12524,
                        "name": "EMPTY_HINT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3247,
                        "src": "942:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$1559",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20_$1559",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 12517,
                      "name": "findBestRateTokenToToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4440,
                      "src": "862:24:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_ERC20_$1559_$_t_contract$_ERC20_$1559_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_struct$_BestRateResult_$4016_memory_ptr_$",
                        "typeString": "function (contract ERC20,contract ERC20,uint256,bytes memory) view returns (struct KyberNetwork.BestRateResult memory)"
                      }
                    },
                    "id": 12525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "862:91:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BestRateResult_$4016_memory_ptr",
                      "typeString": "struct KyberNetwork.BestRateResult memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "819:134:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 12531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 12528,
                            "name": "rateResult",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12516,
                            "src": "972:10:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BestRateResult_$4016_memory_ptr",
                              "typeString": "struct KyberNetwork.BestRateResult memory"
                            }
                          },
                          "id": 12529,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4003,
                          "src": "972:15:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 12530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "990:1:32",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "972:19:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 12527,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29914,
                      "src": "964:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 12532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "964:28:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12533,
                  "nodeType": "ExpressionStatement",
                  "src": "964:28:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 12538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 12535,
                            "name": "rateResult",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12516,
                            "src": "1010:10:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BestRateResult_$4016_memory_ptr",
                              "typeString": "struct KyberNetwork.BestRateResult memory"
                            }
                          },
                          "id": 12536,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4003,
                          "src": "1010:15:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 12537,
                          "name": "MAX_RATE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8843,
                          "src": "1028:8:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1010:26:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 12534,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29914,
                      "src": "1002:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 12539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1002:35:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12540,
                  "nodeType": "ExpressionStatement",
                  "src": "1002:35:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 12546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 12542,
                            "name": "rateResult",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12516,
                            "src": "1055:10:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BestRateResult_$4016_memory_ptr",
                              "typeString": "struct KyberNetwork.BestRateResult memory"
                            }
                          },
                          "id": 12543,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4003,
                          "src": "1055:15:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 12544,
                            "name": "tradeInput",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12499,
                            "src": "1074:10:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeInput_$3311_memory_ptr",
                              "typeString": "struct KyberNetwork.TradeInput memory"
                            }
                          },
                          "id": 12545,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "minConversionRate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3306,
                          "src": "1074:28:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1055:47:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 12541,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29914,
                      "src": "1047:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 12547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1047:56:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12548,
                  "nodeType": "ExpressionStatement",
                  "src": "1047:56:32"
                },
                {
                  "assignments": [],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12550,
                      "name": "actualDestAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 12665,
                      "src": "1114:21:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12549,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1114:4:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12551,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1114:21:32"
                },
                {
                  "assignments": [],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12553,
                      "name": "weiAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 12665,
                      "src": "1145:14:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12552,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1145:4:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12554,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1145:14:32"
                },
                {
                  "assignments": [],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12556,
                      "name": "actualSrcAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 12665,
                      "src": "1169:20:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12555,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1169:4:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12557,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1169:20:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 12573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "id": 12558,
                          "name": "actualSrcAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12556,
                          "src": "1201:15:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 12559,
                          "name": "weiAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12553,
                          "src": "1218:9:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 12560,
                          "name": "actualDestAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12550,
                          "src": "1229:16:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 12561,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "1200:46:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 12563,
                            "name": "tradeInput",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12499,
                            "src": "1267:10:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeInput_$3311_memory_ptr",
                              "typeString": "struct KyberNetwork.TradeInput memory"
                            }
                          },
                          "id": 12564,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "src",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3296,
                          "src": "1267:14:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$1559",
                            "typeString": "contract ERC20"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 12565,
                            "name": "tradeInput",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12499,
                            "src": "1295:10:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeInput_$3311_memory_ptr",
                              "typeString": "struct KyberNetwork.TradeInput memory"
                            }
                          },
                          "id": 12566,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "dest",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3300,
                          "src": "1295:15:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$1559",
                            "typeString": "contract ERC20"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 12567,
                            "name": "tradeInput",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12499,
                            "src": "1324:10:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeInput_$3311_memory_ptr",
                              "typeString": "struct KyberNetwork.TradeInput memory"
                            }
                          },
                          "id": 12568,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "srcAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3298,
                          "src": "1324:20:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 12569,
                            "name": "tradeInput",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12499,
                            "src": "1358:10:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeInput_$3311_memory_ptr",
                              "typeString": "struct KyberNetwork.TradeInput memory"
                            }
                          },
                          "id": 12570,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "maxDestAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3304,
                          "src": "1358:24:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 12571,
                          "name": "rateResult",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12516,
                          "src": "1396:10:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BestRateResult_$4016_memory_ptr",
                            "typeString": "struct KyberNetwork.BestRateResult memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$1559",
                            "typeString": "contract ERC20"
                          },
                          {
                            "typeIdentifier": "t_contract$_ERC20_$1559",
                            "typeString": "contract ERC20"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_struct$_BestRateResult_$4016_memory_ptr",
                            "typeString": "struct KyberNetwork.BestRateResult memory"
                          }
                        ],
                        "id": 12562,
                        "name": "calcActualAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4844,
                        "src": "1249:17:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_contract$_ERC20_$1559_$_t_contract$_ERC20_$1559_$_t_uint256_$_t_uint256_$_t_struct$_BestRateResult_$4016_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (contract ERC20,contract ERC20,uint256,uint256,struct KyberNetwork.BestRateResult memory) view returns (uint256,uint256,uint256)"
                        }
                      },
                      "id": 12572,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1249:158:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256,uint256)"
                      }
                    },
                    "src": "1200:207:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12574,
                  "nodeType": "ExpressionStatement",
                  "src": "1200:207:32"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 12578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 12575,
                      "name": "actualSrcAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12556,
                      "src": "1422:15:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 12576,
                        "name": "tradeInput",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12499,
                        "src": "1440:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeInput_$3311_memory_ptr",
                          "typeString": "struct KyberNetwork.TradeInput memory"
                        }
                      },
                      "id": 12577,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "srcAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3298,
                      "src": "1440:20:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1422:38:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 12612,
                  "nodeType": "IfStatement",
                  "src": "1418:386:32",
                  "trueBody": {
                    "id": 12611,
                    "nodeType": "Block",
                    "src": "1462:342:32",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_contract$_ERC20_$1559",
                            "typeString": "contract ERC20"
                          },
                          "id": 12582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 12579,
                              "name": "tradeInput",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12499,
                              "src": "1535:10:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeInput_$3311_memory_ptr",
                                "typeString": "struct KyberNetwork.TradeInput memory"
                              }
                            },
                            "id": 12580,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "src",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3296,
                            "src": "1535:14:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$1559",
                              "typeString": "contract ERC20"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 12581,
                            "name": "ETH_TOKEN_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8823,
                            "src": "1553:17:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$1559",
                              "typeString": "contract ERC20"
                            }
                          },
                          "src": "1535:35:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 12609,
                          "nodeType": "Block",
                          "src": "1677:117:32",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 12600,
                                      "name": "tradeInput",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 12499,
                                      "src": "1719:10:32",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TradeInput_$3311_memory_ptr",
                                        "typeString": "struct KyberNetwork.TradeInput memory"
                                      }
                                    },
                                    "id": 12601,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "trader",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3294,
                                    "src": "1719:17:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "components": [
                                      {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 12605,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 12602,
                                            "name": "tradeInput",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 12499,
                                            "src": "1739:10:32",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_TradeInput_$3311_memory_ptr",
                                              "typeString": "struct KyberNetwork.TradeInput memory"
                                            }
                                          },
                                          "id": 12603,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "srcAmount",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 3298,
                                          "src": "1739:20:32",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "argumentTypes": null,
                                          "id": 12604,
                                          "name": "actualSrcAmount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 12556,
                                          "src": "1762:15:32",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "1739:38:32",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 12606,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "1738:40:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 12595,
                                      "name": "tradeInput",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 12499,
                                      "src": "1695:10:32",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TradeInput_$3311_memory_ptr",
                                        "typeString": "struct KyberNetwork.TradeInput memory"
                                      }
                                    },
                                    "id": 12598,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "src",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3296,
                                    "src": "1695:14:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20_$1559",
                                      "typeString": "contract ERC20"
                                    }
                                  },
                                  "id": 12599,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1516,
                                  "src": "1695:23:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 12607,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1695:84:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 12608,
                              "nodeType": "ExpressionStatement",
                              "src": "1695:84:32"
                            }
                          ]
                        },
                        "id": 12610,
                        "nodeType": "IfStatement",
                        "src": "1531:263:32",
                        "trueBody": {
                          "id": 12594,
                          "nodeType": "Block",
                          "src": "1572:99:32",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 12591,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 12588,
                                        "name": "tradeInput",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 12499,
                                        "src": "1617:10:32",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TradeInput_$3311_memory_ptr",
                                          "typeString": "struct KyberNetwork.TradeInput memory"
                                        }
                                      },
                                      "id": 12589,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "srcAmount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3298,
                                      "src": "1617:20:32",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "id": 12590,
                                      "name": "actualSrcAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 12556,
                                      "src": "1640:15:32",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "1617:38:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 12583,
                                      "name": "tradeInput",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 12499,
                                      "src": "1590:10:32",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TradeInput_$3311_memory_ptr",
                                        "typeString": "struct KyberNetwork.TradeInput memory"
                                      }
                                    },
                                    "id": 12586,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "trader",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3294,
                                    "src": "1590:17:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 12587,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "1590:26:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 12592,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1590:66:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 12593,
                              "nodeType": "ExpressionStatement",
                              "src": "1590:66:32"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 12619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 12614,
                          "name": "weiAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12553,
                          "src": "1876:9:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 12616,
                                "name": "tradeInput",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12499,
                                "src": "1905:10:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeInput_$3311_memory_ptr",
                                  "typeString": "struct KyberNetwork.TradeInput memory"
                                }
                              },
                              "id": 12617,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "trader",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3294,
                              "src": "1905:17:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 12615,
                            "name": "getUserCapInWei",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3983
                            ],
                            "referencedDeclaration": 3983,
                            "src": "1889:15:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 12618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1889:34:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1876:47:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 12613,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29914,
                      "src": "1868:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 12620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1868:56:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12621,
                  "nodeType": "ExpressionStatement",
                  "src": "1868:56:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 12624,
                              "name": "tradeInput",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12499,
                              "src": "2019:10:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeInput_$3311_memory_ptr",
                                "typeString": "struct KyberNetwork.TradeInput memory"
                              }
                            },
                            "id": 12625,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "src",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3296,
                            "src": "2019:14:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$1559",
                              "typeString": "contract ERC20"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 12626,
                            "name": "actualSrcAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12556,
                            "src": "2051:15:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 12627,
                            "name": "ETH_TOKEN_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8823,
                            "src": "2084:17:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$1559",
                              "typeString": "contract ERC20"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 12628,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29996,
                            "src": "2119:4:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MaliciousKyberNetwork_$12794",
                              "typeString": "contract MaliciousKyberNetwork"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 12629,
                            "name": "weiAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12553,
                            "src": "2141:9:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 12631,
                                  "name": "rateResult",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12516,
                                  "src": "2190:10:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_BestRateResult_$4016_memory_ptr",
                                    "typeString": "struct KyberNetwork.BestRateResult memory"
                                  }
                                },
                                "id": 12632,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "reserve1",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4005,
                                "src": "2190:19:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 12630,
                              "name": "KyberReserveInterface",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6543,
                              "src": "2168:21:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_KyberReserveInterface_$6543_$",
                                "typeString": "type(contract KyberReserveInterface)"
                              }
                            },
                            "id": 12633,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2168:42:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_KyberReserveInterface_$6543",
                              "typeString": "contract KyberReserveInterface"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 12634,
                              "name": "rateResult",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12516,
                              "src": "2228:10:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BestRateResult_$4016_memory_ptr",
                                "typeString": "struct KyberNetwork.BestRateResult memory"
                              }
                            },
                            "id": 12635,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rateSrcToEth",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4011,
                            "src": "2228:23:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 12636,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2269:4:32",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$1559",
                              "typeString": "contract ERC20"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_contract$_ERC20_$1559",
                              "typeString": "contract ERC20"
                            },
                            {
                              "typeIdentifier": "t_contract$_MaliciousKyberNetwork_$12794",
                              "typeString": "contract MaliciousKyberNetwork"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_contract$_KyberReserveInterface_$6543",
                              "typeString": "contract KyberReserveInterface"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 12623,
                          "name": "doReserveTrade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            12793
                          ],
                          "referencedDeclaration": 12793,
                          "src": "1987:14:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$1559_$_t_uint256_$_t_contract$_ERC20_$1559_$_t_address_$_t_uint256_$_t_contract$_KyberReserveInterface_$6543_$_t_uint256_$_t_bool_$returns$_t_bool_$",
                            "typeString": "function (contract ERC20,uint256,contract ERC20,address,uint256,contract KyberReserveInterface,uint256,bool) returns (bool)"
                          }
                        },
                        "id": 12637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1987:287:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 12622,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29914,
                      "src": "1979:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 12638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1979:296:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12639,
                  "nodeType": "ExpressionStatement",
                  "src": "1979:296:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 12642,
                            "name": "ETH_TOKEN_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8823,
                            "src": "2348:17:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$1559",
                              "typeString": "contract ERC20"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 12643,
                            "name": "weiAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12553,
                            "src": "2383:9:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 12644,
                              "name": "tradeInput",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12499,
                              "src": "2410:10:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeInput_$3311_memory_ptr",
                                "typeString": "struct KyberNetwork.TradeInput memory"
                              }
                            },
                            "id": 12645,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "dest",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3300,
                            "src": "2410:15:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$1559",
                              "typeString": "contract ERC20"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 12646,
                              "name": "tradeInput",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12499,
                              "src": "2443:10:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeInput_$3311_memory_ptr",
                                "typeString": "struct KyberNetwork.TradeInput memory"
                              }
                            },
                            "id": 12647,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "destAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3302,
                            "src": "2443:22:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 12648,
                            "name": "actualDestAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12550,
                            "src": "2483:16:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 12650,
                                  "name": "rateResult",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12516,
                                  "src": "2539:10:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_BestRateResult_$4016_memory_ptr",
                                    "typeString": "struct KyberNetwork.BestRateResult memory"
                                  }
                                },
                                "id": 12651,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "reserve2",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4007,
                                "src": "2539:19:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 12649,
                              "name": "KyberReserveInterface",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6543,
                              "src": "2517:21:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_KyberReserveInterface_$6543_$",
                                "typeString": "type(contract KyberReserveInterface)"
                              }
                            },
                            "id": 12652,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2517:42:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_KyberReserveInterface_$6543",
                              "typeString": "contract KyberReserveInterface"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 12653,
                              "name": "rateResult",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12516,
                              "src": "2577:10:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BestRateResult_$4016_memory_ptr",
                                "typeString": "struct KyberNetwork.BestRateResult memory"
                              }
                            },
                            "id": 12654,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rateEthToDest",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4013,
                            "src": "2577:24:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 12655,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2619:4:32",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$1559",
                              "typeString": "contract ERC20"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_contract$_ERC20_$1559",
                              "typeString": "contract ERC20"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_contract$_KyberReserveInterface_$6543",
                              "typeString": "contract KyberReserveInterface"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 12641,
                          "name": "doReserveTrade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            12793
                          ],
                          "referencedDeclaration": 12793,
                          "src": "2316:14:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$1559_$_t_uint256_$_t_contract$_ERC20_$1559_$_t_address_$_t_uint256_$_t_contract$_KyberReserveInterface_$6543_$_t_uint256_$_t_bool_$returns$_t_bool_$",
                            "typeString": "function (contract ERC20,uint256,contract ERC20,address,uint256,contract KyberReserveInterface,uint256,bool) returns (bool)"
                          }
                        },
                        "id": 12656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2316:308:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 12640,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29914,
                      "src": "2308:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 12657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2308:317:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12658,
                  "nodeType": "ExpressionStatement",
                  "src": "2308:317:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 12661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 12659,
                          "name": "actualDestAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12550,
                          "src": "2644:16:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 12660,
                          "name": "myFeeWei",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12488,
                          "src": "2663:8:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2644:27:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 12662,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2643:29:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 12503,
                  "id": 12663,
                  "nodeType": "Return",
                  "src": "2636:36:32"
                }
              ]
            },
            "id": 12665,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "trade",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12500,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12499,
                  "name": "tradeInput",
                  "nodeType": "VariableDeclaration",
                  "scope": 12665,
                  "src": "684:21:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TradeInput_$3311_memory_ptr",
                    "typeString": "struct KyberNetwork.TradeInput memory"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 12498,
                    "name": "TradeInput",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3311,
                    "src": "684:10:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeInput_$3311_storage_ptr",
                      "typeString": "struct KyberNetwork.TradeInput storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "683:23:32"
            },
            "payable": false,
            "returnParameters": {
              "id": 12503,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12502,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12665,
                  "src": "724:4:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12501,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "724:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "723:6:32"
            },
            "scope": 12794,
            "src": "669:2010:32",
            "stateMutability": "nonpayable",
            "superFunction": 4773,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 12674,
              "nodeType": "Block",
              "src": "2767:31:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 12672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 12670,
                      "name": "myFeeWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12488,
                      "src": "2777:8:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 12671,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12667,
                      "src": "2788:3:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2777:14:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12673,
                  "nodeType": "ExpressionStatement",
                  "src": "2777:14:32"
                }
              ]
            },
            "id": 12675,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "setMyFeeWei",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12667,
                  "name": "fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 12675,
                  "src": "2750:8:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12666,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2750:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2749:10:32"
            },
            "payable": false,
            "returnParameters": {
              "id": 12669,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2767:0:32"
            },
            "scope": 12794,
            "src": "2729:69:32",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12792,
              "nodeType": "Block",
              "src": "3511:1049:32",
              "statements": [
                {
                  "assignments": [
                    12697
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12697,
                      "name": "callValue",
                      "nodeType": "VariableDeclaration",
                      "scope": 12793,
                      "src": "3521:14:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12696,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3521:4:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12699,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 12698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3538:1:32",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3521:18:32"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_contract$_ERC20_$1559",
                      "typeString": "contract ERC20"
                    },
                    "id": 12702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 12700,
                      "name": "src",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12677,
                      "src": "3554:3:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1559",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 12701,
                      "name": "dest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12681,
                      "src": "3561:4:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1559",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "3554:11:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 12728,
                  "nodeType": "IfStatement",
                  "src": "3550:295:32",
                  "trueBody": {
                    "id": 12727,
                    "nodeType": "Block",
                    "src": "3567:278:32",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 12708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 12703,
                            "name": "destAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12683,
                            "src": "3661:11:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 12705,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 29996,
                                    "src": "3685:4:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_MaliciousKyberNetwork_$12794",
                                      "typeString": "contract MaliciousKyberNetwork"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_MaliciousKyberNetwork_$12794",
                                      "typeString": "contract MaliciousKyberNetwork"
                                    }
                                  ],
                                  "id": 12704,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3677:7:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 12706,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3677:13:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "id": 12707,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3676:15:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3661:30:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 12724,
                        "nodeType": "IfStatement",
                        "src": "3657:153:32",
                        "trueBody": {
                          "id": 12723,
                          "nodeType": "Block",
                          "src": "3693:117:32",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 12714,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "id": 12712,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 12679,
                                      "src": "3732:6:32",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "id": 12713,
                                      "name": "myFeeWei",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 12488,
                                      "src": "3741:8:32",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "3732:17:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 12709,
                                    "name": "destAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12683,
                                    "src": "3711:11:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 12711,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "3711:20:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 12715,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3711:39:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 12716,
                              "nodeType": "ExpressionStatement",
                              "src": "3711:39:32"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 12720,
                                    "name": "myFeeWei",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12488,
                                    "src": "3786:8:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 12717,
                                    "name": "myWallet",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12485,
                                    "src": "3768:8:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 12719,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "3768:17:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 12721,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3768:27:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 12722,
                              "nodeType": "ExpressionStatement",
                              "src": "3768:27:32"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 12725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3830:4:32",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 12695,
                        "id": 12726,
                        "nodeType": "Return",
                        "src": "3823:11:32"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_contract$_ERC20_$1559",
                      "typeString": "contract ERC20"
                    },
                    "id": 12731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 12729,
                      "name": "src",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12677,
                      "src": "3859:3:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1559",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 12730,
                      "name": "ETH_TOKEN_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8823,
                      "src": "3866:17:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1559",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "3859:24:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 12737,
                  "nodeType": "IfStatement",
                  "src": "3855:73:32",
                  "trueBody": {
                    "id": 12736,
                    "nodeType": "Block",
                    "src": "3885:43:32",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 12734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 12732,
                            "name": "callValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12697,
                            "src": "3899:9:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 12733,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12679,
                            "src": "3911:6:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3899:18:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 12735,
                        "nodeType": "ExpressionStatement",
                        "src": "3899:18:32"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 12744,
                            "name": "src",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12677,
                            "src": "4057:3:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$1559",
                              "typeString": "contract ERC20"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 12745,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12679,
                            "src": "4062:6:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 12746,
                            "name": "dest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12681,
                            "src": "4070:4:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$1559",
                              "typeString": "contract ERC20"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 12747,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29996,
                            "src": "4076:4:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MaliciousKyberNetwork_$12794",
                              "typeString": "contract MaliciousKyberNetwork"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 12748,
                            "name": "conversionRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12689,
                            "src": "4082:14:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 12749,
                            "name": "validate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12691,
                            "src": "4098:8:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$1559",
                              "typeString": "contract ERC20"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_contract$_ERC20_$1559",
                              "typeString": "contract ERC20"
                            },
                            {
                              "typeIdentifier": "t_contract$_MaliciousKyberNetwork_$12794",
                              "typeString": "contract MaliciousKyberNetwork"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 12742,
                              "name": "callValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12697,
                              "src": "4046:9:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 12739,
                                "name": "reserve",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12687,
                                "src": "4026:7:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_KyberReserveInterface_$6543",
                                  "typeString": "contract KyberReserveInterface"
                                }
                              },
                              "id": 12740,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "trade",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6529,
                              "src": "4026:13:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_contract$_ERC20_$1559_$_t_uint256_$_t_contract$_ERC20_$1559_$_t_address_$_t_uint256_$_t_bool_$returns$_t_bool_$",
                                "typeString": "function (contract ERC20,uint256,contract ERC20,address,uint256,bool) payable external returns (bool)"
                              }
                            },
                            "id": 12741,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4026:19:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_setvalue_nonpayable$_t_uint256_$returns$_t_function_external_payable$_t_contract$_ERC20_$1559_$_t_uint256_$_t_contract$_ERC20_$1559_$_t_address_$_t_uint256_$_t_bool_$returns$_t_bool_$value_$",
                              "typeString": "function (uint256) returns (function (contract ERC20,uint256,contract ERC20,address,uint256,bool) payable external returns (bool))"
                            }
                          },
                          "id": 12743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4026:30:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_contract$_ERC20_$1559_$_t_uint256_$_t_contract$_ERC20_$1559_$_t_address_$_t_uint256_$_t_bool_$returns$_t_bool_$value",
                            "typeString": "function (contract ERC20,uint256,contract ERC20,address,uint256,bool) payable external returns (bool)"
                          }
                        },
                        "id": 12750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4026:81:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 12738,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29914,
                      "src": "4018:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 12751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4018:90:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12752,
                  "nodeType": "ExpressionStatement",
                  "src": "4018:90:32"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 12757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 12753,
                      "name": "destAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12683,
                      "src": "4123:11:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 12755,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29996,
                          "src": "4146:4:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MaliciousKyberNetwork_$12794",
                            "typeString": "contract MaliciousKyberNetwork"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MaliciousKyberNetwork_$12794",
                            "typeString": "contract MaliciousKyberNetwork"
                          }
                        ],
                        "id": 12754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4138:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 12756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4138:13:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4123:28:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 12789,
                  "nodeType": "IfStatement",
                  "src": "4119:413:32",
                  "trueBody": {
                    "id": 12788,
                    "nodeType": "Block",
                    "src": "4153:379:32",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_contract$_ERC20_$1559",
                            "typeString": "contract ERC20"
                          },
                          "id": 12760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 12758,
                            "name": "dest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12681,
                            "src": "4264:4:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$1559",
                              "typeString": "contract ERC20"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 12759,
                            "name": "ETH_TOKEN_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8823,
                            "src": "4272:17:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$1559",
                              "typeString": "contract ERC20"
                            }
                          },
                          "src": "4264:25:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 12786,
                          "nodeType": "Block",
                          "src": "4370:152:32",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 12771,
                                        "name": "destAddress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 12683,
                                        "src": "4410:11:32",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "argumentTypes": null,
                                        "components": [
                                          {
                                            "argumentTypes": null,
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 12774,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "argumentTypes": null,
                                              "id": 12772,
                                              "name": "expectedDestAmount",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 12685,
                                              "src": "4424:18:32",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "-",
                                            "rightExpression": {
                                              "argumentTypes": null,
                                              "id": 12773,
                                              "name": "myFeeWei",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 12488,
                                              "src": "4445:8:32",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "4424:29:32",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 12775,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "4423:31:32",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 12769,
                                        "name": "dest",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 12681,
                                        "src": "4396:4:32",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ERC20_$1559",
                                          "typeString": "contract ERC20"
                                        }
                                      },
                                      "id": 12770,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "transfer",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1516,
                                      "src": "4396:13:32",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                        "typeString": "function (address,uint256) external returns (bool)"
                                      }
                                    },
                                    "id": 12776,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4396:59:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 12768,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 29914,
                                  "src": "4388:7:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                    "typeString": "function (bool) pure"
                                  }
                                },
                                "id": 12777,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4388:68:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 12778,
                              "nodeType": "ExpressionStatement",
                              "src": "4388:68:32"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 12782,
                                    "name": "myWallet",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12485,
                                    "src": "4488:8:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 12783,
                                    "name": "myFeeWei",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12488,
                                    "src": "4498:8:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 12779,
                                    "name": "dest",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12681,
                                    "src": "4474:4:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20_$1559",
                                      "typeString": "contract ERC20"
                                    }
                                  },
                                  "id": 12781,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1516,
                                  "src": "4474:13:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 12784,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4474:33:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 12785,
                              "nodeType": "ExpressionStatement",
                              "src": "4474:33:32"
                            }
                          ]
                        },
                        "id": 12787,
                        "nodeType": "IfStatement",
                        "src": "4260:262:32",
                        "trueBody": {
                          "id": 12767,
                          "nodeType": "Block",
                          "src": "4291:73:32",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 12764,
                                    "name": "expectedDestAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12685,
                                    "src": "4330:18:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 12761,
                                    "name": "destAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12683,
                                    "src": "4309:11:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 12763,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "4309:20:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 12765,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4309:40:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 12766,
                              "nodeType": "ExpressionStatement",
                              "src": "4309:40:32"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 12790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4549:4:32",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 12695,
                  "id": 12791,
                  "nodeType": "Return",
                  "src": "4542:11:32"
                }
              ]
            },
            "id": 12793,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "doReserveTrade",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12692,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12677,
                  "name": "src",
                  "nodeType": "VariableDeclaration",
                  "scope": 12793,
                  "src": "3258:9:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$1559",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 12676,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1559,
                    "src": "3258:5:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1559",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12679,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 12793,
                  "src": "3277:11:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12678,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3277:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12681,
                  "name": "dest",
                  "nodeType": "VariableDeclaration",
                  "scope": 12793,
                  "src": "3298:10:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$1559",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 12680,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1559,
                    "src": "3298:5:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1559",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12683,
                  "name": "destAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 12793,
                  "src": "3318:19:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12682,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3318:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12685,
                  "name": "expectedDestAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 12793,
                  "src": "3347:23:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12684,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3347:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12687,
                  "name": "reserve",
                  "nodeType": "VariableDeclaration",
                  "scope": 12793,
                  "src": "3380:29:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_KyberReserveInterface_$6543",
                    "typeString": "contract KyberReserveInterface"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 12686,
                    "name": "KyberReserveInterface",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6543,
                    "src": "3380:21:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_KyberReserveInterface_$6543",
                      "typeString": "contract KyberReserveInterface"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12689,
                  "name": "conversionRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 12793,
                  "src": "3419:19:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12688,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3419:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12691,
                  "name": "validate",
                  "nodeType": "VariableDeclaration",
                  "scope": 12793,
                  "src": "3448:13:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12690,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3448:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3248:219:32"
            },
            "payable": false,
            "returnParameters": {
              "id": 12695,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12694,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12793,
                  "src": "3501:4:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12693,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3501:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3500:6:32"
            },
            "scope": 12794,
            "src": "3225:1335:32",
            "stateMutability": "nonpayable",
            "superFunction": 4943,
            "visibility": "internal"
          }
        ],
        "scope": 12795,
        "src": "260:4302:32"
      }
    ],
    "src": "0:4563:32"
  },
  "legacyAST": {
    "absolutePath": "/Users/oscarr/Ethereum/frappe/contracts/mockContracts/MaliciousKyberNetwork.sol",
    "exportedSymbols": {
      "MaliciousKyberNetwork": [
        12794
      ]
    },
    "id": 12795,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 12479,
        "literals": [
          "solidity",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:32"
      },
      {
        "absolutePath": "/Users/oscarr/Ethereum/frappe/contracts/KyberNetwork.sol",
        "file": "../KyberNetwork.sol",
        "id": 12480,
        "nodeType": "ImportDirective",
        "scope": 12795,
        "sourceUnit": 5062,
        "src": "25:29:32",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 12481,
              "name": "KyberNetwork",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5061,
              "src": "294:12:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_KyberNetwork_$5061",
                "typeString": "contract KyberNetwork"
              }
            },
            "id": 12482,
            "nodeType": "InheritanceSpecifier",
            "src": "294:12:32"
          }
        ],
        "contractDependencies": [
          3180,
          5061,
          5134,
          8554,
          9093,
          9275,
          10292
        ],
        "contractKind": "contract",
        "documentation": "/////////////////////////////////////////////////////////////////////////////////////////////////////\n @title Kyber Network main contract, takes some fee and reports actual dest amount minus Fees.",
        "fullyImplemented": true,
        "id": 12794,
        "linearizedBaseContracts": [
          12794,
          5061,
          3180,
          5134,
          9275,
          9093,
          10292,
          8554
        ],
        "name": "MaliciousKyberNetwork",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 12485,
            "name": "myWallet",
            "nodeType": "VariableDeclaration",
            "scope": 12794,
            "src": "314:32:32",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 12483,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "314:7:32",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307831323334",
              "id": 12484,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "340:6:32",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_4660_by_1",
                "typeString": "int_const 4660"
              },
              "value": "0x1234"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 12488,
            "name": "myFeeWei",
            "nodeType": "VariableDeclaration",
            "scope": 12794,
            "src": "352:25:32",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 12486,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "352:4:32",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130",
              "id": 12487,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "375:2:32",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 12496,
              "nodeType": "Block",
              "src": "459:3:32",
              "statements": []
            },
            "id": 12497,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 12493,
                    "name": "_admin",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12490,
                    "src": "451:6:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 12494,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 12492,
                  "name": "KyberNetwork",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5061,
                  "src": "438:12:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_KyberNetwork_$5061_$",
                    "typeString": "type(contract KyberNetwork)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "438:20:32"
              }
            ],
            "name": "MaliciousKyberNetwork",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12491,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12490,
                  "name": "_admin",
                  "nodeType": "VariableDeclaration",
                  "scope": 12497,
                  "src": "415:14:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12489,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "415:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "414:16:32"
            },
            "payable": false,
            "returnParameters": {
              "id": 12495,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "459:0:32"
            },
            "scope": 12794,
            "src": "384:78:32",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12664,
              "nodeType": "Block",
              "src": "730:1949:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12505,
                        "name": "isEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3226,
                        "src": "748:9:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 12504,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29914,
                      "src": "740:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 12506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "740:18:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12507,
                  "nodeType": "ExpressionStatement",
                  "src": "740:18:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 12512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 12509,
                            "name": "tx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29921,
                            "src": "776:2:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_transaction",
                              "typeString": "tx"
                            }
                          },
                          "id": 12510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "gasprice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "776:11:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 12511,
                          "name": "maxGasPriceValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3223,
                          "src": "791:16:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "776:31:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 12508,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29914,
                      "src": "768:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 12513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "768:40:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12514,
                  "nodeType": "ExpressionStatement",
                  "src": "768:40:32"
                },
                {
                  "assignments": [
                    12516
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12516,
                      "name": "rateResult",
                      "nodeType": "VariableDeclaration",
                      "scope": 12665,
                      "src": "819:32:32",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BestRateResult_$4016_memory_ptr",
                        "typeString": "struct KyberNetwork.BestRateResult memory"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 12515,
                        "name": "BestRateResult",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 4016,
                        "src": "819:14:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BestRateResult_$4016_storage_ptr",
                          "typeString": "struct KyberNetwork.BestRateResult storage pointer"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12526,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 12518,
                          "name": "tradeInput",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12499,
                          "src": "887:10:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeInput_$3311_memory_ptr",
                            "typeString": "struct KyberNetwork.TradeInput memory"
                          }
                        },
                        "id": 12519,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "src",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3296,
                        "src": "887:14:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1559",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 12520,
                          "name": "tradeInput",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12499,
                          "src": "903:10:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeInput_$3311_memory_ptr",
                            "typeString": "struct KyberNetwork.TradeInput memory"
                          }
                        },
                        "id": 12521,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "dest",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3300,
                        "src": "903:15:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1559",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 12522,
                          "name": "tradeInput",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12499,
                          "src": "920:10:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeInput_$3311_memory_ptr",
                            "typeString": "struct KyberNetwork.TradeInput memory"
                          }
                        },
                        "id": 12523,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "srcAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3298,
                        "src": "920:20:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12524,
                        "name": "EMPTY_HINT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3247,
                        "src": "942:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$1559",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20_$1559",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 12517,
                      "name": "findBestRateTokenToToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4440,
                      "src": "862:24:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_ERC20_$1559_$_t_contract$_ERC20_$1559_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_struct$_BestRateResult_$4016_memory_ptr_$",
                        "typeString": "function (contract ERC20,contract ERC20,uint256,bytes memory) view returns (struct KyberNetwork.BestRateResult memory)"
                      }
                    },
                    "id": 12525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "862:91:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BestRateResult_$4016_memory_ptr",
                      "typeString": "struct KyberNetwork.BestRateResult memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "819:134:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 12531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 12528,
                            "name": "rateResult",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12516,
                            "src": "972:10:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BestRateResult_$4016_memory_ptr",
                              "typeString": "struct KyberNetwork.BestRateResult memory"
                            }
                          },
                          "id": 12529,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4003,
                          "src": "972:15:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 12530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "990:1:32",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "972:19:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 12527,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29914,
                      "src": "964:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 12532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "964:28:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12533,
                  "nodeType": "ExpressionStatement",
                  "src": "964:28:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 12538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 12535,
                            "name": "rateResult",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12516,
                            "src": "1010:10:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BestRateResult_$4016_memory_ptr",
                              "typeString": "struct KyberNetwork.BestRateResult memory"
                            }
                          },
                          "id": 12536,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4003,
                          "src": "1010:15:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 12537,
                          "name": "MAX_RATE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8843,
                          "src": "1028:8:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1010:26:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 12534,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29914,
                      "src": "1002:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 12539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1002:35:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12540,
                  "nodeType": "ExpressionStatement",
                  "src": "1002:35:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 12546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 12542,
                            "name": "rateResult",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12516,
                            "src": "1055:10:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BestRateResult_$4016_memory_ptr",
                              "typeString": "struct KyberNetwork.BestRateResult memory"
                            }
                          },
                          "id": 12543,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4003,
                          "src": "1055:15:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 12544,
                            "name": "tradeInput",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12499,
                            "src": "1074:10:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeInput_$3311_memory_ptr",
                              "typeString": "struct KyberNetwork.TradeInput memory"
                            }
                          },
                          "id": 12545,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "minConversionRate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3306,
                          "src": "1074:28:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1055:47:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 12541,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29914,
                      "src": "1047:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 12547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1047:56:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12548,
                  "nodeType": "ExpressionStatement",
                  "src": "1047:56:32"
                },
                {
                  "assignments": [],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12550,
                      "name": "actualDestAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 12665,
                      "src": "1114:21:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12549,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1114:4:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12551,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1114:21:32"
                },
                {
                  "assignments": [],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12553,
                      "name": "weiAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 12665,
                      "src": "1145:14:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12552,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1145:4:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12554,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1145:14:32"
                },
                {
                  "assignments": [],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12556,
                      "name": "actualSrcAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 12665,
                      "src": "1169:20:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12555,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1169:4:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12557,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1169:20:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 12573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "id": 12558,
                          "name": "actualSrcAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12556,
                          "src": "1201:15:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 12559,
                          "name": "weiAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12553,
                          "src": "1218:9:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 12560,
                          "name": "actualDestAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12550,
                          "src": "1229:16:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 12561,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "1200:46:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 12563,
                            "name": "tradeInput",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12499,
                            "src": "1267:10:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeInput_$3311_memory_ptr",
                              "typeString": "struct KyberNetwork.TradeInput memory"
                            }
                          },
                          "id": 12564,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "src",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3296,
                          "src": "1267:14:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$1559",
                            "typeString": "contract ERC20"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 12565,
                            "name": "tradeInput",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12499,
                            "src": "1295:10:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeInput_$3311_memory_ptr",
                              "typeString": "struct KyberNetwork.TradeInput memory"
                            }
                          },
                          "id": 12566,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "dest",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3300,
                          "src": "1295:15:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$1559",
                            "typeString": "contract ERC20"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 12567,
                            "name": "tradeInput",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12499,
                            "src": "1324:10:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeInput_$3311_memory_ptr",
                              "typeString": "struct KyberNetwork.TradeInput memory"
                            }
                          },
                          "id": 12568,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "srcAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3298,
                          "src": "1324:20:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 12569,
                            "name": "tradeInput",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12499,
                            "src": "1358:10:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeInput_$3311_memory_ptr",
                              "typeString": "struct KyberNetwork.TradeInput memory"
                            }
                          },
                          "id": 12570,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "maxDestAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3304,
                          "src": "1358:24:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 12571,
                          "name": "rateResult",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12516,
                          "src": "1396:10:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BestRateResult_$4016_memory_ptr",
                            "typeString": "struct KyberNetwork.BestRateResult memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$1559",
                            "typeString": "contract ERC20"
                          },
                          {
                            "typeIdentifier": "t_contract$_ERC20_$1559",
                            "typeString": "contract ERC20"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_struct$_BestRateResult_$4016_memory_ptr",
                            "typeString": "struct KyberNetwork.BestRateResult memory"
                          }
                        ],
                        "id": 12562,
                        "name": "calcActualAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4844,
                        "src": "1249:17:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_contract$_ERC20_$1559_$_t_contract$_ERC20_$1559_$_t_uint256_$_t_uint256_$_t_struct$_BestRateResult_$4016_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (contract ERC20,contract ERC20,uint256,uint256,struct KyberNetwork.BestRateResult memory) view returns (uint256,uint256,uint256)"
                        }
                      },
                      "id": 12572,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1249:158:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256,uint256)"
                      }
                    },
                    "src": "1200:207:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12574,
                  "nodeType": "ExpressionStatement",
                  "src": "1200:207:32"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 12578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 12575,
                      "name": "actualSrcAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12556,
                      "src": "1422:15:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 12576,
                        "name": "tradeInput",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12499,
                        "src": "1440:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeInput_$3311_memory_ptr",
                          "typeString": "struct KyberNetwork.TradeInput memory"
                        }
                      },
                      "id": 12577,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "srcAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3298,
                      "src": "1440:20:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1422:38:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 12612,
                  "nodeType": "IfStatement",
                  "src": "1418:386:32",
                  "trueBody": {
                    "id": 12611,
                    "nodeType": "Block",
                    "src": "1462:342:32",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_contract$_ERC20_$1559",
                            "typeString": "contract ERC20"
                          },
                          "id": 12582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 12579,
                              "name": "tradeInput",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12499,
                              "src": "1535:10:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeInput_$3311_memory_ptr",
                                "typeString": "struct KyberNetwork.TradeInput memory"
                              }
                            },
                            "id": 12580,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "src",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3296,
                            "src": "1535:14:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$1559",
                              "typeString": "contract ERC20"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 12581,
                            "name": "ETH_TOKEN_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8823,
                            "src": "1553:17:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$1559",
                              "typeString": "contract ERC20"
                            }
                          },
                          "src": "1535:35:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 12609,
                          "nodeType": "Block",
                          "src": "1677:117:32",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 12600,
                                      "name": "tradeInput",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 12499,
                                      "src": "1719:10:32",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TradeInput_$3311_memory_ptr",
                                        "typeString": "struct KyberNetwork.TradeInput memory"
                                      }
                                    },
                                    "id": 12601,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "trader",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3294,
                                    "src": "1719:17:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "components": [
                                      {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 12605,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 12602,
                                            "name": "tradeInput",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 12499,
                                            "src": "1739:10:32",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_TradeInput_$3311_memory_ptr",
                                              "typeString": "struct KyberNetwork.TradeInput memory"
                                            }
                                          },
                                          "id": 12603,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "srcAmount",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 3298,
                                          "src": "1739:20:32",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "argumentTypes": null,
                                          "id": 12604,
                                          "name": "actualSrcAmount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 12556,
                                          "src": "1762:15:32",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "1739:38:32",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 12606,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "1738:40:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 12595,
                                      "name": "tradeInput",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 12499,
                                      "src": "1695:10:32",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TradeInput_$3311_memory_ptr",
                                        "typeString": "struct KyberNetwork.TradeInput memory"
                                      }
                                    },
                                    "id": 12598,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "src",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3296,
                                    "src": "1695:14:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20_$1559",
                                      "typeString": "contract ERC20"
                                    }
                                  },
                                  "id": 12599,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1516,
                                  "src": "1695:23:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 12607,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1695:84:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 12608,
                              "nodeType": "ExpressionStatement",
                              "src": "1695:84:32"
                            }
                          ]
                        },
                        "id": 12610,
                        "nodeType": "IfStatement",
                        "src": "1531:263:32",
                        "trueBody": {
                          "id": 12594,
                          "nodeType": "Block",
                          "src": "1572:99:32",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 12591,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 12588,
                                        "name": "tradeInput",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 12499,
                                        "src": "1617:10:32",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TradeInput_$3311_memory_ptr",
                                          "typeString": "struct KyberNetwork.TradeInput memory"
                                        }
                                      },
                                      "id": 12589,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "srcAmount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3298,
                                      "src": "1617:20:32",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "id": 12590,
                                      "name": "actualSrcAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 12556,
                                      "src": "1640:15:32",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "1617:38:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 12583,
                                      "name": "tradeInput",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 12499,
                                      "src": "1590:10:32",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TradeInput_$3311_memory_ptr",
                                        "typeString": "struct KyberNetwork.TradeInput memory"
                                      }
                                    },
                                    "id": 12586,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "trader",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3294,
                                    "src": "1590:17:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 12587,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "1590:26:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 12592,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1590:66:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 12593,
                              "nodeType": "ExpressionStatement",
                              "src": "1590:66:32"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 12619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 12614,
                          "name": "weiAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12553,
                          "src": "1876:9:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 12616,
                                "name": "tradeInput",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12499,
                                "src": "1905:10:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeInput_$3311_memory_ptr",
                                  "typeString": "struct KyberNetwork.TradeInput memory"
                                }
                              },
                              "id": 12617,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "trader",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3294,
                              "src": "1905:17:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 12615,
                            "name": "getUserCapInWei",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3983
                            ],
                            "referencedDeclaration": 3983,
                            "src": "1889:15:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 12618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1889:34:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1876:47:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 12613,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29914,
                      "src": "1868:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 12620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1868:56:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12621,
                  "nodeType": "ExpressionStatement",
                  "src": "1868:56:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 12624,
                              "name": "tradeInput",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12499,
                              "src": "2019:10:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeInput_$3311_memory_ptr",
                                "typeString": "struct KyberNetwork.TradeInput memory"
                              }
                            },
                            "id": 12625,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "src",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3296,
                            "src": "2019:14:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$1559",
                              "typeString": "contract ERC20"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 12626,
                            "name": "actualSrcAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12556,
                            "src": "2051:15:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 12627,
                            "name": "ETH_TOKEN_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8823,
                            "src": "2084:17:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$1559",
                              "typeString": "contract ERC20"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 12628,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29996,
                            "src": "2119:4:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MaliciousKyberNetwork_$12794",
                              "typeString": "contract MaliciousKyberNetwork"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 12629,
                            "name": "weiAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12553,
                            "src": "2141:9:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 12631,
                                  "name": "rateResult",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12516,
                                  "src": "2190:10:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_BestRateResult_$4016_memory_ptr",
                                    "typeString": "struct KyberNetwork.BestRateResult memory"
                                  }
                                },
                                "id": 12632,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "reserve1",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4005,
                                "src": "2190:19:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 12630,
                              "name": "KyberReserveInterface",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6543,
                              "src": "2168:21:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_KyberReserveInterface_$6543_$",
                                "typeString": "type(contract KyberReserveInterface)"
                              }
                            },
                            "id": 12633,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2168:42:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_KyberReserveInterface_$6543",
                              "typeString": "contract KyberReserveInterface"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 12634,
                              "name": "rateResult",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12516,
                              "src": "2228:10:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BestRateResult_$4016_memory_ptr",
                                "typeString": "struct KyberNetwork.BestRateResult memory"
                              }
                            },
                            "id": 12635,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rateSrcToEth",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4011,
                            "src": "2228:23:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 12636,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2269:4:32",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$1559",
                              "typeString": "contract ERC20"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_contract$_ERC20_$1559",
                              "typeString": "contract ERC20"
                            },
                            {
                              "typeIdentifier": "t_contract$_MaliciousKyberNetwork_$12794",
                              "typeString": "contract MaliciousKyberNetwork"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_contract$_KyberReserveInterface_$6543",
                              "typeString": "contract KyberReserveInterface"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 12623,
                          "name": "doReserveTrade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            12793
                          ],
                          "referencedDeclaration": 12793,
                          "src": "1987:14:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$1559_$_t_uint256_$_t_contract$_ERC20_$1559_$_t_address_$_t_uint256_$_t_contract$_KyberReserveInterface_$6543_$_t_uint256_$_t_bool_$returns$_t_bool_$",
                            "typeString": "function (contract ERC20,uint256,contract ERC20,address,uint256,contract KyberReserveInterface,uint256,bool) returns (bool)"
                          }
                        },
                        "id": 12637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1987:287:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 12622,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29914,
                      "src": "1979:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 12638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1979:296:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12639,
                  "nodeType": "ExpressionStatement",
                  "src": "1979:296:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 12642,
                            "name": "ETH_TOKEN_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8823,
                            "src": "2348:17:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$1559",
                              "typeString": "contract ERC20"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 12643,
                            "name": "weiAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12553,
                            "src": "2383:9:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 12644,
                              "name": "tradeInput",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12499,
                              "src": "2410:10:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeInput_$3311_memory_ptr",
                                "typeString": "struct KyberNetwork.TradeInput memory"
                              }
                            },
                            "id": 12645,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "dest",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3300,
                            "src": "2410:15:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$1559",
                              "typeString": "contract ERC20"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 12646,
                              "name": "tradeInput",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12499,
                              "src": "2443:10:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeInput_$3311_memory_ptr",
                                "typeString": "struct KyberNetwork.TradeInput memory"
                              }
                            },
                            "id": 12647,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "destAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3302,
                            "src": "2443:22:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 12648,
                            "name": "actualDestAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12550,
                            "src": "2483:16:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 12650,
                                  "name": "rateResult",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12516,
                                  "src": "2539:10:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_BestRateResult_$4016_memory_ptr",
                                    "typeString": "struct KyberNetwork.BestRateResult memory"
                                  }
                                },
                                "id": 12651,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "reserve2",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4007,
                                "src": "2539:19:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 12649,
                              "name": "KyberReserveInterface",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6543,
                              "src": "2517:21:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_KyberReserveInterface_$6543_$",
                                "typeString": "type(contract KyberReserveInterface)"
                              }
                            },
                            "id": 12652,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2517:42:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_KyberReserveInterface_$6543",
                              "typeString": "contract KyberReserveInterface"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 12653,
                              "name": "rateResult",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12516,
                              "src": "2577:10:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BestRateResult_$4016_memory_ptr",
                                "typeString": "struct KyberNetwork.BestRateResult memory"
                              }
                            },
                            "id": 12654,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rateEthToDest",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4013,
                            "src": "2577:24:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 12655,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2619:4:32",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$1559",
                              "typeString": "contract ERC20"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_contract$_ERC20_$1559",
                              "typeString": "contract ERC20"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_contract$_KyberReserveInterface_$6543",
                              "typeString": "contract KyberReserveInterface"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 12641,
                          "name": "doReserveTrade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            12793
                          ],
                          "referencedDeclaration": 12793,
                          "src": "2316:14:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$1559_$_t_uint256_$_t_contract$_ERC20_$1559_$_t_address_$_t_uint256_$_t_contract$_KyberReserveInterface_$6543_$_t_uint256_$_t_bool_$returns$_t_bool_$",
                            "typeString": "function (contract ERC20,uint256,contract ERC20,address,uint256,contract KyberReserveInterface,uint256,bool) returns (bool)"
                          }
                        },
                        "id": 12656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2316:308:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 12640,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29914,
                      "src": "2308:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 12657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2308:317:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12658,
                  "nodeType": "ExpressionStatement",
                  "src": "2308:317:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 12661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 12659,
                          "name": "actualDestAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12550,
                          "src": "2644:16:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 12660,
                          "name": "myFeeWei",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12488,
                          "src": "2663:8:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2644:27:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 12662,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2643:29:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 12503,
                  "id": 12663,
                  "nodeType": "Return",
                  "src": "2636:36:32"
                }
              ]
            },
            "id": 12665,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "trade",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12500,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12499,
                  "name": "tradeInput",
                  "nodeType": "VariableDeclaration",
                  "scope": 12665,
                  "src": "684:21:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TradeInput_$3311_memory_ptr",
                    "typeString": "struct KyberNetwork.TradeInput memory"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 12498,
                    "name": "TradeInput",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3311,
                    "src": "684:10:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeInput_$3311_storage_ptr",
                      "typeString": "struct KyberNetwork.TradeInput storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "683:23:32"
            },
            "payable": false,
            "returnParameters": {
              "id": 12503,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12502,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12665,
                  "src": "724:4:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12501,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "724:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "723:6:32"
            },
            "scope": 12794,
            "src": "669:2010:32",
            "stateMutability": "nonpayable",
            "superFunction": 4773,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 12674,
              "nodeType": "Block",
              "src": "2767:31:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 12672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 12670,
                      "name": "myFeeWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12488,
                      "src": "2777:8:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 12671,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12667,
                      "src": "2788:3:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2777:14:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12673,
                  "nodeType": "ExpressionStatement",
                  "src": "2777:14:32"
                }
              ]
            },
            "id": 12675,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "setMyFeeWei",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12667,
                  "name": "fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 12675,
                  "src": "2750:8:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12666,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2750:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2749:10:32"
            },
            "payable": false,
            "returnParameters": {
              "id": 12669,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2767:0:32"
            },
            "scope": 12794,
            "src": "2729:69:32",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12792,
              "nodeType": "Block",
              "src": "3511:1049:32",
              "statements": [
                {
                  "assignments": [
                    12697
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12697,
                      "name": "callValue",
                      "nodeType": "VariableDeclaration",
                      "scope": 12793,
                      "src": "3521:14:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12696,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3521:4:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12699,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 12698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3538:1:32",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3521:18:32"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_contract$_ERC20_$1559",
                      "typeString": "contract ERC20"
                    },
                    "id": 12702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 12700,
                      "name": "src",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12677,
                      "src": "3554:3:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1559",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 12701,
                      "name": "dest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12681,
                      "src": "3561:4:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1559",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "3554:11:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 12728,
                  "nodeType": "IfStatement",
                  "src": "3550:295:32",
                  "trueBody": {
                    "id": 12727,
                    "nodeType": "Block",
                    "src": "3567:278:32",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 12708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 12703,
                            "name": "destAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12683,
                            "src": "3661:11:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 12705,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 29996,
                                    "src": "3685:4:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_MaliciousKyberNetwork_$12794",
                                      "typeString": "contract MaliciousKyberNetwork"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_MaliciousKyberNetwork_$12794",
                                      "typeString": "contract MaliciousKyberNetwork"
                                    }
                                  ],
                                  "id": 12704,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3677:7:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 12706,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3677:13:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "id": 12707,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3676:15:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3661:30:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 12724,
                        "nodeType": "IfStatement",
                        "src": "3657:153:32",
                        "trueBody": {
                          "id": 12723,
                          "nodeType": "Block",
                          "src": "3693:117:32",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 12714,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "id": 12712,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 12679,
                                      "src": "3732:6:32",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "id": 12713,
                                      "name": "myFeeWei",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 12488,
                                      "src": "3741:8:32",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "3732:17:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 12709,
                                    "name": "destAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12683,
                                    "src": "3711:11:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 12711,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "3711:20:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 12715,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3711:39:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 12716,
                              "nodeType": "ExpressionStatement",
                              "src": "3711:39:32"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 12720,
                                    "name": "myFeeWei",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12488,
                                    "src": "3786:8:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 12717,
                                    "name": "myWallet",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12485,
                                    "src": "3768:8:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 12719,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "3768:17:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 12721,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3768:27:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 12722,
                              "nodeType": "ExpressionStatement",
                              "src": "3768:27:32"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 12725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3830:4:32",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 12695,
                        "id": 12726,
                        "nodeType": "Return",
                        "src": "3823:11:32"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_contract$_ERC20_$1559",
                      "typeString": "contract ERC20"
                    },
                    "id": 12731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 12729,
                      "name": "src",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12677,
                      "src": "3859:3:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1559",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 12730,
                      "name": "ETH_TOKEN_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8823,
                      "src": "3866:17:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1559",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "3859:24:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 12737,
                  "nodeType": "IfStatement",
                  "src": "3855:73:32",
                  "trueBody": {
                    "id": 12736,
                    "nodeType": "Block",
                    "src": "3885:43:32",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 12734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 12732,
                            "name": "callValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12697,
                            "src": "3899:9:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 12733,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12679,
                            "src": "3911:6:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3899:18:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 12735,
                        "nodeType": "ExpressionStatement",
                        "src": "3899:18:32"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 12744,
                            "name": "src",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12677,
                            "src": "4057:3:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$1559",
                              "typeString": "contract ERC20"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 12745,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12679,
                            "src": "4062:6:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 12746,
                            "name": "dest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12681,
                            "src": "4070:4:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$1559",
                              "typeString": "contract ERC20"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 12747,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29996,
                            "src": "4076:4:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MaliciousKyberNetwork_$12794",
                              "typeString": "contract MaliciousKyberNetwork"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 12748,
                            "name": "conversionRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12689,
                            "src": "4082:14:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 12749,
                            "name": "validate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12691,
                            "src": "4098:8:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$1559",
                              "typeString": "contract ERC20"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_contract$_ERC20_$1559",
                              "typeString": "contract ERC20"
                            },
                            {
                              "typeIdentifier": "t_contract$_MaliciousKyberNetwork_$12794",
                              "typeString": "contract MaliciousKyberNetwork"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 12742,
                              "name": "callValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12697,
                              "src": "4046:9:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 12739,
                                "name": "reserve",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12687,
                                "src": "4026:7:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_KyberReserveInterface_$6543",
                                  "typeString": "contract KyberReserveInterface"
                                }
                              },
                              "id": 12740,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "trade",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6529,
                              "src": "4026:13:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_contract$_ERC20_$1559_$_t_uint256_$_t_contract$_ERC20_$1559_$_t_address_$_t_uint256_$_t_bool_$returns$_t_bool_$",
                                "typeString": "function (contract ERC20,uint256,contract ERC20,address,uint256,bool) payable external returns (bool)"
                              }
                            },
                            "id": 12741,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4026:19:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_setvalue_nonpayable$_t_uint256_$returns$_t_function_external_payable$_t_contract$_ERC20_$1559_$_t_uint256_$_t_contract$_ERC20_$1559_$_t_address_$_t_uint256_$_t_bool_$returns$_t_bool_$value_$",
                              "typeString": "function (uint256) returns (function (contract ERC20,uint256,contract ERC20,address,uint256,bool) payable external returns (bool))"
                            }
                          },
                          "id": 12743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4026:30:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_contract$_ERC20_$1559_$_t_uint256_$_t_contract$_ERC20_$1559_$_t_address_$_t_uint256_$_t_bool_$returns$_t_bool_$value",
                            "typeString": "function (contract ERC20,uint256,contract ERC20,address,uint256,bool) payable external returns (bool)"
                          }
                        },
                        "id": 12750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4026:81:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 12738,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29914,
                      "src": "4018:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 12751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4018:90:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12752,
                  "nodeType": "ExpressionStatement",
                  "src": "4018:90:32"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 12757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 12753,
                      "name": "destAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12683,
                      "src": "4123:11:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 12755,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29996,
                          "src": "4146:4:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MaliciousKyberNetwork_$12794",
                            "typeString": "contract MaliciousKyberNetwork"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MaliciousKyberNetwork_$12794",
                            "typeString": "contract MaliciousKyberNetwork"
                          }
                        ],
                        "id": 12754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4138:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 12756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4138:13:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4123:28:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 12789,
                  "nodeType": "IfStatement",
                  "src": "4119:413:32",
                  "trueBody": {
                    "id": 12788,
                    "nodeType": "Block",
                    "src": "4153:379:32",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_contract$_ERC20_$1559",
                            "typeString": "contract ERC20"
                          },
                          "id": 12760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 12758,
                            "name": "dest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12681,
                            "src": "4264:4:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$1559",
                              "typeString": "contract ERC20"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 12759,
                            "name": "ETH_TOKEN_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8823,
                            "src": "4272:17:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$1559",
                              "typeString": "contract ERC20"
                            }
                          },
                          "src": "4264:25:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 12786,
                          "nodeType": "Block",
                          "src": "4370:152:32",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 12771,
                                        "name": "destAddress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 12683,
                                        "src": "4410:11:32",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "argumentTypes": null,
                                        "components": [
                                          {
                                            "argumentTypes": null,
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 12774,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "argumentTypes": null,
                                              "id": 12772,
                                              "name": "expectedDestAmount",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 12685,
                                              "src": "4424:18:32",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "-",
                                            "rightExpression": {
                                              "argumentTypes": null,
                                              "id": 12773,
                                              "name": "myFeeWei",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 12488,
                                              "src": "4445:8:32",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "4424:29:32",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 12775,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "4423:31:32",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 12769,
                                        "name": "dest",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 12681,
                                        "src": "4396:4:32",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ERC20_$1559",
                                          "typeString": "contract ERC20"
                                        }
                                      },
                                      "id": 12770,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "transfer",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1516,
                                      "src": "4396:13:32",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                        "typeString": "function (address,uint256) external returns (bool)"
                                      }
                                    },
                                    "id": 12776,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4396:59:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 12768,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 29914,
                                  "src": "4388:7:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                    "typeString": "function (bool) pure"
                                  }
                                },
                                "id": 12777,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4388:68:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 12778,
                              "nodeType": "ExpressionStatement",
                              "src": "4388:68:32"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 12782,
                                    "name": "myWallet",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12485,
                                    "src": "4488:8:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 12783,
                                    "name": "myFeeWei",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12488,
                                    "src": "4498:8:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 12779,
                                    "name": "dest",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12681,
                                    "src": "4474:4:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20_$1559",
                                      "typeString": "contract ERC20"
                                    }
                                  },
                                  "id": 12781,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1516,
                                  "src": "4474:13:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 12784,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4474:33:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 12785,
                              "nodeType": "ExpressionStatement",
                              "src": "4474:33:32"
                            }
                          ]
                        },
                        "id": 12787,
                        "nodeType": "IfStatement",
                        "src": "4260:262:32",
                        "trueBody": {
                          "id": 12767,
                          "nodeType": "Block",
                          "src": "4291:73:32",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 12764,
                                    "name": "expectedDestAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12685,
                                    "src": "4330:18:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 12761,
                                    "name": "destAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12683,
                                    "src": "4309:11:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 12763,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "4309:20:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 12765,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4309:40:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 12766,
                              "nodeType": "ExpressionStatement",
                              "src": "4309:40:32"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 12790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4549:4:32",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 12695,
                  "id": 12791,
                  "nodeType": "Return",
                  "src": "4542:11:32"
                }
              ]
            },
            "id": 12793,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "doReserveTrade",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12692,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12677,
                  "name": "src",
                  "nodeType": "VariableDeclaration",
                  "scope": 12793,
                  "src": "3258:9:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$1559",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 12676,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1559,
                    "src": "3258:5:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1559",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12679,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 12793,
                  "src": "3277:11:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12678,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3277:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12681,
                  "name": "dest",
                  "nodeType": "VariableDeclaration",
                  "scope": 12793,
                  "src": "3298:10:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$1559",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 12680,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1559,
                    "src": "3298:5:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1559",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12683,
                  "name": "destAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 12793,
                  "src": "3318:19:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12682,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3318:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12685,
                  "name": "expectedDestAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 12793,
                  "src": "3347:23:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12684,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3347:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12687,
                  "name": "reserve",
                  "nodeType": "VariableDeclaration",
                  "scope": 12793,
                  "src": "3380:29:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_KyberReserveInterface_$6543",
                    "typeString": "contract KyberReserveInterface"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 12686,
                    "name": "KyberReserveInterface",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6543,
                    "src": "3380:21:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_KyberReserveInterface_$6543",
                      "typeString": "contract KyberReserveInterface"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12689,
                  "name": "conversionRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 12793,
                  "src": "3419:19:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12688,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3419:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12691,
                  "name": "validate",
                  "nodeType": "VariableDeclaration",
                  "scope": 12793,
                  "src": "3448:13:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12690,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3448:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3248:219:32"
            },
            "payable": false,
            "returnParameters": {
              "id": 12695,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12694,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12793,
                  "src": "3501:4:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12693,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3501:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3500:6:32"
            },
            "scope": 12794,
            "src": "3225:1335:32",
            "stateMutability": "nonpayable",
            "superFunction": 4943,
            "visibility": "internal"
          }
        ],
        "scope": 12795,
        "src": "260:4302:32"
      }
    ],
    "src": "0:4563:32"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.18+commit.9cf6e910.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.6",
  "updatedAt": "2019-05-18T17:14:13.134Z",
  "devdoc": {
    "methods": {
      "addReserve(address,bool)": {
        "details": "add or deletes a reserve to/from the network.",
        "params": {
          "isPermissionless": "is the new reserve from permissionless type.",
          "reserve": "The reserve address."
        }
      },
      "claimAdmin()": {
        "details": "Allows the pendingAdmin address to finalize the change admin process."
      },
      "findBestRate(address,address,uint256)": {
        "details": "best conversion rate for a pair of tokens, if number of reserves have small differences. randomize",
        "params": {
          "dest": "Destination token",
          "src": "Src token"
        },
        "return": "obsolete - used to return best reserve index. not relevant anymore for this API."
      },
      "getBalance(address,address)": {
        "details": "get the balance of a user.",
        "params": {
          "token": "The token type"
        },
        "return": "The balance"
      },
      "getNumReserves()": {
        "details": "returns number of reserves",
        "return": "number of reserves"
      },
      "getReserves()": {
        "details": "get an array of all reserves",
        "return": "An array of all reserves"
      },
      "listPairForReserve(address,address,bool,bool,bool)": {
        "details": "allow or prevent a specific reserve to trade a pair of tokens",
        "params": {
          "add": "If true then list this pair, otherwise unlist it.",
          "ethToToken": "will it support ether to token trade",
          "reserve": "The reserve address.",
          "token": "token address",
          "tokenToEth": "will it support token to ether trade"
        }
      },
      "removeReserve(address,uint256)": {
        "details": "removes a reserve from Kyber network.",
        "params": {
          "index": "in reserve array.",
          "reserve": "The reserve address."
        }
      },
      "setWhiteList(address)": {
        "params": {
          "whiteList": "can be empty"
        }
      },
      "transferAdmin(address)": {
        "details": "Allows the current admin to set the pendingAdmin address.",
        "params": {
          "newAdmin": "The address to transfer ownership to."
        }
      },
      "transferAdminQuickly(address)": {
        "details": "Allows the current admin to set the admin in one tx. Useful initial deployment.",
        "params": {
          "newAdmin": "The address to transfer ownership to."
        }
      },
      "withdrawEther(uint256,address)": {
        "details": "Withdraw Ethers"
      },
      "withdrawToken(address,uint256,address)": {
        "details": "Withdraw all ERC20 compatible tokens",
        "params": {
          "token": "ERC20 The address of the token contract"
        }
      }
    },
    "title": "Kyber Network main contract, takes some fee and reports actual dest amount minus Fees."
  },
  "userdoc": {
    "methods": {
      "addReserve(address,bool)": {
        "notice": "can be called only by operator"
      },
      "findBestRate(address,address,uint256)": {
        "notice": "use token address ETH_TOKEN_ADDRESS for ether"
      },
      "getReserves()": {
        "notice": "should be called off chain"
      },
      "listPairForReserve(address,address,bool,bool,bool)": {
        "notice": "can be called only by operator"
      },
      "removeReserve(address,uint256)": {
        "notice": "can be called only by operator"
      }
    }
  }
}