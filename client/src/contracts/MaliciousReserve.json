{
  "contractName": "MaliciousReserve",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "enableTrade",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "numRecursive",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "alerter",
          "type": "address"
        }
      ],
      "name": "removeAlerter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "scammer",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "token",
          "type": "address"
        },
        {
          "name": "wallet",
          "type": "address"
        }
      ],
      "name": "setTokenWallet",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "pendingAdmin",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOperators",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "scamToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "token",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        },
        {
          "name": "sendTo",
          "type": "address"
        }
      ],
      "name": "withdrawToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newAlerter",
          "type": "address"
        }
      ],
      "name": "addAlerter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "sanityRatesContract",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "token",
          "type": "address"
        },
        {
          "name": "addr",
          "type": "address"
        },
        {
          "name": "approve",
          "type": "bool"
        }
      ],
      "name": "approveWithdrawAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "token",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        },
        {
          "name": "destination",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "disableTrade",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "transferAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "claimAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "transferAdminQuickly",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAlerters",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "src",
          "type": "address"
        },
        {
          "name": "dest",
          "type": "address"
        },
        {
          "name": "srcQty",
          "type": "uint256"
        },
        {
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getConversionRate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOperator",
          "type": "address"
        }
      ],
      "name": "addOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "src",
          "type": "address"
        },
        {
          "name": "dest",
          "type": "address"
        },
        {
          "name": "dstQty",
          "type": "uint256"
        },
        {
          "name": "rate",
          "type": "uint256"
        }
      ],
      "name": "getSrcQty",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenWallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "removeOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_kyberNetwork",
          "type": "address"
        },
        {
          "name": "_conversionRates",
          "type": "address"
        },
        {
          "name": "_sanityRates",
          "type": "address"
        }
      ],
      "name": "setContracts",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "kyberNetwork",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "amount",
          "type": "uint256"
        },
        {
          "name": "sendTo",
          "type": "address"
        }
      ],
      "name": "withdrawEther",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "conversionRatesContract",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tradeEnabled",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "approvedWithdrawAddresses",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "src",
          "type": "address"
        },
        {
          "name": "dest",
          "type": "address"
        },
        {
          "name": "srcQty",
          "type": "uint256"
        },
        {
          "name": "rate",
          "type": "uint256"
        }
      ],
      "name": "getDestQty",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_kyberNetwork",
          "type": "address"
        },
        {
          "name": "_ratesContract",
          "type": "address"
        },
        {
          "name": "_admin",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DepositToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "origin",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "src",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "srcAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "destToken",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "destAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "destAddress",
          "type": "address"
        }
      ],
      "name": "TradeExecute",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "enable",
          "type": "bool"
        }
      ],
      "name": "TradeEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approve",
          "type": "bool"
        }
      ],
      "name": "WithdrawAddressApproved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "wallet",
          "type": "address"
        }
      ],
      "name": "NewTokenWallet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "destination",
          "type": "address"
        }
      ],
      "name": "WithdrawFunds",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "network",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "rate",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "sanity",
          "type": "address"
        }
      ],
      "name": "SetContractAddresses",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "sendTo",
          "type": "address"
        }
      ],
      "name": "TokenWithdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "sendTo",
          "type": "address"
        }
      ],
      "name": "EtherWithdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "pendingAdmin",
          "type": "address"
        }
      ],
      "name": "TransferAdminPending",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "previousAdmin",
          "type": "address"
        }
      ],
      "name": "AdminClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newAlerter",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "isAdd",
          "type": "bool"
        }
      ],
      "name": "AlerterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newOperator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "isAdd",
          "type": "bool"
        }
      ],
      "name": "OperatorAdded",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "srcToken",
          "type": "address"
        },
        {
          "name": "srcAmount",
          "type": "uint256"
        },
        {
          "name": "destToken",
          "type": "address"
        },
        {
          "name": "destAddress",
          "type": "address"
        },
        {
          "name": "conversionRate",
          "type": "uint256"
        },
        {
          "name": "validate",
          "type": "bool"
        }
      ],
      "name": "trade",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_proxy",
          "type": "address"
        }
      ],
      "name": "setKyberProxy",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "doTrade",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_scammer",
          "type": "address"
        }
      ],
      "name": "setDestAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "setDestToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "num",
          "type": "uint256"
        }
      ],
      "name": "setNumRecursive",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.18+commit.9cf6e910\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"enableTrade\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numRecursive\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"alerter\",\"type\":\"address\"}],\"name\":\"removeAlerter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"scammer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"setTokenWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setDestToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pendingAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOperators\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"scamToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"sendTo\",\"type\":\"address\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newAlerter\",\"type\":\"address\"}],\"name\":\"addAlerter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sanityRatesContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"approve\",\"type\":\"bool\"}],\"name\":\"approveWithdrawAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"num\",\"type\":\"uint256\"}],\"name\":\"setNumRecursive\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"disableTrade\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"srcToken\",\"type\":\"address\"},{\"name\":\"srcAmount\",\"type\":\"uint256\"},{\"name\":\"destToken\",\"type\":\"address\"},{\"name\":\"destAddress\",\"type\":\"address\"},{\"name\":\"conversionRate\",\"type\":\"uint256\"},{\"name\":\"validate\",\"type\":\"bool\"}],\"name\":\"trade\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"transferAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claimAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"transferAdminQuickly\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAlerters\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dest\",\"type\":\"address\"},{\"name\":\"srcQty\",\"type\":\"uint256\"},{\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getConversionRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOperator\",\"type\":\"address\"}],\"name\":\"addOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"doTrade\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_scammer\",\"type\":\"address\"}],\"name\":\"setDestAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dest\",\"type\":\"address\"},{\"name\":\"dstQty\",\"type\":\"uint256\"},{\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"getSrcQty\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"removeOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_kyberNetwork\",\"type\":\"address\"},{\"name\":\"_conversionRates\",\"type\":\"address\"},{\"name\":\"_sanityRates\",\"type\":\"address\"}],\"name\":\"setContracts\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"kyberNetwork\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_proxy\",\"type\":\"address\"}],\"name\":\"setKyberProxy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"sendTo\",\"type\":\"address\"}],\"name\":\"withdrawEther\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"conversionRatesContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tradeEnabled\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"approvedWithdrawAddresses\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dest\",\"type\":\"address\"},{\"name\":\"srcQty\",\"type\":\"uint256\"},{\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"getDestQty\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_kyberNetwork\",\"type\":\"address\"},{\"name\":\"_ratesContract\",\"type\":\"address\"},{\"name\":\"_admin\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DepositToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"srcAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"destToken\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"destAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"destAddress\",\"type\":\"address\"}],\"name\":\"TradeExecute\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"enable\",\"type\":\"bool\"}],\"name\":\"TradeEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approve\",\"type\":\"bool\"}],\"name\":\"WithdrawAddressApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"NewTokenWallet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"WithdrawFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"network\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"rate\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"sanity\",\"type\":\"address\"}],\"name\":\"SetContractAddresses\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"sendTo\",\"type\":\"address\"}],\"name\":\"TokenWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"sendTo\",\"type\":\"address\"}],\"name\":\"EtherWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"pendingAdmin\",\"type\":\"address\"}],\"name\":\"TransferAdminPending\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newAdmin\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"previousAdmin\",\"type\":\"address\"}],\"name\":\"AdminClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newAlerter\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"isAdd\",\"type\":\"bool\"}],\"name\":\"AlerterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newOperator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"isAdd\",\"type\":\"bool\"}],\"name\":\"OperatorAdded\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"claimAdmin()\":{\"details\":\"Allows the pendingAdmin address to finalize the change admin process.\"},\"transferAdmin(address)\":{\"details\":\"Allows the current admin to set the pendingAdmin address.\",\"params\":{\"newAdmin\":\"The address to transfer ownership to.\"}},\"transferAdminQuickly(address)\":{\"details\":\"Allows the current admin to set the admin in one tx. Useful initial deployment.\",\"params\":{\"newAdmin\":\"The address to transfer ownership to.\"}},\"withdrawEther(uint256,address)\":{\"details\":\"Withdraw Ethers\"},\"withdrawToken(address,uint256,address)\":{\"details\":\"Withdraw all ERC20 compatible tokens\",\"params\":{\"token\":\"ERC20 The address of the token contract\"}}}},\"userdoc\":{\"methods\":{\"getBalance(address)\":{\"notice\":\"///////////////////////////////////////////////////////////////////////// status functions /////////////////////////////////////////////////////// /////////////////////////////////////////////////////////////////////////\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/oscarr/Ethereum/frappe/contracts/mockContracts/MaliciousReserve.sol\":\"MaliciousReserve\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/oscarr/Ethereum/frappe/contracts/ConversionRatesInterface.sol\":{\"keccak256\":\"0x44cfb6a975fb21856f116475bac8448524f11cb7d752f661c765af6c73a5bccd\",\"urls\":[\"bzzr://55851840d280aa7ef960bf063c8cdfe5fb69cc0ab78cb49f4d08b75c78a37185\"]},\"/Users/oscarr/Ethereum/frappe/contracts/ERC20Interface.sol\":{\"keccak256\":\"0x0e7f8073e3de5997f6c36d7226923c5173b80a834a471f38f6da29d804e96ad0\",\"urls\":[\"bzzr://2ea77f174c95cf0b8383a06a383ca79cdc7296dabb2b79f56f8642abe1d83a5c\"]},\"/Users/oscarr/Ethereum/frappe/contracts/KyberNetworkProxyInterface.sol\":{\"keccak256\":\"0xa65133ac3c499230f1d7045d3fa6eb43bfcf789ae2321036a11e0e72201e3ff5\",\"urls\":[\"bzzr://dbc9b79dae5f9bb981a367056a0c6aaee5850eedcbcc01faa154c14f2f863b83\"]},\"/Users/oscarr/Ethereum/frappe/contracts/KyberReserve.sol\":{\"keccak256\":\"0x99e579f8c6f21d3bf4ad3fdfe09b5cc158e70785bb0c075402b06bd20318f7e7\",\"urls\":[\"bzzr://74239d13911f875b06ede6c67f4d7c5712cda76d34c93873107cab82dc64a35e\"]},\"/Users/oscarr/Ethereum/frappe/contracts/KyberReserveInterface.sol\":{\"keccak256\":\"0x041faf5eb976d946b0808bce14627b3206f03fe8b84a74c77b58bf3980f43824\",\"urls\":[\"bzzr://ae8f0d435de3aa95a6ceb4c57bb594152e3f9b90b9eb82a7d4244c765b50a061\"]},\"/Users/oscarr/Ethereum/frappe/contracts/PermissionGroups.sol\":{\"keccak256\":\"0xaeb966959d210ab3bbd9177d55e80ed14b7431af1bf352b8d9bd9c72003e428b\",\"urls\":[\"bzzr://d822faa41a2557051bb34e35f41cc038a4fd6fa5f6ef096c3cb2b60450e72767\"]},\"/Users/oscarr/Ethereum/frappe/contracts/SanityRatesInterface.sol\":{\"keccak256\":\"0x4c58711fc0d8cc797bae3f83c98443b764b7ea4d4acb3276bcd3f22eafa86ea6\",\"urls\":[\"bzzr://bc0cc9a4199276bc73a7fa2bb59fff25ed94829390180962d3650cb664499f1c\"]},\"/Users/oscarr/Ethereum/frappe/contracts/Utils.sol\":{\"keccak256\":\"0x32a3a9ea6af49ab06bee6244697d7f59e291664f50ab77b085f4ee5385928727\",\"urls\":[\"bzzr://dbd83a0b1c6b3fbde0e887a9c08e1f0b6e76647be2cfcc0457b23d74c9163e77\"]},\"/Users/oscarr/Ethereum/frappe/contracts/Withdrawable.sol\":{\"keccak256\":\"0x465dfa6d5f18b7290efd7336cd2cff1259fc09470d8048eba495f76853affb48\",\"urls\":[\"bzzr://87f3ee9caf33c4f9b36d19021658a422c395867e1ab560e5c7058fac523167da\"]},\"/Users/oscarr/Ethereum/frappe/contracts/mockContracts/MaliciousReserve.sol\":{\"keccak256\":\"0xcaa27281af61d8d74fc34b9928ee892943b904c9a25409d3a0227c85a1b25200\",\"urls\":[\"bzzr://8fd7df5d66ab5198fff10d933c756d49768b0982968a82d1316b1389349fad25\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6060604052600436106101d7576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806299d38614610258578063015005011461028557806301a12fd3146102ae578063066cae33146102e75780631bc7bfec1461033c5780631cd9399f1461039457806326782247146103cd57806327a099d814610422578063379b5a6d1461048c5780633ccdbb28146104e1578063408ee7fe1461054257806347e6924f1461057b578063546dc71c146105d057806357ce06a51461063357806369328dec146106565780636940030f146106cf5780636cf69811146106fc57806375829def1461079d57806377f50f97146107d65780637acc8678146107eb5780637c423f54146108245780637cd442721461088e5780639870d7fe1461090c578063a33b546e14610945578063a48566991461095a578063a7fca95314610993578063a80cbac614610a11578063ac8a584a14610a8a578063b3066d4914610ac3578063b78b842d14610b3a578063c6c3f3f914610b8f578063ce56c45414610bc8578063d5847d3314610c0a578063d621e81314610c5f578063d7b7024d14610c8c578063f851a44014610ccb578063f8b2cb4f14610d20578063fa64dffa14610d6d575b7f2d0c0a8842b9944ece1495eb61121621b5e36bd6af3bba0318c695f525aef79f73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee34604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a1005b341561026357600080fd5b61026b610deb565b604051808215151515815260200191505060405180910390f35b341561029057600080fd5b610298610ea6565b6040518082815260200191505060405180910390f35b34156102b957600080fd5b6102e5600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610eac565b005b34156102f257600080fd5b6102fa61116e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561034757600080fd5b610392600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611194565b005b341561039f57600080fd5b6103cb600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611344565b005b34156103d857600080fd5b6103e0611388565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561042d57600080fd5b6104356113ae565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561047857808201518184015260208101905061045d565b505050509050019250505060405180910390f35b341561049757600080fd5b61049f611442565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156104ec57600080fd5b610540600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611468565b005b341561054d57600080fd5b610579600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611638565b005b341561058657600080fd5b61058e61182e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156105db57600080fd5b610631600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919080351515906020019091905050611854565b005b341561063e57600080fd5b6106546004808035906020019091905050611c76565b005b341561066157600080fd5b6106b5600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611c80565b604051808215151515815260200191505060405180910390f35b34156106da57600080fd5b6106e261203d565b604051808215151515815260200191505060405180910390f35b610783600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803515159060200190919050506120f5565b604051808215151515815260200191505060405180910390f35b34156107a857600080fd5b6107d4600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612208565b005b34156107e157600080fd5b6107e9612368565b005b34156107f657600080fd5b610822600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612544565b005b341561082f57600080fd5b610837612739565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561087a57808201518184015260208101905061085f565b505050509050019250505060405180910390f35b341561089957600080fd5b6108f6600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919080359060200190919050506127cd565b6040518082815260200191505060405180910390f35b341561091757600080fd5b610943600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612b5d565b005b341561095057600080fd5b610958612d53565b005b341561096557600080fd5b610991600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050612fd2565b005b341561099e57600080fd5b6109fb600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091908035906020019091905050613052565b6040518082815260200191505060405180910390f35b3415610a1c57600080fd5b610a48600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050613085565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3415610a9557600080fd5b610ac1600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506130b8565b005b3415610ace57600080fd5b610b38600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061337d565b005b3415610b4557600080fd5b610b4d613649565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3415610b9a57600080fd5b610bc6600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061366f565b005b3415610bd357600080fd5b610c08600480803590602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506136ef565b005b3415610c1557600080fd5b610c1d6137f9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3415610c6a57600080fd5b610c7261381f565b604051808215151515815260200191505060405180910390f35b3415610c9757600080fd5b610cb1600480803560001916906020019091905050613832565b604051808215151515815260200191505060405180910390f35b3415610cd657600080fd5b610cde613852565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3415610d2b57600080fd5b610d57600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050613877565b6040518082815260200191505060405180910390f35b3415610d7857600080fd5b610dd5600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091908035906020019091905050613b14565b6040518082815260200191505060405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e4857600080fd5b6001600760146101000a81548160ff0219169083151502179055507f7d7f00509dd73ac4449f698ae75ccc797895eff5fa9d446d3df387598a26e7356001604051808215151515815260200191505060405180910390a16001905090565b600f5481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610f0957600080fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515610f6157600080fd5b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600090505b60058054905081101561116a578173ffffffffffffffffffffffffffffffffffffffff16600582815481101515610ff157fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561115f57600560016005805490500381548110151561105057fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660058281548110151561108b57fe5b906000526020600020900160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060058054809190600190036110e991906145f6565b507f5611bf3e417d124f97bf2c788843ea8bb502b66079fbee02158ef30b172cb762826000604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001821515151581526020019250505060405180910390a161116a565b806001019050610fbe565b5050565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156111ef57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561122b57600080fd5b80600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f81995c7b922889ac0a81e41866106d4046268ea3a9abaae9f9e080a6ce36ee7d8282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b80600e60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6113b6614622565b600480548060200260200160405190810160405280929190818152602001828054801561143857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116113ee575b5050505050905090565b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156114c357600080fd5b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82846000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561156e57600080fd5b6102c65a03f1151561157f57600080fd5b50505060405180519050151561159457600080fd5b7f72cb8a894ddb372ceec3d2a7648d86f17d5a15caae0e986c53109b8a9a9385e6838383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a1505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561169357600080fd5b600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515156116ec57600080fd5b603260058054905010151561170057600080fd5b7f5611bf3e417d124f97bf2c788843ea8bb502b66079fbee02158ef30b172cb762816001604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001821515151581526020019250505060405180910390a16001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600580548060010182816117dc9190614636565b9160005260206000209001600083909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156118af57600080fd5b80600a60008585604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014019250505060405180910390206000191660001916815260200190815260200160002060006101000a81548160ff0219169083151502179055507fd5fd5351efae1f4bb760079da9f0ff9589e2c3e216337ca9d39cdff573b245c4838383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182151515158152602001935050505060405180910390a1611a2183613b47565b600073ffffffffffffffffffffffffffffffffffffffff16600b60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148015611afc575073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b15611c715730600b60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff1663095ea7b3307f80000000000000000000000000000000000000000000000000000000000000006000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1515611c4a57600080fd5b6102c65a03f11515611c5b57600080fd5b505050604051805190501515611c7057600080fd5b5b505050565b80600f8190555050565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515611cda57600080fd5b600a60008584604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014019250505060405180910390206000191660001916815260200190815260200160002060009054906101000a900460ff161515611da157600080fd5b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415611e2e578173ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051600060405180830381858888f193505050501515611e2957600080fd5b611f93565b8373ffffffffffffffffffffffffffffffffffffffff166323b872dd600b60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684866000604051602001526040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1515611f6c57600080fd5b6102c65a03f11515611f7d57600080fd5b505050604051805190501515611f9257600080fd5b5b7fb67719fc33c1f17d31bf3a698690d62066b1e0bae28fcd3c56cf2c015c2863d6848484604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a1600190509392505050565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561209757600080fd5b6000600760146101000a81548160ff0219169083151502179055507f7d7f00509dd73ac4449f698ae75ccc797895eff5fa9d446d3df387598a26e7356000604051808215151515815260200191505060405180910390a16001905090565b6000600760149054906101000a900460ff16151561211257600080fd5b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561216e57600080fd5b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161415156121bc57600080fd5b6000600f5411156121e157600f6000815460019003919050819055506121e0612d53565b5b6121ef878787878787613ca7565b15156121fa57600080fd5b600190509695505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561226357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561229f57600080fd5b7f3b81caf78fa51ecbc8acb482fd7012a277b428d9b80f9d156e8a54107496cc40600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a180600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156123c457600080fd5b7f65da1cfc2c2e81576ad96afb24a581f8e109b7a403b35cbd3243a1c99efdb9ed600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561259f57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156125db57600080fd5b7f3b81caf78fa51ecbc8acb482fd7012a277b428d9b80f9d156e8a54107496cc4081604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a17f65da1cfc2c2e81576ad96afb24a581f8e109b7a403b35cbd3243a1c99efdb9ed816000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b612741614622565b60058054806020026020016040519081016040528092919081815260200182805480156127c357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612779575b5050505050905090565b600080600080600080600760149054906101000a900460ff1615156127f55760009550612b50565b8973ffffffffffffffffffffffffffffffffffffffff1673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff16141561284957600193508894506128a7565b8873ffffffffffffffffffffffffffffffffffffffff1673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff16141561289d57600093508994506128a6565b60009550612b50565b5b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b8e9c22e8689878c6000604051602001526040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183151515158152602001828152602001945050505050602060405180830381600087803b151561298857600080fd5b6102c65a03f1151561299957600080fd5b5050506040518051905092506129b18a8a8a86613b14565b9150816129bd8a613877565b10156129cc5760009550612b50565b600073ffffffffffffffffffffffffffffffffffffffff16600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515612b4c57600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a58092b78b8b6000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600087803b1515612b1d57600080fd5b6102c65a03f11515612b2e57600080fd5b50505060405180519050905080831115612b4b5760009550612b50565b5b8295505b5050505050949350505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612bb857600080fd5b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151515612c1157600080fd5b6032600480549050101515612c2557600080fd5b7f091a7a4b85135fdd7e8dbc18b12fabe5cc191ea867aa3c2e1a24a102af61d58b816001604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001821515151581526020019250505060405180910390a16001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060048054806001018281612d019190614636565b9160005260206000209001600083909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000612d5d614662565b6000610155925073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee9050600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166329589f61848386600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff167f80000000000000000000000000000000000000000000000000000000000000006000808b6000604051602001526040518a63ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018881526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612f5f578082015181840152602081019050612f44565b50505050905090810190601f168015612f8c5780820380516001836020036101000a031916815260200191505b5099505050505050505050506020604051808303818588803b1515612fb057600080fd5b6125ee5a03f11515612fc157600080fd5b505050506040518051905050505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561300e57600080fd5b80600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080600061306086614353565b915061306b87614353565b90506130798582848761448a565b92505050949350505050565b600b6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561311557600080fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561316d57600080fd5b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600090505b600480549050811015613379578173ffffffffffffffffffffffffffffffffffffffff166004828154811015156131fd57fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561336e57600460016004805490500381548110151561325c57fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660048281548110151561329757fe5b906000526020600020900160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016004818180549050039150816132f891906145f6565b507f091a7a4b85135fdd7e8dbc18b12fabe5cc191ea867aa3c2e1a24a102af61d58b826000604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001821515151581526020019250505060405180910390a1613379565b8060010190506131ca565b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156133d857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561341457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561345057600080fd5b82600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f7a85322644a4462d8ff5482d2a841a4d231f8cfb3c9f4a50f66f8b2bd568c31c600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a1505050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156136ab57600080fd5b80600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561374a57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050151561378a57600080fd5b7fec47e7ed86c86774d1a72c19f35c639911393fe7c1a34031fdbd260890da90de8282604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760149054906101000a900460ff1681565b600a6020528060005260406000206000915054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614156138e4573073ffffffffffffffffffffffffffffffffffffffff16319350613b0c565b600b60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1692508473ffffffffffffffffffffffffffffffffffffffff166370a08231846000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15156139e957600080fd5b6102c65a03f115156139fa57600080fd5b5050506040518051905091508473ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e84306000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600087803b1515613add57600080fd5b6102c65a03f11515613aee57600080fd5b505050604051805190509050808210613b075780613b09565b815b93505b505050919050565b6000806000613b2286614353565b9150613b2d87614353565b9050613b3b85828487614544565b92505050949350505050565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415613bd9576012600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550613ca4565b8073ffffffffffffffffffffffffffffffffffffffff1663313ce5676000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1515613c4557600080fd5b6102c65a03f11515613c5657600080fd5b50505060405180519050600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b50565b6000806000808415613d2e57600086111515613cc257600080fd5b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff161415613d1d578834141515613d1857600080fd5b613d2d565b600034141515613d2c57600080fd5b5b5b613d3a8a898b89613b14565b9250600083111515613d4b57600080fd5b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff161415613d9e57829050879150613dc7565b887fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0290508991505b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c6fd210383836000436040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848152602001838152602001828152602001945050505050600060405180830381600087803b1515613e9c57600080fd5b6102c65a03f11515613ead57600080fd5b50505073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff1614151561405e578973ffffffffffffffffffffffffffffffffffffffff166323b872dd33600b60008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168c6000604051602001526040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b151561403757600080fd5b6102c65a03f1151561404857600080fd5b50505060405180519050151561405d57600080fd5b5b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614156140eb578673ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051600060405180830381858888f1935050505015156140e657600080fd5b614250565b8773ffffffffffffffffffffffffffffffffffffffff166323b872dd600b60008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1689866000604051602001526040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b151561422957600080fd5b6102c65a03f1151561423a57600080fd5b50505060405180519050151561424f57600080fd5b5b3373ffffffffffffffffffffffffffffffffffffffff167fea9415385bae08fe9f6dc457b02577166790cde83bb18cc340aac6cb81b824de8b8b8b878c604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019550505050505060405180910390a2600193505050509695505050505050565b60008073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156143a75760129150614484565b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811415614480578273ffffffffffffffffffffffffffffffffffffffff1663313ce5676000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561445e57600080fd5b6102c65a03f1151561446f57600080fd5b505050604051805190509150614484565b8091505b50919050565b60008060006b204fce5e3e2502611000000087111515156144aa57600080fd5b620f4240670de0b6b3a76400000284111515156144c657600080fd5b84861015156144fd576012858703111515156144e157600080fd5b848603600a0a87670de0b6b3a764000002029150839050614527565b60128686031115151561450f57600080fd5b86670de0b6b3a7640000029150858503600a0a840290505b8060018284010381151561453757fe5b0492505050949350505050565b60006b204fce5e3e25026110000000851115151561456157600080fd5b620f4240670de0b6b3a764000002821115151561457d57600080fd5b83831015156145bc5760128484031115151561459857600080fd5b670de0b6b3a7640000848403600a0a838702028115156145b457fe5b0490506145ee565b6012838503111515156145ce57600080fd5b828403600a0a670de0b6b3a7640000028286028115156145ea57fe5b0490505b949350505050565b81548183558181151161461d5781836000526020600020918201910161461c9190614676565b5b505050565b602060405190810160405280600081525090565b81548183558181151161465d5781836000526020600020918201910161465c9190614676565b5b505050565b602060405190810160405280600081525090565b61469891905b8082111561469457600081600090555060010161467c565b5090565b905600a165627a7a72305820ec23219262b3b7648e52c6c0f464de31abe68937d2cd2efff710dc960391777d0029",
  "sourceMap": "101:1654:34:-;;;272:1;245:28;;280:185;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;407:13;422:14;438:6;390:10:17;382:5;;:18;;;;;;;;;;;;;;;;;;798:1:12;780:20;;:6;:20;;;;772:29;;;;;;;;845:1;819:28;;:14;:28;;;;811:37;;;;;;;;891:1;866:27;;:13;:27;;;;858:36;;;;;;;;919:13;904:12;;:28;;;;;;;;;;;;;;;;;;968:14;942:23;;:40;;;;;;;;;;;;;;;;;;1000:6;992:5;;:14;;;;;;;;;;;;;;;;;;1031:4;1016:12;;:19;;;;;;;;;;;;;;;;;;653:389;;;280:185:34;;;101:1654;;;;;;",
  "deployedSourceMap": "101:1654:34:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1135:42:12;167:44:21;1167:9:12;1135:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;101:1654:34;1858:140:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;245:28:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2381:451:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;188:22:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2743:194:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1590:79:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;85:27:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;670:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;216:22:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;560:186:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:301:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;459:47:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2232:449;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:78:34;;;;;;;;;;;;;;;;;;;;;;;;;;3016:449:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2004:145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;471:579:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1074:183:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;1821:189;;;;;;;;;;;;;;1432:218;;;;;;;;;;;;;;;;;;;;;;;;;;;;772:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;5291:861:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2897:312:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;1199:254:34;;;;;;;;;;;;;;1459:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;5027:258:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;602:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3215:469:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;3551:518:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;335:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1056:137:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;851:150:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;398:55:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;368:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;512:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;59:20:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4318:438:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4762:259;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1858:140;1906:4;466:5:17;;;;;;;;;;;452:19;;:10;:19;;;444:28;;;;;;;;1937:4:12;1922:12;;:19;;;;;;;;;;;;;;;;;;1951:18;1964:4;1951:18;;;;;;;;;;;;;;;;;;;;;;1987:4;1980:11;;1858:140;:::o;245:28:34:-;;;;:::o;2381:451:17:-;2526:6;466:5;;;;;;;;;;;452:19;;:10;:19;;;444:28;;;;;;;;2457:8;:17;2466:7;2457:17;;;;;;;;;;;;;;;;;;;;;;;;;2449:26;;;;;;;;2505:5;2485:8;:17;2494:7;2485:17;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;2535:1;2526:10;;2521:305;2542:13;:20;;;;2538:1;:24;2521:305;;;2607:7;2587:27;;:13;2601:1;2587:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;:27;;;2583:233;;;2653:13;2690:1;2667:13;:20;;;;:24;2653:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;2634:13;2648:1;2634:16;;;;;;;;;;;;;;;;;;;:58;;;;;;;;;;;;;;;;;;2710:13;:22;;;;;;;;;;;;:::i;:::-;;2750:28;2763:7;2772:5;2750:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2796:5;;2583:233;2564:3;;;;;2521:305;;;2381:451;;:::o;188:22:34:-;;;;;;;;;;;;;:::o;2743:194:12:-;466:5:17;;;;;;;;;;;452:19;;:10;:19;;;444:28;;;;;;;;2849:3:12;2831:22;;:6;:22;;;;2823:31;;;;;;;;2885:6;2864:11;:18;2876:5;2864:18;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;2901:29;2916:5;2923:6;2901:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2743:194;;:::o;1590:79:34:-;1656:6;1644:9;;:18;;;;;;;;;;;;;;;;;;1590:79;:::o;85:27:17:-;;;;;;;;;;;;;:::o;670:96::-;717:9;;:::i;:::-;745:14;738:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;670:96;:::o;216:22:34:-;;;;;;;;;;;;;:::o;560:186:26:-;466:5:17;;;;;;;;;;;452:19;;:10;:19;;;444:28;;;;;;;;662:5:26;:14;;;677:6;685;662:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;654:39;;;;;;;;703:36;717:5;724:6;732;703:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;560:186;;;:::o;2074:301:17:-;466:5;;;;;;;;;;;452:19;;:10;:19;;;444:28;;;;;;;;2150:8;:20;2159:10;2150:20;;;;;;;;;;;;;;;;;;;;;;;;;2149:21;2141:30;;;;;;;;328:2;2212:13;:20;;;;:37;2204:46;;;;;;;;2261:30;2274:10;2286:4;2261:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2324:4;2301:8;:20;2310:10;2301:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;2338:13;:30;;;;;;;;;;;:::i;:::-;;;;;;;;;;2357:10;2338:30;;;;;;;;;;;;;;;;;;;;;;;2074:301;:::o;459:47:12:-;;;;;;;;;;;;;:::o;2232:449::-;466:5:17;;;;;;;;;;;452:19;;:10;:19;;;444:28;;;;;;;;2384:7:12;2332:25;:49;2368:5;2375:4;2358:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2332:49;;;;;;;;;;;;;;;;;;:59;;;;;;;;;;;;;;;;;;2401:45;2425:5;2432:4;2438:7;2401:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2457:18;2469:5;2457:11;:18::i;:::-;2520:3;2490:34;;:11;:18;2502:5;2490:18;;;;;;;;;;;;;;;;;;;;;;;;;:34;;;2489:68;;;;;167:44:21;2530:26:12;;:5;:26;;;;2489:68;2485:190;;;2594:4;2573:11;:18;2585:5;2573:18;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;2634:5;:13;;;2648:4;2654:8;2634:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2626:38;;;;;;;;2485:190;2232:449;;;:::o;1675:78:34:-;1743:3;1728:12;:18;;;;1675:78;:::o;3016:449:12:-;3109:4;538:9:17;:21;548:10;538:21;;;;;;;;;;;;;;;;;;;;;;;;;530:30;;;;;;;;3133:25:12;:56;3169:5;3176:11;3159:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3133:56;;;;;;;;;;;;;;;;;;;;;;;;;;;3125:65;;;;;;;;167:44:21;3205:26:12;;:5;:26;;;3201:184;;;3247:11;:20;;:28;3268:6;3247:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3201:184;;;3314:5;:18;;;3333:11;:18;3345:5;3333:18;;;;;;;;;;;;;;;;;;;;;;;;;3353:11;3366:6;3314:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3306:68;;;;;;;;3201:184;3395:41;3409:5;3416:6;3424:11;3395:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3454:4;3447:11;;3016:449;;;;;:::o;2004:145::-;2055:4;625:8:17;:20;634:10;625:20;;;;;;;;;;;;;;;;;;;;;;;;;617:29;;;;;;;;2086:5:12;2071:12;;:20;;;;;;;;;;;;;;;;;;2101:19;2114:5;2101:19;;;;;;;;;;;;;;;;;;;;;;2138:4;2131:11;;2004:145;:::o;471:579:34:-;693:4;721:12;;;;;;;;;;;713:21;;;;;;;;766:12;;;;;;;;;;;752:26;;:10;:26;;;744:35;;;;;;;;167:44:21;798:29:34;;:8;:29;;;790:38;;;;;;;;858:1;843:12;;:16;839:85;;;877:12;;875:14;;;;;;;;;;;;904:9;:7;:9::i;:::-;839:85;942:78;950:8;960:9;971;982:11;995:14;1011:8;942:7;:78::i;:::-;934:87;;;;;;;;1039:4;1032:11;;471:579;;;;;;;;:::o;1074:183:17:-;466:5;;;;;;;;;;;452:19;;:10;:19;;;444:28;;;;;;;;1170:1;1150:22;;:8;:22;;;;1142:31;;;;;;;;1183:34;1204:12;;;;;;;;;;;1183:34;;;;;;;;;;;;;;;;;;;;;;1242:8;1227:12;;:23;;;;;;;;;;;;;;;;;;1074:183;:::o;1821:189::-;1884:10;1868:26;;:12;;;;;;;;;;;:26;;;1860:35;;;;;;;;1905:33;1918:12;;;;;;;;;;;1932:5;;;;;;;;;;;1905:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1956:12;;;;;;;;;;;1948:5;;:20;;;;;;;;;;;;;;;;;;2001:1;1978:12;;:25;;;;;;;;;;;;;;;;;;1821:189::o;1432:218::-;466:5;;;;;;;;;;;452:19;;:10;:19;;;444:28;;;;;;;;1535:1;1515:22;;:8;:22;;;;1507:31;;;;;;;;1548:30;1569:8;1548:30;;;;;;;;;;;;;;;;;;;;;;1588:29;1601:8;1611:5;;;;;;;;;;;1588:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1635:8;1627:5;;:16;;;;;;;;;;;;;;;;;;1432:218;:::o;772:94::-;818:9;;:::i;:::-;846:13;839:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;772:94;:::o;5291:861:12:-;5392:4;5408:11;5429;5753:9;5841:12;6006:15;5456:12;;;;;;;;;;;5455:13;5451:27;;;5477:1;5470:8;;;;5451:27;5514:3;5493:24;;167:44:21;5493:24:12;;;5489:254;;;5541:4;5533:12;;5567:4;5559:12;;5489:254;;;5613:4;5592:25;;167:44:21;5592:25:12;;;5588:155;;;5641:5;5633:13;;5668:3;5660:11;;5588:155;;;5709:1;5702:8;;;;5588:155;5489:254;5765:23;;;;;;;;;;;:31;;;5797:5;5804:11;5817:5;5824:6;5765:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5753:78;;5856:35;5867:3;5872:4;5878:6;5886:4;5856:10;:35::i;:::-;5841:50;;5925:7;5906:16;5917:4;5906:10;:16::i;:::-;:26;5902:40;;;5941:1;5934:8;;;;5902:40;5988:1;5957:33;;:19;;;;;;;;;;;:33;;;;5953:171;;;6024:19;;;;;;;;;;;:33;;;6058:3;6063:4;6024:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6006:62;;6093:10;6086:4;:17;6082:31;;;6112:1;6105:8;;;;6082:31;5953:171;6141:4;6134:11;;5291:861;;;;;;;;;;;;:::o;2897:312:17:-;466:5;;;;;;;;;;;452:19;;:10;:19;;;444:28;;;;;;;;2975:9;:22;2985:11;2975:22;;;;;;;;;;;;;;;;;;;;;;;;;2974:23;2966:32;;;;;;;;328:2;3039:14;:21;;;;:38;3031:47;;;;;;;;3089:32;3103:11;3116:4;3089:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3156:4;3131:9;:22;3141:11;3131:22;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3170:14;:32;;;;;;;;;;;:::i;:::-;;;;;;;;;;3190:11;3170:32;;;;;;;;;;;;;;;;;;;;;;;2897:312;:::o;1199:254:34:-;1236:14;1266:17;;:::i;:::-;1294:14;1253:3;1236:20;;167:44:21;1294:41:34;;1345:5;;;;;;;;;;;:19;;;1371:9;1382:8;1392:9;1403;;;;;;;;;;;1414:7;;;;;;;;;;;1424:8;1435:1;1438;1441:4;1345:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1345:101:34;1199:254;;;:::o;1459:125::-;1546:1;1526:22;;:8;:22;;;;1518:31;;;;;;;;1569:8;1559:7;;:18;;;;;;;;;;;;;;;;;;1459:125;:::o;5027:258:12:-;5113:4;5129:16;5175;5148:17;5160:4;5148:11;:17::i;:::-;5129:36;;5194:16;5206:3;5194:11;:16::i;:::-;5175:35;;5228:50;5239:6;5247:11;5260;5273:4;5228:10;:50::i;:::-;5221:57;;5027:258;;;;;;;;:::o;602:44::-;;;;;;;;;;;;;;;;;;;;;;:::o;3215:469:17:-;3366:6;466:5;;;;;;;;;;;452:19;;:10;:19;;;444:28;;;;;;;;3293:9;:19;3303:8;3293:19;;;;;;;;;;;;;;;;;;;;;;;;;3285:28;;;;;;;;3345:5;3323:9;:19;3333:8;3323:19;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;3375:1;3366:10;;3361:317;3382:14;:21;;;;3378:1;:25;3361:317;;;3449:8;3428:29;;:14;3443:1;3428:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;:29;;;3424:244;;;3497:14;3536:1;3512:14;:21;;;;:25;3497:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;3477:14;3492:1;3477:17;;;;;;;;;;;;;;;;;;;:61;;;;;;;;;;;;;;;;;;3581:1;3556:14;:26;;;;;;;;;;;;;;:::i;:::-;;3600:30;3614:8;3624:5;3600:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3648:5;;3424:244;3405:3;;;;;3361:317;;;3215:469;;:::o;3551:518:12:-;466:5:17;;;;;;;;;;;452:19;;:10;:19;;;444:28;;;;;;;;3784:1:12;3759:27;;:13;:27;;;;3751:36;;;;;;;;3833:1;3805:30;;:16;:30;;;;3797:39;;;;;;;;3862:13;3847:12;;:28;;;;;;;;;;;;;;;;;;3911:16;3885:23;;:42;;;;;;;;;;;;;;;;;;3959:12;3937:19;;:34;;;;;;;;;;;;;;;;;;3982:80;4003:12;;;;;;;;;;;4017:23;;;;;;;;;;;4042:19;;;;;;;;;;;3982:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3551:518;;;:::o;335:27::-;;;;;;;;;;;;;:::o;1056:137:34:-;1158:1;1140:20;;:6;:20;;;;1132:29;;;;;;;;1180:6;1172:5;;:14;;;;;;;;;;;;;;;;;;1056:137;:::o;851:150:26:-;466:5:17;;;;;;;;;;;452:19;;:10;:19;;;444:28;;;;;;;;932:6:26;:15;;:23;948:6;932:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;965:29;979:6;987;965:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;851:150;;:::o;398:55:12:-;;;;;;;;;;;;;:::o;368:24::-;;;;;;;;;;;;;:::o;512:55::-;;;;;;;;;;;;;;;;;;;;;;:::o;59:20:17:-;;;;;;;;;;;;;:::o;4318:438:12:-;4371:4;4479:14;4528:20;4588:22;167:44:21;4391:26:12;;:5;:26;;;4387:363;;;4438:4;:12;;;4431:19;;;;4387:363;4496:11;:18;4508:5;4496:18;;;;;;;;;;;;;;;;;;;;;;;;;4479:35;;4551:5;:15;;;4567:6;4551:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4528:46;;4613:5;:15;;;4629:6;4637:4;4613:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4588:54;;4683:17;4665:15;:35;4664:75;;4722:17;4664:75;;;4704:15;4664:75;4657:82;;4318:438;;;;;;;:::o;4762:259::-;4849:4;4865:16;4911;4884:17;4896:4;4884:11;:17::i;:::-;4865:36;;4930:16;4942:3;4930:11;:16::i;:::-;4911:35;;4964:50;4975:6;4983:11;4996;5009:4;4964:10;:50::i;:::-;4957:57;;4762:259;;;;;;;;:::o;561:171:21:-;167:44;618:26;;:5;:26;;;614:111;;;506:2;646:8;:15;655:5;646:15;;;;;;;;;;;;;;;:30;;;;614:111;;;709:5;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;691:8;:15;700:5;691:15;;;;;;;;;;;;;;;:34;;;;614:111;561:171;:::o;6485:1637:12:-;6695:4;7007:15;7179:11;7200:15;6781:8;6777:220;;;6830:1;6813:14;:18;6805:27;;;;;;;;167:44:21;6850:29:12;;:8;:29;;;6846:140;;;6918:9;6905;:22;6897:31;;;;;;;;6846:140;;;6984:1;6971:9;:14;6963:23;;;;;;;;6846:140;6777:220;7025:58;7036:8;7046:9;7057;7068:14;7025:10;:58::i;:::-;7007:76;;7138:1;7125:10;:14;7117:23;;;;;;;;167:44:21;7229:29:12;;:8;:29;;;7225:214;;;7292:10;7274:29;;7325:9;7317:17;;7225:214;;;7388:9;7379:2;:19;7365:33;;7420:8;7412:16;;7225:214;7449:23;;;;;;;;;;;:39;;;7502:5;7521:11;7546:1;7561:12;7449:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;167:44:21;7628:29:12;;:8;:29;;;;7624:136;;;7681:8;:21;;;7703:10;7715:11;:21;7727:8;7715:21;;;;;;;;;;;;;;;;;;;;;;;;;7738:9;7681:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7673:76;;;;;;;;7624:136;167:44:21;7802:30:12;;:9;:30;;;7798:204;;;7848:11;:20;;:32;7869:10;7848:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7798:204;;;7919:9;:22;;;7942:11;:22;7954:9;7942:22;;;;;;;;;;;;;;;;;;;;;;;;;7966:11;7979:10;7919:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7911:80;;;;;;;;7798:204;8025:10;8012:81;;;8037:8;8047:9;8058;8069:10;8081:11;8012:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8111:4;8104:11;;6485:1637;;;;;;;;;;;:::o;738:470:21:-;794:4;894:18;167:44;814:26;;:5;:26;;;810:51;;;506:2;842:19;;;;810:51;915:8;:15;924:5;915:15;;;;;;;;;;;;;;;;894:36;;1144:1;1127:13;:18;1124:46;;;1154:5;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1147:23;;;;1124:46;1188:13;1181:20;;738:470;;;;;:::o;1778:844::-;1880:4;2055:14;2079:16;305:6;1904;:17;;1896:26;;;;;;;;381:5;255:6;369:17;1940:4;:16;;1932:25;;;;;;;;2124:11;2109;:26;;2105:422;;;459:2;2174:11;2160;:25;2159:43;;2151:52;;;;;;;;2271:11;2257;:25;2252:2;:31;2242:6;255;2230:18;:54;2217:68;;2313:4;2299:18;;2105:422;;;459:2;2371:11;2357;:25;2356:43;;2348:52;;;;;;;;2439:6;255;2427:18;2414:32;;2502:11;2488;:25;2483:2;:31;2475:4;:40;2460:56;;2105:422;2575:11;2570:1;2556:11;2544:9;:23;:27;2543:43;;;;;;;;2536:50;;1778:844;;;;;;;;:::o;1214:558::-;1316:4;305:6;1340;:17;;1332:26;;;;;;;;381:5;255:6;369:17;1376:4;:16;;1368:25;;;;;;;;1423:11;1408;:26;;1404:362;;;459:2;1473:11;1459;:25;1458:43;;1450:52;;;;;;;;255:6;1560:11;1546;:25;1541:2;:31;1533:4;1524:6;:13;:49;1523:63;;;;;;;;1516:70;;;;1404:362;459:2;1640:11;1626;:25;1625:43;;1617:52;;;;;;;;1741:11;1727;:25;1722:2;:31;255:6;1709:45;1700:4;1691:6;:13;1690:65;;;;;;;;1683:72;;1214:558;;;;;;;:::o;101:1654:34:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity 0.4.18;\n\n\nimport \"../KyberReserve.sol\";\nimport \"../KyberNetworkProxyInterface.sol\";\n\ncontract MaliciousReserve is KyberReserve {\n\n    KyberNetworkProxyInterface proxy;\n    address public scammer;\n    ERC20 public scamToken;\n\n    uint public numRecursive = 1;\n\n    function MaliciousReserve(address _kyberNetwork, ConversionRatesInterface _ratesContract, address _admin)\n        KyberReserve(_kyberNetwork, _ratesContract, _admin) public\n    {\n\n    }\n\n    function trade(\n        ERC20 srcToken,\n        uint srcAmount,\n        ERC20 destToken,\n        address destAddress,\n        uint conversionRate,\n        bool validate\n    )\n        public\n        payable\n        returns(bool)\n    {\n        require(tradeEnabled);\n        require(msg.sender == kyberNetwork);\n\n        require(srcToken == ETH_TOKEN_ADDRESS);\n\n        if (numRecursive > 0) {\n            --numRecursive;\n\n            doTrade();\n        }\n\n        require(doTrade(srcToken, srcAmount, destToken, destAddress, conversionRate, validate));\n\n        return true;\n    }\n\n    function setKyberProxy(KyberNetworkProxyInterface _proxy) public {\n\n        require(_proxy != address(0));\n\n        proxy = _proxy;\n    }\n\n    function doTrade () public {\n        uint callValue = 341;\n        bytes memory hint;\n\n        ERC20 srcToken = ERC20(ETH_TOKEN_ADDRESS);\n        proxy.tradeWithHint.value(callValue)(srcToken, callValue, scamToken, scammer, (2 ** 255), 0, 0, hint);\n    }\n\n    function setDestAddress(address _scammer) public {\n        require(_scammer != address(0));\n        scammer = _scammer;\n    }\n\n    function setDestToken (ERC20 _token) public {\n        scamToken = _token;\n    }\n\n    function setNumRecursive(uint num)  public {\n        numRecursive = num;\n    }\n}\n\n",
  "sourcePath": "/Users/oscarr/Ethereum/frappe/contracts/mockContracts/MaliciousReserve.sol",
  "ast": {
    "absolutePath": "/Users/oscarr/Ethereum/frappe/contracts/mockContracts/MaliciousReserve.sol",
    "exportedSymbols": {
      "MaliciousReserve": [
        13126
      ]
    },
    "id": 13127,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 12945,
        "literals": [
          "solidity",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:34"
      },
      {
        "absolutePath": "/Users/oscarr/Ethereum/frappe/contracts/KyberReserve.sol",
        "file": "../KyberReserve.sol",
        "id": 12946,
        "nodeType": "ImportDirective",
        "scope": 13127,
        "sourceUnit": 6510,
        "src": "26:29:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/oscarr/Ethereum/frappe/contracts/KyberNetworkProxyInterface.sol",
        "file": "../KyberNetworkProxyInterface.sol",
        "id": 12947,
        "nodeType": "ImportDirective",
        "scope": 13127,
        "sourceUnit": 5724,
        "src": "56:43:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 12948,
              "name": "KyberReserve",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6509,
              "src": "130:12:34",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_KyberReserve_$6509",
                "typeString": "contract KyberReserve"
              }
            },
            "id": 12949,
            "nodeType": "InheritanceSpecifier",
            "src": "130:12:34"
          }
        ],
        "contractDependencies": [
          6509,
          6543,
          8554,
          9093,
          10292
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 13126,
        "linearizedBaseContracts": [
          13126,
          6509,
          9093,
          10292,
          8554,
          6543
        ],
        "name": "MaliciousReserve",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 12951,
            "name": "proxy",
            "nodeType": "VariableDeclaration",
            "scope": 13126,
            "src": "150:32:34",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_KyberNetworkProxyInterface_$5723",
              "typeString": "contract KyberNetworkProxyInterface"
            },
            "typeName": {
              "contractScope": null,
              "id": 12950,
              "name": "KyberNetworkProxyInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5723,
              "src": "150:26:34",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_KyberNetworkProxyInterface_$5723",
                "typeString": "contract KyberNetworkProxyInterface"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 12953,
            "name": "scammer",
            "nodeType": "VariableDeclaration",
            "scope": 13126,
            "src": "188:22:34",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 12952,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "188:7:34",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 12955,
            "name": "scamToken",
            "nodeType": "VariableDeclaration",
            "scope": 13126,
            "src": "216:22:34",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$1559",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 12954,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1559,
              "src": "216:5:34",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$1559",
                "typeString": "contract ERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 12958,
            "name": "numRecursive",
            "nodeType": "VariableDeclaration",
            "scope": 13126,
            "src": "245:28:34",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 12956,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "245:4:34",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 12957,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "272:1:34",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 12972,
              "nodeType": "Block",
              "src": "457:8:34",
              "statements": []
            },
            "id": 12973,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 12967,
                    "name": "_kyberNetwork",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12960,
                    "src": "407:13:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 12968,
                    "name": "_ratesContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12962,
                    "src": "422:14:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ConversionRatesInterface_$1493",
                      "typeString": "contract ConversionRatesInterface"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 12969,
                    "name": "_admin",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12964,
                    "src": "438:6:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 12970,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 12966,
                  "name": "KyberReserve",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6509,
                  "src": "394:12:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_KyberReserve_$6509_$",
                    "typeString": "type(contract KyberReserve)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "394:51:34"
              }
            ],
            "name": "MaliciousReserve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12965,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12960,
                  "name": "_kyberNetwork",
                  "nodeType": "VariableDeclaration",
                  "scope": 12973,
                  "src": "306:21:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12959,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "306:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12962,
                  "name": "_ratesContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 12973,
                  "src": "329:39:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ConversionRatesInterface_$1493",
                    "typeString": "contract ConversionRatesInterface"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 12961,
                    "name": "ConversionRatesInterface",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1493,
                    "src": "329:24:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ConversionRatesInterface_$1493",
                      "typeString": "contract ConversionRatesInterface"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12964,
                  "name": "_admin",
                  "nodeType": "VariableDeclaration",
                  "scope": 12973,
                  "src": "370:14:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12963,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "370:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "305:80:34"
            },
            "payable": false,
            "returnParameters": {
              "id": 12971,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "457:0:34"
            },
            "scope": 13126,
            "src": "280:185:34",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13031,
              "nodeType": "Block",
              "src": "703:347:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12991,
                        "name": "tradeEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5741,
                        "src": "721:12:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 12990,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29914,
                      "src": "713:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 12992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "713:21:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12993,
                  "nodeType": "ExpressionStatement",
                  "src": "713:21:34"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 12998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 12995,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29911,
                            "src": "752:3:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 12996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "752:10:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 12997,
                          "name": "kyberNetwork",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5739,
                          "src": "766:12:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "752:26:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 12994,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29914,
                      "src": "744:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 12999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "744:35:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13000,
                  "nodeType": "ExpressionStatement",
                  "src": "744:35:34"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_contract$_ERC20_$1559",
                          "typeString": "contract ERC20"
                        },
                        "id": 13004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 13002,
                          "name": "srcToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12975,
                          "src": "798:8:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$1559",
                            "typeString": "contract ERC20"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 13003,
                          "name": "ETH_TOKEN_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8823,
                          "src": "810:17:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$1559",
                            "typeString": "contract ERC20"
                          }
                        },
                        "src": "798:29:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 13001,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29914,
                      "src": "790:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 13005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "790:38:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13006,
                  "nodeType": "ExpressionStatement",
                  "src": "790:38:34"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 13009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 13007,
                      "name": "numRecursive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12958,
                      "src": "843:12:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 13008,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "858:1:34",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "843:16:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 13017,
                  "nodeType": "IfStatement",
                  "src": "839:85:34",
                  "trueBody": {
                    "id": 13016,
                    "nodeType": "Block",
                    "src": "861:63:34",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 13011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "--",
                          "prefix": true,
                          "src": "875:14:34",
                          "subExpression": {
                            "argumentTypes": null,
                            "id": 13010,
                            "name": "numRecursive",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12958,
                            "src": "877:12:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 13012,
                        "nodeType": "ExpressionStatement",
                        "src": "875:14:34"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 13013,
                            "name": "doTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              13087,
                              6508
                            ],
                            "referencedDeclaration": 13087,
                            "src": "904:7:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 13014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "904:9:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 13015,
                        "nodeType": "ExpressionStatement",
                        "src": "904:9:34"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 13020,
                            "name": "srcToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12975,
                            "src": "950:8:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$1559",
                              "typeString": "contract ERC20"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 13021,
                            "name": "srcAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12977,
                            "src": "960:9:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 13022,
                            "name": "destToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12979,
                            "src": "971:9:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$1559",
                              "typeString": "contract ERC20"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 13023,
                            "name": "destAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12981,
                            "src": "982:11:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 13024,
                            "name": "conversionRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12983,
                            "src": "995:14:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 13025,
                            "name": "validate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12985,
                            "src": "1011:8:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$1559",
                              "typeString": "contract ERC20"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_contract$_ERC20_$1559",
                              "typeString": "contract ERC20"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 13019,
                          "name": "doTrade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            13087,
                            6508
                          ],
                          "referencedDeclaration": 6508,
                          "src": "942:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$1559_$_t_uint256_$_t_contract$_ERC20_$1559_$_t_address_$_t_uint256_$_t_bool_$returns$_t_bool_$",
                            "typeString": "function (contract ERC20,uint256,contract ERC20,address,uint256,bool) returns (bool)"
                          }
                        },
                        "id": 13026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "942:78:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 13018,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29914,
                      "src": "934:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 13027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "934:87:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13028,
                  "nodeType": "ExpressionStatement",
                  "src": "934:87:34"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 13029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1039:4:34",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 12989,
                  "id": 13030,
                  "nodeType": "Return",
                  "src": "1032:11:34"
                }
              ]
            },
            "id": 13032,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "trade",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12986,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12975,
                  "name": "srcToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 13032,
                  "src": "495:14:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$1559",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 12974,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1559,
                    "src": "495:5:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1559",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12977,
                  "name": "srcAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 13032,
                  "src": "519:14:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12976,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "519:4:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12979,
                  "name": "destToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 13032,
                  "src": "543:15:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$1559",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 12978,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1559,
                    "src": "543:5:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1559",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12981,
                  "name": "destAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 13032,
                  "src": "568:19:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12980,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "568:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12983,
                  "name": "conversionRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 13032,
                  "src": "597:19:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12982,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "597:4:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12985,
                  "name": "validate",
                  "nodeType": "VariableDeclaration",
                  "scope": 13032,
                  "src": "626:13:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12984,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "626:4:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "485:160:34"
            },
            "payable": true,
            "returnParameters": {
              "id": 12989,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12988,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 13032,
                  "src": "693:4:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12987,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "693:4:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "692:6:34"
            },
            "scope": 13126,
            "src": "471:579:34",
            "stateMutability": "payable",
            "superFunction": 5875,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13049,
              "nodeType": "Block",
              "src": "1121:72:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 13038,
                          "name": "_proxy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13034,
                          "src": "1140:6:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_KyberNetworkProxyInterface_$5723",
                            "typeString": "contract KyberNetworkProxyInterface"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 13040,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1158:1:34",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 13039,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1150:7:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 13041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1150:10:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1140:20:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 13037,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29914,
                      "src": "1132:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 13043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1132:29:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13044,
                  "nodeType": "ExpressionStatement",
                  "src": "1132:29:34"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 13045,
                      "name": "proxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12951,
                      "src": "1172:5:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_KyberNetworkProxyInterface_$5723",
                        "typeString": "contract KyberNetworkProxyInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 13046,
                      "name": "_proxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13034,
                      "src": "1180:6:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_KyberNetworkProxyInterface_$5723",
                        "typeString": "contract KyberNetworkProxyInterface"
                      }
                    },
                    "src": "1172:14:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_KyberNetworkProxyInterface_$5723",
                      "typeString": "contract KyberNetworkProxyInterface"
                    }
                  },
                  "id": 13048,
                  "nodeType": "ExpressionStatement",
                  "src": "1172:14:34"
                }
              ]
            },
            "id": 13050,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "setKyberProxy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13035,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13034,
                  "name": "_proxy",
                  "nodeType": "VariableDeclaration",
                  "scope": 13050,
                  "src": "1079:33:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_KyberNetworkProxyInterface_$5723",
                    "typeString": "contract KyberNetworkProxyInterface"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13033,
                    "name": "KyberNetworkProxyInterface",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5723,
                    "src": "1079:26:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_KyberNetworkProxyInterface_$5723",
                      "typeString": "contract KyberNetworkProxyInterface"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1078:35:34"
            },
            "payable": false,
            "returnParameters": {
              "id": 13036,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1121:0:34"
            },
            "scope": 13126,
            "src": "1056:137:34",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13086,
              "nodeType": "Block",
              "src": "1226:227:34",
              "statements": [
                {
                  "assignments": [
                    13054
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13054,
                      "name": "callValue",
                      "nodeType": "VariableDeclaration",
                      "scope": 13087,
                      "src": "1236:14:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 13053,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1236:4:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 13056,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "333431",
                    "id": 13055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1253:3:34",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_341_by_1",
                      "typeString": "int_const 341"
                    },
                    "value": "341"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1236:20:34"
                },
                {
                  "assignments": [],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13058,
                      "name": "hint",
                      "nodeType": "VariableDeclaration",
                      "scope": 13087,
                      "src": "1266:17:34",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      },
                      "typeName": {
                        "id": 13057,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1266:5:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes storage pointer"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 13059,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1266:17:34"
                },
                {
                  "assignments": [
                    13061
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13061,
                      "name": "srcToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 13087,
                      "src": "1294:14:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1559",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 13060,
                        "name": "ERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1559,
                        "src": "1294:5:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1559",
                          "typeString": "contract ERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 13065,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13063,
                        "name": "ETH_TOKEN_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8823,
                        "src": "1317:17:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1559",
                          "typeString": "contract ERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$1559",
                          "typeString": "contract ERC20"
                        }
                      ],
                      "id": 13062,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1559,
                      "src": "1311:5:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$1559_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 13064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1311:24:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1559",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1294:41:34"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13073,
                        "name": "srcToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13061,
                        "src": "1382:8:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1559",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13074,
                        "name": "callValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13054,
                        "src": "1392:9:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13075,
                        "name": "scamToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12955,
                        "src": "1403:9:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1559",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13076,
                        "name": "scammer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12953,
                        "src": "1414:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
                              "typeString": "int_const 57896044618658097711785492504343953926634992332820282019728792003956564819968"
                            },
                            "id": 13079,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 13077,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1424:1:34",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "323535",
                              "id": 13078,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1429:3:34",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_255_by_1",
                                "typeString": "int_const 255"
                              },
                              "value": "255"
                            },
                            "src": "1424:8:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
                              "typeString": "int_const 57896044618658097711785492504343953926634992332820282019728792003956564819968"
                            }
                          }
                        ],
                        "id": 13080,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1423:10:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
                          "typeString": "int_const 57896044618658097711785492504343953926634992332820282019728792003956564819968"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 13081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1435:1:34",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 13082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1438:1:34",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "id": 13083,
                        "name": "hint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13058,
                        "src": "1441:4:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$1559",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20_$1559",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
                          "typeString": "int_const 57896044618658097711785492504343953926634992332820282019728792003956564819968"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 13071,
                          "name": "callValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13054,
                          "src": "1371:9:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 13066,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12951,
                            "src": "1345:5:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_KyberNetworkProxyInterface_$5723",
                              "typeString": "contract KyberNetworkProxyInterface"
                            }
                          },
                          "id": 13069,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tradeWithHint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5722,
                          "src": "1345:19:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_contract$_ERC20_$1559_$_t_uint256_$_t_contract$_ERC20_$1559_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                            "typeString": "function (contract ERC20,uint256,contract ERC20,address,uint256,uint256,address,bytes memory) payable external returns (uint256)"
                          }
                        },
                        "id": 13070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1345:25:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_nonpayable$_t_uint256_$returns$_t_function_external_payable$_t_contract$_ERC20_$1559_$_t_uint256_$_t_contract$_ERC20_$1559_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint256_$value_$",
                          "typeString": "function (uint256) returns (function (contract ERC20,uint256,contract ERC20,address,uint256,uint256,address,bytes memory) payable external returns (uint256))"
                        }
                      },
                      "id": 13072,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1345:36:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_contract$_ERC20_$1559_$_t_uint256_$_t_contract$_ERC20_$1559_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint256_$value",
                        "typeString": "function (contract ERC20,uint256,contract ERC20,address,uint256,uint256,address,bytes memory) payable external returns (uint256)"
                      }
                    },
                    "id": 13084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1345:101:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13085,
                  "nodeType": "ExpressionStatement",
                  "src": "1345:101:34"
                }
              ]
            },
            "id": 13087,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "doTrade",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13051,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1216:2:34"
            },
            "payable": false,
            "returnParameters": {
              "id": 13052,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1226:0:34"
            },
            "scope": 13126,
            "src": "1199:254:34",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13104,
              "nodeType": "Block",
              "src": "1508:76:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 13093,
                          "name": "_scammer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13089,
                          "src": "1526:8:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 13095,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1546:1:34",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 13094,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1538:7:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 13096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1538:10:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1526:22:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 13092,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29914,
                      "src": "1518:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 13098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1518:31:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13099,
                  "nodeType": "ExpressionStatement",
                  "src": "1518:31:34"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 13100,
                      "name": "scammer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12953,
                      "src": "1559:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 13101,
                      "name": "_scammer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13089,
                      "src": "1569:8:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1559:18:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 13103,
                  "nodeType": "ExpressionStatement",
                  "src": "1559:18:34"
                }
              ]
            },
            "id": 13105,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "setDestAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13090,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13089,
                  "name": "_scammer",
                  "nodeType": "VariableDeclaration",
                  "scope": 13105,
                  "src": "1483:16:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13088,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1483:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1482:18:34"
            },
            "payable": false,
            "returnParameters": {
              "id": 13091,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1508:0:34"
            },
            "scope": 13126,
            "src": "1459:125:34",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13114,
              "nodeType": "Block",
              "src": "1634:35:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 13110,
                      "name": "scamToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12955,
                      "src": "1644:9:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1559",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 13111,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13107,
                      "src": "1656:6:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1559",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1644:18:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1559",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 13113,
                  "nodeType": "ExpressionStatement",
                  "src": "1644:18:34"
                }
              ]
            },
            "id": 13115,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "setDestToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13107,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 13115,
                  "src": "1613:12:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$1559",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13106,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1559,
                    "src": "1613:5:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1559",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1612:14:34"
            },
            "payable": false,
            "returnParameters": {
              "id": 13109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1634:0:34"
            },
            "scope": 13126,
            "src": "1590:79:34",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13124,
              "nodeType": "Block",
              "src": "1718:35:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 13120,
                      "name": "numRecursive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12958,
                      "src": "1728:12:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 13121,
                      "name": "num",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13117,
                      "src": "1743:3:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1728:18:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13123,
                  "nodeType": "ExpressionStatement",
                  "src": "1728:18:34"
                }
              ]
            },
            "id": 13125,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "setNumRecursive",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13117,
                  "name": "num",
                  "nodeType": "VariableDeclaration",
                  "scope": 13125,
                  "src": "1700:8:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13116,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1700:4:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1699:10:34"
            },
            "payable": false,
            "returnParameters": {
              "id": 13119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1718:0:34"
            },
            "scope": 13126,
            "src": "1675:78:34",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 13127,
        "src": "101:1654:34"
      }
    ],
    "src": "0:1757:34"
  },
  "legacyAST": {
    "absolutePath": "/Users/oscarr/Ethereum/frappe/contracts/mockContracts/MaliciousReserve.sol",
    "exportedSymbols": {
      "MaliciousReserve": [
        13126
      ]
    },
    "id": 13127,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 12945,
        "literals": [
          "solidity",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:34"
      },
      {
        "absolutePath": "/Users/oscarr/Ethereum/frappe/contracts/KyberReserve.sol",
        "file": "../KyberReserve.sol",
        "id": 12946,
        "nodeType": "ImportDirective",
        "scope": 13127,
        "sourceUnit": 6510,
        "src": "26:29:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/oscarr/Ethereum/frappe/contracts/KyberNetworkProxyInterface.sol",
        "file": "../KyberNetworkProxyInterface.sol",
        "id": 12947,
        "nodeType": "ImportDirective",
        "scope": 13127,
        "sourceUnit": 5724,
        "src": "56:43:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 12948,
              "name": "KyberReserve",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6509,
              "src": "130:12:34",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_KyberReserve_$6509",
                "typeString": "contract KyberReserve"
              }
            },
            "id": 12949,
            "nodeType": "InheritanceSpecifier",
            "src": "130:12:34"
          }
        ],
        "contractDependencies": [
          6509,
          6543,
          8554,
          9093,
          10292
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 13126,
        "linearizedBaseContracts": [
          13126,
          6509,
          9093,
          10292,
          8554,
          6543
        ],
        "name": "MaliciousReserve",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 12951,
            "name": "proxy",
            "nodeType": "VariableDeclaration",
            "scope": 13126,
            "src": "150:32:34",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_KyberNetworkProxyInterface_$5723",
              "typeString": "contract KyberNetworkProxyInterface"
            },
            "typeName": {
              "contractScope": null,
              "id": 12950,
              "name": "KyberNetworkProxyInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5723,
              "src": "150:26:34",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_KyberNetworkProxyInterface_$5723",
                "typeString": "contract KyberNetworkProxyInterface"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 12953,
            "name": "scammer",
            "nodeType": "VariableDeclaration",
            "scope": 13126,
            "src": "188:22:34",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 12952,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "188:7:34",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 12955,
            "name": "scamToken",
            "nodeType": "VariableDeclaration",
            "scope": 13126,
            "src": "216:22:34",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$1559",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 12954,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1559,
              "src": "216:5:34",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$1559",
                "typeString": "contract ERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 12958,
            "name": "numRecursive",
            "nodeType": "VariableDeclaration",
            "scope": 13126,
            "src": "245:28:34",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 12956,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "245:4:34",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 12957,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "272:1:34",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 12972,
              "nodeType": "Block",
              "src": "457:8:34",
              "statements": []
            },
            "id": 12973,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 12967,
                    "name": "_kyberNetwork",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12960,
                    "src": "407:13:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 12968,
                    "name": "_ratesContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12962,
                    "src": "422:14:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ConversionRatesInterface_$1493",
                      "typeString": "contract ConversionRatesInterface"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 12969,
                    "name": "_admin",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12964,
                    "src": "438:6:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 12970,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 12966,
                  "name": "KyberReserve",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6509,
                  "src": "394:12:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_KyberReserve_$6509_$",
                    "typeString": "type(contract KyberReserve)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "394:51:34"
              }
            ],
            "name": "MaliciousReserve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12965,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12960,
                  "name": "_kyberNetwork",
                  "nodeType": "VariableDeclaration",
                  "scope": 12973,
                  "src": "306:21:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12959,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "306:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12962,
                  "name": "_ratesContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 12973,
                  "src": "329:39:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ConversionRatesInterface_$1493",
                    "typeString": "contract ConversionRatesInterface"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 12961,
                    "name": "ConversionRatesInterface",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1493,
                    "src": "329:24:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ConversionRatesInterface_$1493",
                      "typeString": "contract ConversionRatesInterface"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12964,
                  "name": "_admin",
                  "nodeType": "VariableDeclaration",
                  "scope": 12973,
                  "src": "370:14:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12963,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "370:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "305:80:34"
            },
            "payable": false,
            "returnParameters": {
              "id": 12971,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "457:0:34"
            },
            "scope": 13126,
            "src": "280:185:34",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13031,
              "nodeType": "Block",
              "src": "703:347:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12991,
                        "name": "tradeEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5741,
                        "src": "721:12:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 12990,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29914,
                      "src": "713:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 12992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "713:21:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12993,
                  "nodeType": "ExpressionStatement",
                  "src": "713:21:34"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 12998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 12995,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29911,
                            "src": "752:3:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 12996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "752:10:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 12997,
                          "name": "kyberNetwork",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5739,
                          "src": "766:12:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "752:26:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 12994,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29914,
                      "src": "744:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 12999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "744:35:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13000,
                  "nodeType": "ExpressionStatement",
                  "src": "744:35:34"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_contract$_ERC20_$1559",
                          "typeString": "contract ERC20"
                        },
                        "id": 13004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 13002,
                          "name": "srcToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12975,
                          "src": "798:8:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$1559",
                            "typeString": "contract ERC20"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 13003,
                          "name": "ETH_TOKEN_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8823,
                          "src": "810:17:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$1559",
                            "typeString": "contract ERC20"
                          }
                        },
                        "src": "798:29:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 13001,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29914,
                      "src": "790:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 13005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "790:38:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13006,
                  "nodeType": "ExpressionStatement",
                  "src": "790:38:34"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 13009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 13007,
                      "name": "numRecursive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12958,
                      "src": "843:12:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 13008,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "858:1:34",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "843:16:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 13017,
                  "nodeType": "IfStatement",
                  "src": "839:85:34",
                  "trueBody": {
                    "id": 13016,
                    "nodeType": "Block",
                    "src": "861:63:34",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 13011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "--",
                          "prefix": true,
                          "src": "875:14:34",
                          "subExpression": {
                            "argumentTypes": null,
                            "id": 13010,
                            "name": "numRecursive",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12958,
                            "src": "877:12:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 13012,
                        "nodeType": "ExpressionStatement",
                        "src": "875:14:34"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 13013,
                            "name": "doTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              13087,
                              6508
                            ],
                            "referencedDeclaration": 13087,
                            "src": "904:7:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 13014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "904:9:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 13015,
                        "nodeType": "ExpressionStatement",
                        "src": "904:9:34"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 13020,
                            "name": "srcToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12975,
                            "src": "950:8:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$1559",
                              "typeString": "contract ERC20"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 13021,
                            "name": "srcAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12977,
                            "src": "960:9:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 13022,
                            "name": "destToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12979,
                            "src": "971:9:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$1559",
                              "typeString": "contract ERC20"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 13023,
                            "name": "destAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12981,
                            "src": "982:11:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 13024,
                            "name": "conversionRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12983,
                            "src": "995:14:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 13025,
                            "name": "validate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12985,
                            "src": "1011:8:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$1559",
                              "typeString": "contract ERC20"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_contract$_ERC20_$1559",
                              "typeString": "contract ERC20"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 13019,
                          "name": "doTrade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            13087,
                            6508
                          ],
                          "referencedDeclaration": 6508,
                          "src": "942:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$1559_$_t_uint256_$_t_contract$_ERC20_$1559_$_t_address_$_t_uint256_$_t_bool_$returns$_t_bool_$",
                            "typeString": "function (contract ERC20,uint256,contract ERC20,address,uint256,bool) returns (bool)"
                          }
                        },
                        "id": 13026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "942:78:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 13018,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29914,
                      "src": "934:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 13027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "934:87:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13028,
                  "nodeType": "ExpressionStatement",
                  "src": "934:87:34"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 13029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1039:4:34",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 12989,
                  "id": 13030,
                  "nodeType": "Return",
                  "src": "1032:11:34"
                }
              ]
            },
            "id": 13032,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "trade",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12986,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12975,
                  "name": "srcToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 13032,
                  "src": "495:14:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$1559",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 12974,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1559,
                    "src": "495:5:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1559",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12977,
                  "name": "srcAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 13032,
                  "src": "519:14:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12976,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "519:4:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12979,
                  "name": "destToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 13032,
                  "src": "543:15:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$1559",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 12978,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1559,
                    "src": "543:5:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1559",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12981,
                  "name": "destAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 13032,
                  "src": "568:19:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12980,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "568:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12983,
                  "name": "conversionRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 13032,
                  "src": "597:19:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12982,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "597:4:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12985,
                  "name": "validate",
                  "nodeType": "VariableDeclaration",
                  "scope": 13032,
                  "src": "626:13:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12984,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "626:4:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "485:160:34"
            },
            "payable": true,
            "returnParameters": {
              "id": 12989,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12988,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 13032,
                  "src": "693:4:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12987,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "693:4:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "692:6:34"
            },
            "scope": 13126,
            "src": "471:579:34",
            "stateMutability": "payable",
            "superFunction": 5875,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13049,
              "nodeType": "Block",
              "src": "1121:72:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 13038,
                          "name": "_proxy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13034,
                          "src": "1140:6:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_KyberNetworkProxyInterface_$5723",
                            "typeString": "contract KyberNetworkProxyInterface"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 13040,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1158:1:34",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 13039,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1150:7:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 13041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1150:10:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1140:20:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 13037,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29914,
                      "src": "1132:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 13043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1132:29:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13044,
                  "nodeType": "ExpressionStatement",
                  "src": "1132:29:34"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 13045,
                      "name": "proxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12951,
                      "src": "1172:5:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_KyberNetworkProxyInterface_$5723",
                        "typeString": "contract KyberNetworkProxyInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 13046,
                      "name": "_proxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13034,
                      "src": "1180:6:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_KyberNetworkProxyInterface_$5723",
                        "typeString": "contract KyberNetworkProxyInterface"
                      }
                    },
                    "src": "1172:14:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_KyberNetworkProxyInterface_$5723",
                      "typeString": "contract KyberNetworkProxyInterface"
                    }
                  },
                  "id": 13048,
                  "nodeType": "ExpressionStatement",
                  "src": "1172:14:34"
                }
              ]
            },
            "id": 13050,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "setKyberProxy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13035,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13034,
                  "name": "_proxy",
                  "nodeType": "VariableDeclaration",
                  "scope": 13050,
                  "src": "1079:33:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_KyberNetworkProxyInterface_$5723",
                    "typeString": "contract KyberNetworkProxyInterface"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13033,
                    "name": "KyberNetworkProxyInterface",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5723,
                    "src": "1079:26:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_KyberNetworkProxyInterface_$5723",
                      "typeString": "contract KyberNetworkProxyInterface"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1078:35:34"
            },
            "payable": false,
            "returnParameters": {
              "id": 13036,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1121:0:34"
            },
            "scope": 13126,
            "src": "1056:137:34",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13086,
              "nodeType": "Block",
              "src": "1226:227:34",
              "statements": [
                {
                  "assignments": [
                    13054
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13054,
                      "name": "callValue",
                      "nodeType": "VariableDeclaration",
                      "scope": 13087,
                      "src": "1236:14:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 13053,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1236:4:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 13056,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "333431",
                    "id": 13055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1253:3:34",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_341_by_1",
                      "typeString": "int_const 341"
                    },
                    "value": "341"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1236:20:34"
                },
                {
                  "assignments": [],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13058,
                      "name": "hint",
                      "nodeType": "VariableDeclaration",
                      "scope": 13087,
                      "src": "1266:17:34",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      },
                      "typeName": {
                        "id": 13057,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1266:5:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes storage pointer"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 13059,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1266:17:34"
                },
                {
                  "assignments": [
                    13061
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13061,
                      "name": "srcToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 13087,
                      "src": "1294:14:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1559",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 13060,
                        "name": "ERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1559,
                        "src": "1294:5:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1559",
                          "typeString": "contract ERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 13065,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13063,
                        "name": "ETH_TOKEN_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8823,
                        "src": "1317:17:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1559",
                          "typeString": "contract ERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$1559",
                          "typeString": "contract ERC20"
                        }
                      ],
                      "id": 13062,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1559,
                      "src": "1311:5:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$1559_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 13064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1311:24:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1559",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1294:41:34"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13073,
                        "name": "srcToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13061,
                        "src": "1382:8:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1559",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13074,
                        "name": "callValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13054,
                        "src": "1392:9:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13075,
                        "name": "scamToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12955,
                        "src": "1403:9:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1559",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13076,
                        "name": "scammer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12953,
                        "src": "1414:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
                              "typeString": "int_const 57896044618658097711785492504343953926634992332820282019728792003956564819968"
                            },
                            "id": 13079,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 13077,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1424:1:34",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "323535",
                              "id": 13078,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1429:3:34",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_255_by_1",
                                "typeString": "int_const 255"
                              },
                              "value": "255"
                            },
                            "src": "1424:8:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
                              "typeString": "int_const 57896044618658097711785492504343953926634992332820282019728792003956564819968"
                            }
                          }
                        ],
                        "id": 13080,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1423:10:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
                          "typeString": "int_const 57896044618658097711785492504343953926634992332820282019728792003956564819968"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 13081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1435:1:34",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 13082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1438:1:34",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "id": 13083,
                        "name": "hint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13058,
                        "src": "1441:4:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$1559",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20_$1559",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
                          "typeString": "int_const 57896044618658097711785492504343953926634992332820282019728792003956564819968"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 13071,
                          "name": "callValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13054,
                          "src": "1371:9:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 13066,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12951,
                            "src": "1345:5:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_KyberNetworkProxyInterface_$5723",
                              "typeString": "contract KyberNetworkProxyInterface"
                            }
                          },
                          "id": 13069,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tradeWithHint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5722,
                          "src": "1345:19:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_contract$_ERC20_$1559_$_t_uint256_$_t_contract$_ERC20_$1559_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                            "typeString": "function (contract ERC20,uint256,contract ERC20,address,uint256,uint256,address,bytes memory) payable external returns (uint256)"
                          }
                        },
                        "id": 13070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1345:25:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_nonpayable$_t_uint256_$returns$_t_function_external_payable$_t_contract$_ERC20_$1559_$_t_uint256_$_t_contract$_ERC20_$1559_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint256_$value_$",
                          "typeString": "function (uint256) returns (function (contract ERC20,uint256,contract ERC20,address,uint256,uint256,address,bytes memory) payable external returns (uint256))"
                        }
                      },
                      "id": 13072,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1345:36:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_contract$_ERC20_$1559_$_t_uint256_$_t_contract$_ERC20_$1559_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint256_$value",
                        "typeString": "function (contract ERC20,uint256,contract ERC20,address,uint256,uint256,address,bytes memory) payable external returns (uint256)"
                      }
                    },
                    "id": 13084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1345:101:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13085,
                  "nodeType": "ExpressionStatement",
                  "src": "1345:101:34"
                }
              ]
            },
            "id": 13087,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "doTrade",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13051,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1216:2:34"
            },
            "payable": false,
            "returnParameters": {
              "id": 13052,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1226:0:34"
            },
            "scope": 13126,
            "src": "1199:254:34",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13104,
              "nodeType": "Block",
              "src": "1508:76:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 13093,
                          "name": "_scammer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13089,
                          "src": "1526:8:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 13095,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1546:1:34",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 13094,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1538:7:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 13096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1538:10:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1526:22:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 13092,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29914,
                      "src": "1518:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 13098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1518:31:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13099,
                  "nodeType": "ExpressionStatement",
                  "src": "1518:31:34"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 13100,
                      "name": "scammer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12953,
                      "src": "1559:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 13101,
                      "name": "_scammer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13089,
                      "src": "1569:8:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1559:18:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 13103,
                  "nodeType": "ExpressionStatement",
                  "src": "1559:18:34"
                }
              ]
            },
            "id": 13105,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "setDestAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13090,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13089,
                  "name": "_scammer",
                  "nodeType": "VariableDeclaration",
                  "scope": 13105,
                  "src": "1483:16:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13088,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1483:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1482:18:34"
            },
            "payable": false,
            "returnParameters": {
              "id": 13091,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1508:0:34"
            },
            "scope": 13126,
            "src": "1459:125:34",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13114,
              "nodeType": "Block",
              "src": "1634:35:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 13110,
                      "name": "scamToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12955,
                      "src": "1644:9:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1559",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 13111,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13107,
                      "src": "1656:6:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1559",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1644:18:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1559",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 13113,
                  "nodeType": "ExpressionStatement",
                  "src": "1644:18:34"
                }
              ]
            },
            "id": 13115,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "setDestToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13107,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 13115,
                  "src": "1613:12:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$1559",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13106,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1559,
                    "src": "1613:5:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1559",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1612:14:34"
            },
            "payable": false,
            "returnParameters": {
              "id": 13109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1634:0:34"
            },
            "scope": 13126,
            "src": "1590:79:34",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13124,
              "nodeType": "Block",
              "src": "1718:35:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 13120,
                      "name": "numRecursive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12958,
                      "src": "1728:12:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 13121,
                      "name": "num",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13117,
                      "src": "1743:3:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1728:18:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13123,
                  "nodeType": "ExpressionStatement",
                  "src": "1728:18:34"
                }
              ]
            },
            "id": 13125,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "setNumRecursive",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13117,
                  "name": "num",
                  "nodeType": "VariableDeclaration",
                  "scope": 13125,
                  "src": "1700:8:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13116,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1700:4:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1699:10:34"
            },
            "payable": false,
            "returnParameters": {
              "id": 13119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1718:0:34"
            },
            "scope": 13126,
            "src": "1675:78:34",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 13127,
        "src": "101:1654:34"
      }
    ],
    "src": "0:1757:34"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.18+commit.9cf6e910.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.6",
  "updatedAt": "2019-05-18T17:14:13.173Z",
  "devdoc": {
    "methods": {
      "claimAdmin()": {
        "details": "Allows the pendingAdmin address to finalize the change admin process."
      },
      "transferAdmin(address)": {
        "details": "Allows the current admin to set the pendingAdmin address.",
        "params": {
          "newAdmin": "The address to transfer ownership to."
        }
      },
      "transferAdminQuickly(address)": {
        "details": "Allows the current admin to set the admin in one tx. Useful initial deployment.",
        "params": {
          "newAdmin": "The address to transfer ownership to."
        }
      },
      "withdrawEther(uint256,address)": {
        "details": "Withdraw Ethers"
      },
      "withdrawToken(address,uint256,address)": {
        "details": "Withdraw all ERC20 compatible tokens",
        "params": {
          "token": "ERC20 The address of the token contract"
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "getBalance(address)": {
        "notice": "///////////////////////////////////////////////////////////////////////// status functions /////////////////////////////////////////////////////// /////////////////////////////////////////////////////////////////////////"
      }
    }
  }
}